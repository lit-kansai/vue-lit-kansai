module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "4a51");
/******/ })
/************************************************************************/
/******/ ({

/***/ "03b4":
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__("8610");
var uid = __webpack_require__("8920");

var keys = shared('keys');

module.exports = function (key) {
  return keys[key] || (keys[key] = uid(key));
};


/***/ }),

/***/ "069a":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("6a1f");
var fails = __webpack_require__("83ab");
var has = __webpack_require__("db1b");

var defineProperty = Object.defineProperty;
var cache = {};

var thrower = function (it) { throw it; };

module.exports = function (METHOD_NAME, options) {
  if (has(cache, METHOD_NAME)) return cache[METHOD_NAME];
  if (!options) options = {};
  var method = [][METHOD_NAME];
  var ACCESSORS = has(options, 'ACCESSORS') ? options.ACCESSORS : false;
  var argument0 = has(options, 0) ? options[0] : thrower;
  var argument1 = has(options, 1) ? options[1] : undefined;

  return cache[METHOD_NAME] = !!method && !fails(function () {
    if (ACCESSORS && !DESCRIPTORS) return true;
    var O = { length: -1 };

    if (ACCESSORS) defineProperty(O, 1, { enumerable: true, get: thrower });
    else O[1] = 1;

    method.call(O, argument0, argument1);
  });
};


/***/ }),

/***/ "103d":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toPrimitive = __webpack_require__("a759");
var definePropertyModule = __webpack_require__("64da");
var createPropertyDescriptor = __webpack_require__("d64d");

module.exports = function (object, key, value) {
  var propertyKey = toPrimitive(key);
  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
  else object[propertyKey] = value;
};


/***/ }),

/***/ "1137":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("5790");
var inspectSource = __webpack_require__("b8e5");

var WeakMap = global.WeakMap;

module.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));


/***/ }),

/***/ "153c":
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__("d332");

module.exports = getBuiltIn('document', 'documentElement');


/***/ }),

/***/ "1a6b":
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__("64da").f;
var has = __webpack_require__("db1b");
var wellKnownSymbol = __webpack_require__("c209");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');

module.exports = function (it, TAG, STATIC) {
  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {
    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });
  }
};


/***/ }),

/***/ "1d43":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("c209");

exports.f = wellKnownSymbol;


/***/ }),

/***/ "1d4b":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("4c09");
var getBuiltIn = __webpack_require__("d332");
var aFunction = __webpack_require__("3fca");
var anObject = __webpack_require__("eb54");
var isObject = __webpack_require__("f183");
var create = __webpack_require__("5285");
var bind = __webpack_require__("e332");
var fails = __webpack_require__("83ab");

var nativeConstruct = getBuiltIn('Reflect', 'construct');

// `Reflect.construct` method
// https://tc39.github.io/ecma262/#sec-reflect.construct
// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it
var NEW_TARGET_BUG = fails(function () {
  function F() { /* empty */ }
  return !(nativeConstruct(function () { /* empty */ }, [], F) instanceof F);
});
var ARGS_BUG = !fails(function () {
  nativeConstruct(function () { /* empty */ });
});
var FORCED = NEW_TARGET_BUG || ARGS_BUG;

$({ target: 'Reflect', stat: true, forced: FORCED, sham: FORCED }, {
  construct: function construct(Target, args /* , newTarget */) {
    aFunction(Target);
    anObject(args);
    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
    if (ARGS_BUG && !NEW_TARGET_BUG) return nativeConstruct(Target, args, newTarget);
    if (Target == newTarget) {
      // w/o altered newTarget, optimization for 0-4 arguments
      switch (args.length) {
        case 0: return new Target();
        case 1: return new Target(args[0]);
        case 2: return new Target(args[0], args[1]);
        case 3: return new Target(args[0], args[1], args[2]);
        case 4: return new Target(args[0], args[1], args[2], args[3]);
      }
      // w/o altered newTarget, lot of arguments case
      var $args = [null];
      $args.push.apply($args, args);
      return new (bind.apply(Target, $args))();
    }
    // with altered newTarget, not support built-in constructors
    var proto = newTarget.prototype;
    var instance = create(isObject(proto) ? proto : Object.prototype);
    var result = Function.apply.call(Target, instance, args);
    return isObject(result) ? result : instance;
  }
});


/***/ }),

/***/ "1e10":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// `Symbol.prototype.description` getter
// https://tc39.github.io/ecma262/#sec-symbol.prototype.description

var $ = __webpack_require__("4c09");
var DESCRIPTORS = __webpack_require__("6a1f");
var global = __webpack_require__("5790");
var has = __webpack_require__("db1b");
var isObject = __webpack_require__("f183");
var defineProperty = __webpack_require__("64da").f;
var copyConstructorProperties = __webpack_require__("ab49");

var NativeSymbol = global.Symbol;

if (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) ||
  // Safari 12 bug
  NativeSymbol().description !== undefined
)) {
  var EmptyStringDescriptionStore = {};
  // wrap Symbol constructor for correct work with undefined description
  var SymbolWrapper = function Symbol() {
    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);
    var result = this instanceof SymbolWrapper
      ? new NativeSymbol(description)
      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
      : description === undefined ? NativeSymbol() : NativeSymbol(description);
    if (description === '') EmptyStringDescriptionStore[result] = true;
    return result;
  };
  copyConstructorProperties(SymbolWrapper, NativeSymbol);
  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;
  symbolPrototype.constructor = SymbolWrapper;

  var symbolToString = symbolPrototype.toString;
  var native = String(NativeSymbol('test')) == 'Symbol(test)';
  var regexp = /^Symbol\((.*)\)[^)]+$/;
  defineProperty(symbolPrototype, 'description', {
    configurable: true,
    get: function description() {
      var symbol = isObject(this) ? this.valueOf() : this;
      var string = symbolToString.call(symbol);
      if (has(EmptyStringDescriptionStore, symbol)) return '';
      var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');
      return desc === '' ? undefined : desc;
    }
  });

  $({ global: true, forced: true }, {
    Symbol: SymbolWrapper
  });
}


/***/ }),

/***/ "1f64":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("6a1f");
var fails = __webpack_require__("83ab");
var createElement = __webpack_require__("db86");

// Thank's IE8 for his funny defineProperty
module.exports = !DESCRIPTORS && !fails(function () {
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a != 7;
});


/***/ }),

/***/ "2564":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("eb54");

// call something on iterator step with safe closing on error
module.exports = function (iterator, fn, value, ENTRIES) {
  try {
    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (error) {
    var returnMethod = iterator['return'];
    if (returnMethod !== undefined) anObject(returnMethod.call(iterator));
    throw error;
  }
};


/***/ }),

/***/ "2634":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var redefine = __webpack_require__("619b");
var anObject = __webpack_require__("eb54");
var fails = __webpack_require__("83ab");
var flags = __webpack_require__("bb88");

var TO_STRING = 'toString';
var RegExpPrototype = RegExp.prototype;
var nativeToString = RegExpPrototype[TO_STRING];

var NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });
// FF44- RegExp#toString has a wrong name
var INCORRECT_NAME = nativeToString.name != TO_STRING;

// `RegExp.prototype.toString` method
// https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring
if (NOT_GENERIC || INCORRECT_NAME) {
  redefine(RegExp.prototype, TO_STRING, function toString() {
    var R = anObject(this);
    var p = String(R.source);
    var rf = R.flags;
    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);
    return '/' + p + '/' + f;
  }, { unsafe: true });
}


/***/ }),

/***/ "271f":
/***/ (function(module, exports, __webpack_require__) {

var path = __webpack_require__("42b2");
var has = __webpack_require__("db1b");
var wrappedWellKnownSymbolModule = __webpack_require__("1d43");
var defineProperty = __webpack_require__("64da").f;

module.exports = function (NAME) {
  var Symbol = path.Symbol || (path.Symbol = {});
  if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {
    value: wrappedWellKnownSymbolModule.f(NAME)
  });
};


/***/ }),

/***/ "2df6":
/***/ (function(module, exports, __webpack_require__) {

var toIndexedObject = __webpack_require__("d62d");
var nativeGetOwnPropertyNames = __webpack_require__("7674").f;

var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return nativeGetOwnPropertyNames(it);
  } catch (error) {
    return windowNames.slice();
  }
};

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]'
    ? getWindowNames(it)
    : nativeGetOwnPropertyNames(toIndexedObject(it));
};


/***/ }),

/***/ "33b3":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("83ab");
var classof = __webpack_require__("5b59");

var split = ''.split;

// fallback for non-array-like ES3 and non-enumerable old V8 strings
module.exports = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins
  return !Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) == 'String' ? split.call(it, '') : Object(it);
} : Object;


/***/ }),

/***/ "3678":
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "3aed":
/***/ (function(module, exports, __webpack_require__) {

var toIndexedObject = __webpack_require__("d62d");
var toLength = __webpack_require__("c4b4");
var toAbsoluteIndex = __webpack_require__("63a8");

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

module.exports = {
  // `Array.prototype.includes` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};


/***/ }),

/***/ "3fca":
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') {
    throw TypeError(String(it) + ' is not a function');
  } return it;
};


/***/ }),

/***/ "3fd8":
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "3ff5":
/***/ (function(module, exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__("a0c9");
var enumBugKeys = __webpack_require__("4a24");

// `Object.keys` method
// https://tc39.github.io/ecma262/#sec-object.keys
module.exports = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys);
};


/***/ }),

/***/ "42b2":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("5790");

module.exports = global;


/***/ }),

/***/ "450a":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("5790");
var setGlobal = __webpack_require__("e230");

var SHARED = '__core-js_shared__';
var store = global[SHARED] || setGlobal(SHARED, {});

module.exports = store;


/***/ }),

/***/ "4826":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var TO_STRING_TAG_SUPPORT = __webpack_require__("98d7");
var classof = __webpack_require__("c515");

// `Object.prototype.toString` method implementation
// https://tc39.github.io/ecma262/#sec-object.prototype.tostring
module.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {
  return '[object ' + classof(this) + ']';
};


/***/ }),

/***/ "4a24":
/***/ (function(module, exports) {

// IE8- don't enum bug keys
module.exports = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];


/***/ }),

/***/ "4a51":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "LiTKansaiLogo", function() { return /* reexport */ components_LiTKansaiLogo; });
__webpack_require__.d(__webpack_exports__, "LiTKansaiSplash", function() { return /* reexport */ components_LiTKansaiSplash; });

// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js
// This file is imported into lib/wc client bundles.

if (typeof window !== 'undefined') {
  var currentScript = window.document.currentScript
  if (true) {
    var getCurrentScript = __webpack_require__("b613")
    currentScript = getCurrentScript()

    // for backward compatibility, because previously we directly included the polyfill
    if (!('currentScript' in document)) {
      Object.defineProperty(document, 'currentScript', { get: getCurrentScript })
    }
  }

  var src = currentScript && currentScript.src.match(/(.+\/)[^/]+\.js(\?.*)?$/)
  if (src) {
    __webpack_require__.p = src[1] // eslint-disable-line
  }
}

// Indicate to webpack that this file can be concatenated
/* harmony default export */ var setPublicPath = (null);

// EXTERNAL MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/core-js/modules/es.object.entries.js
var es_object_entries = __webpack_require__("6c66");

// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
// EXTERNAL MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/core-js/modules/es.symbol.js
var es_symbol = __webpack_require__("7863");

// EXTERNAL MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/core-js/modules/es.symbol.description.js
var es_symbol_description = __webpack_require__("1e10");

// EXTERNAL MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/core-js/modules/es.symbol.iterator.js
var es_symbol_iterator = __webpack_require__("dbc8");

// EXTERNAL MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/core-js/modules/es.array.iterator.js
var es_array_iterator = __webpack_require__("b69d");

// EXTERNAL MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/core-js/modules/es.object.to-string.js
var es_object_to_string = __webpack_require__("d2e8");

// EXTERNAL MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/core-js/modules/es.string.iterator.js
var es_string_iterator = __webpack_require__("dcf1");

// EXTERNAL MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__("b3b8");

// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js







function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}
// EXTERNAL MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/core-js/modules/es.array.from.js
var es_array_from = __webpack_require__("a31f");

// EXTERNAL MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/core-js/modules/es.array.slice.js
var es_array_slice = __webpack_require__("a6e3");

// EXTERNAL MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/core-js/modules/es.function.name.js
var es_function_name = __webpack_require__("61f4");

// EXTERNAL MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/core-js/modules/es.regexp.to-string.js
var es_regexp_to_string = __webpack_require__("2634");

// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}
// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js







function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/@babel/runtime/helpers/esm/slicedToArray.js




function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2bf52034-vue-loader-template"}!C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/cache-loader/dist/cjs.js??ref--0-0!C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/vue-loader/lib??vue-loader-options!C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/src/components/LiTKansaiLogo.vue?vue&type=template&id=bf28bb8c&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{"id":"splash-logo"}})}
var staticRenderFns = []


// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/src/components/LiTKansaiLogo.vue?vue&type=template&id=bf28bb8c&

// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/@babel/runtime/helpers/esm/classCallCheck.js
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/@babel/runtime/helpers/esm/createClass.js
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}
// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}
// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/@babel/runtime/helpers/esm/inherits.js

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}
// EXTERNAL MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/core-js/modules/es.reflect.construct.js
var es_reflect_construct = __webpack_require__("1d4b");

// EXTERNAL MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/core-js/modules/es.object.get-prototype-of.js
var es_object_get_prototype_of = __webpack_require__("7d30");

// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}
// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js



function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/@babel/runtime/helpers/esm/typeof.js







function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}
// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}
// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js


function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}
// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/@babel/runtime/helpers/esm/createSuper.js




function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}
// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/tslib/tslib.es6.js
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}

// EXTERNAL MODULE: external {"commonjs":"vue","commonjs2":"vue","root":"Vue"}
var external_commonjs_vue_commonjs2_vue_root_Vue_ = __webpack_require__("8bbf");
var external_commonjs_vue_commonjs2_vue_root_Vue_default = /*#__PURE__*/__webpack_require__.n(external_commonjs_vue_commonjs2_vue_root_Vue_);

// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/vue-class-component/dist/vue-class-component.esm.js
/**
  * vue-class-component v7.2.5
  * (c) 2015-present Evan You
  * @license MIT
  */


function vue_class_component_esm_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    vue_class_component_esm_typeof = function (obj) {
      return typeof obj;
    };
  } else {
    vue_class_component_esm_typeof = function (obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return vue_class_component_esm_typeof(obj);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

    return arr2;
  }
}

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

// The rational behind the verbose Reflect-feature check below is the fact that there are polyfills
// which add an implementation for Reflect.defineMetadata but not for Reflect.getOwnMetadataKeys.
// Without this check consumers will encounter hard to track down runtime errors.
function reflectionIsSupported() {
  return typeof Reflect !== 'undefined' && Reflect.defineMetadata && Reflect.getOwnMetadataKeys;
}
function copyReflectionMetadata(to, from) {
  forwardMetadata(to, from);
  Object.getOwnPropertyNames(from.prototype).forEach(function (key) {
    forwardMetadata(to.prototype, from.prototype, key);
  });
  Object.getOwnPropertyNames(from).forEach(function (key) {
    forwardMetadata(to, from, key);
  });
}

function forwardMetadata(to, from, propertyKey) {
  var metaKeys = propertyKey ? Reflect.getOwnMetadataKeys(from, propertyKey) : Reflect.getOwnMetadataKeys(from);
  metaKeys.forEach(function (metaKey) {
    var metadata = propertyKey ? Reflect.getOwnMetadata(metaKey, from, propertyKey) : Reflect.getOwnMetadata(metaKey, from);

    if (propertyKey) {
      Reflect.defineMetadata(metaKey, metadata, to, propertyKey);
    } else {
      Reflect.defineMetadata(metaKey, metadata, to);
    }
  });
}

var fakeArray = {
  __proto__: []
};
var hasProto = fakeArray instanceof Array;
function createDecorator(factory) {
  return function (target, key, index) {
    var Ctor = typeof target === 'function' ? target : target.constructor;

    if (!Ctor.__decorators__) {
      Ctor.__decorators__ = [];
    }

    if (typeof index !== 'number') {
      index = undefined;
    }

    Ctor.__decorators__.push(function (options) {
      return factory(options, key, index);
    });
  };
}
function mixins() {
  for (var _len = arguments.length, Ctors = new Array(_len), _key = 0; _key < _len; _key++) {
    Ctors[_key] = arguments[_key];
  }

  return external_commonjs_vue_commonjs2_vue_root_Vue_default.a.extend({
    mixins: Ctors
  });
}
function isPrimitive(value) {
  var type = vue_class_component_esm_typeof(value);

  return value == null || type !== 'object' && type !== 'function';
}
function warn(message) {
  if (typeof console !== 'undefined') {
    console.warn('[vue-class-component] ' + message);
  }
}

function collectDataFromConstructor(vm, Component) {
  // override _init to prevent to init as Vue instance
  var originalInit = Component.prototype._init;

  Component.prototype._init = function () {
    var _this = this;

    // proxy to actual vm
    var keys = Object.getOwnPropertyNames(vm); // 2.2.0 compat (props are no longer exposed as self properties)

    if (vm.$options.props) {
      for (var key in vm.$options.props) {
        if (!vm.hasOwnProperty(key)) {
          keys.push(key);
        }
      }
    }

    keys.forEach(function (key) {
      Object.defineProperty(_this, key, {
        get: function get() {
          return vm[key];
        },
        set: function set(value) {
          vm[key] = value;
        },
        configurable: true
      });
    });
  }; // should be acquired class property values


  var data = new Component(); // restore original _init to avoid memory leak (#209)

  Component.prototype._init = originalInit; // create plain data object

  var plainData = {};
  Object.keys(data).forEach(function (key) {
    if (data[key] !== undefined) {
      plainData[key] = data[key];
    }
  });

  if (false) {}

  return plainData;
}

var $internalHooks = ['data', 'beforeCreate', 'created', 'beforeMount', 'mounted', 'beforeDestroy', 'destroyed', 'beforeUpdate', 'updated', 'activated', 'deactivated', 'render', 'errorCaptured', 'serverPrefetch' // 2.6
];
function componentFactory(Component) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  options.name = options.name || Component._componentTag || Component.name; // prototype props.

  var proto = Component.prototype;
  Object.getOwnPropertyNames(proto).forEach(function (key) {
    if (key === 'constructor') {
      return;
    } // hooks


    if ($internalHooks.indexOf(key) > -1) {
      options[key] = proto[key];
      return;
    }

    var descriptor = Object.getOwnPropertyDescriptor(proto, key);

    if (descriptor.value !== void 0) {
      // methods
      if (typeof descriptor.value === 'function') {
        (options.methods || (options.methods = {}))[key] = descriptor.value;
      } else {
        // typescript decorated data
        (options.mixins || (options.mixins = [])).push({
          data: function data() {
            return _defineProperty({}, key, descriptor.value);
          }
        });
      }
    } else if (descriptor.get || descriptor.set) {
      // computed properties
      (options.computed || (options.computed = {}))[key] = {
        get: descriptor.get,
        set: descriptor.set
      };
    }
  });
  (options.mixins || (options.mixins = [])).push({
    data: function data() {
      return collectDataFromConstructor(this, Component);
    }
  }); // decorate options

  var decorators = Component.__decorators__;

  if (decorators) {
    decorators.forEach(function (fn) {
      return fn(options);
    });
    delete Component.__decorators__;
  } // find super


  var superProto = Object.getPrototypeOf(Component.prototype);
  var Super = superProto instanceof external_commonjs_vue_commonjs2_vue_root_Vue_default.a ? superProto.constructor : external_commonjs_vue_commonjs2_vue_root_Vue_default.a;
  var Extended = Super.extend(options);
  forwardStaticMembers(Extended, Component, Super);

  if (reflectionIsSupported()) {
    copyReflectionMetadata(Extended, Component);
  }

  return Extended;
}
var reservedPropertyNames = [// Unique id
'cid', // Super Vue constructor
'super', // Component options that will be used by the component
'options', 'superOptions', 'extendOptions', 'sealedOptions', // Private assets
'component', 'directive', 'filter'];
var shouldIgnore = {
  prototype: true,
  arguments: true,
  callee: true,
  caller: true
};

function forwardStaticMembers(Extended, Original, Super) {
  // We have to use getOwnPropertyNames since Babel registers methods as non-enumerable
  Object.getOwnPropertyNames(Original).forEach(function (key) {
    // Skip the properties that should not be overwritten
    if (shouldIgnore[key]) {
      return;
    } // Some browsers does not allow reconfigure built-in properties


    var extendedDescriptor = Object.getOwnPropertyDescriptor(Extended, key);

    if (extendedDescriptor && !extendedDescriptor.configurable) {
      return;
    }

    var descriptor = Object.getOwnPropertyDescriptor(Original, key); // If the user agent does not support `__proto__` or its family (IE <= 10),
    // the sub class properties may be inherited properties from the super class in TypeScript.
    // We need to exclude such properties to prevent to overwrite
    // the component options object which stored on the extended constructor (See #192).
    // If the value is a referenced value (object or function),
    // we can check equality of them and exclude it if they have the same reference.
    // If it is a primitive value, it will be forwarded for safety.

    if (!hasProto) {
      // Only `cid` is explicitly exluded from property forwarding
      // because we cannot detect whether it is a inherited property or not
      // on the no `__proto__` environment even though the property is reserved.
      if (key === 'cid') {
        return;
      }

      var superDescriptor = Object.getOwnPropertyDescriptor(Super, key);

      if (!isPrimitive(descriptor.value) && superDescriptor && superDescriptor.value === descriptor.value) {
        return;
      }
    } // Warn if the users manually declare reserved properties


    if (false) {}

    Object.defineProperty(Extended, key, descriptor);
  });
}

function vue_class_component_esm_Component(options) {
  if (typeof options === 'function') {
    return componentFactory(options);
  }

  return function (Component) {
    return componentFactory(Component, options);
  };
}

vue_class_component_esm_Component.registerHooks = function registerHooks(keys) {
  $internalHooks.push.apply($internalHooks, _toConsumableArray(keys));
};

/* harmony default export */ var vue_class_component_esm = (vue_class_component_esm_Component);


// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/vue-property-decorator/lib/vue-property-decorator.js
/** vue-property-decorator verson 8.5.1 MIT LICENSE copyright 2020 kaorun343 */
/// <reference types='reflect-metadata'/>




/** Used for keying reactive provide/inject properties */
var reactiveInjectKey = '__reactiveInject__';
/**
 * decorator of an inject
 * @param from key
 * @return PropertyDecorator
 */
function Inject(options) {
    return createDecorator(function (componentOptions, key) {
        if (typeof componentOptions.inject === 'undefined') {
            componentOptions.inject = {};
        }
        if (!Array.isArray(componentOptions.inject)) {
            componentOptions.inject[key] = options || key;
        }
    });
}
/**
 * decorator of a reactive inject
 * @param from key
 * @return PropertyDecorator
 */
function InjectReactive(options) {
    return createDecorator(function (componentOptions, key) {
        if (typeof componentOptions.inject === 'undefined') {
            componentOptions.inject = {};
        }
        if (!Array.isArray(componentOptions.inject)) {
            var fromKey_1 = !!options ? options.from || options : key;
            var defaultVal_1 = (!!options && options.default) || undefined;
            if (!componentOptions.computed)
                componentOptions.computed = {};
            componentOptions.computed[key] = function () {
                var obj = this[reactiveInjectKey];
                return obj ? obj[fromKey_1] : defaultVal_1;
            };
            componentOptions.inject[reactiveInjectKey] = reactiveInjectKey;
        }
    });
}
function produceProvide(original) {
    var provide = function () {
        var _this = this;
        var rv = typeof original === 'function' ? original.call(this) : original;
        rv = Object.create(rv || null);
        // set reactive services (propagates previous services if necessary)
        rv[reactiveInjectKey] = this[reactiveInjectKey] || {};
        for (var i in provide.managed) {
            rv[provide.managed[i]] = this[i];
        }
        var _loop_1 = function (i) {
            rv[provide.managedReactive[i]] = this_1[i]; // Duplicates the behavior of `@Provide`
            Object.defineProperty(rv[reactiveInjectKey], provide.managedReactive[i], {
                enumerable: true,
                get: function () { return _this[i]; },
            });
        };
        var this_1 = this;
        for (var i in provide.managedReactive) {
            _loop_1(i);
        }
        return rv;
    };
    provide.managed = {};
    provide.managedReactive = {};
    return provide;
}
function needToProduceProvide(original) {
    return (typeof original !== 'function' ||
        (!original.managed && !original.managedReactive));
}
/**
 * decorator of a provide
 * @param key key
 * @return PropertyDecorator | void
 */
function Provide(key) {
    return createDecorator(function (componentOptions, k) {
        var provide = componentOptions.provide;
        if (needToProduceProvide(provide)) {
            provide = componentOptions.provide = produceProvide(provide);
        }
        provide.managed[k] = key || k;
    });
}
/**
 * decorator of a reactive provide
 * @param key key
 * @return PropertyDecorator | void
 */
function ProvideReactive(key) {
    return createDecorator(function (componentOptions, k) {
        var provide = componentOptions.provide;
        // inject parent reactive services (if any)
        if (!Array.isArray(componentOptions.inject)) {
            componentOptions.inject = componentOptions.inject || {};
            componentOptions.inject[reactiveInjectKey] = {
                from: reactiveInjectKey,
                default: {},
            };
        }
        if (needToProduceProvide(provide)) {
            provide = componentOptions.provide = produceProvide(provide);
        }
        provide.managedReactive[k] = key || k;
    });
}
/** @see {@link https://github.com/vuejs/vue-class-component/blob/master/src/reflect.ts} */
var reflectMetadataIsSupported = typeof Reflect !== 'undefined' && typeof Reflect.getMetadata !== 'undefined';
function applyMetadata(options, target, key) {
    if (reflectMetadataIsSupported) {
        if (!Array.isArray(options) &&
            typeof options !== 'function' &&
            typeof options.type === 'undefined') {
            var type = Reflect.getMetadata('design:type', target, key);
            if (type !== Object) {
                options.type = type;
            }
        }
    }
}
/**
 * decorator of model
 * @param  event event name
 * @param options options
 * @return PropertyDecorator
 */
function Model(event, options) {
    if (options === void 0) { options = {}; }
    return function (target, key) {
        applyMetadata(options, target, key);
        createDecorator(function (componentOptions, k) {
            ;
            (componentOptions.props || (componentOptions.props = {}))[k] = options;
            componentOptions.model = { prop: k, event: event || k };
        })(target, key);
    };
}
/**
 * decorator of a prop
 * @param  options the options for the prop
 * @return PropertyDecorator | void
 */
function Prop(options) {
    if (options === void 0) { options = {}; }
    return function (target, key) {
        applyMetadata(options, target, key);
        createDecorator(function (componentOptions, k) {
            ;
            (componentOptions.props || (componentOptions.props = {}))[k] = options;
        })(target, key);
    };
}
/**
 * decorator of a synced prop
 * @param propName the name to interface with from outside, must be different from decorated property
 * @param options the options for the synced prop
 * @return PropertyDecorator | void
 */
function PropSync(propName, options) {
    if (options === void 0) { options = {}; }
    // @ts-ignore
    return function (target, key) {
        applyMetadata(options, target, key);
        createDecorator(function (componentOptions, k) {
            ;
            (componentOptions.props || (componentOptions.props = {}))[propName] = options;
            (componentOptions.computed || (componentOptions.computed = {}))[k] = {
                get: function () {
                    return this[propName];
                },
                set: function (value) {
                    // @ts-ignore
                    this.$emit("update:" + propName, value);
                },
            };
        })(target, key);
    };
}
/**
 * decorator of a watch function
 * @param  path the path or the expression to observe
 * @param  WatchOption
 * @return MethodDecorator
 */
function Watch(path, options) {
    if (options === void 0) { options = {}; }
    var _a = options.deep, deep = _a === void 0 ? false : _a, _b = options.immediate, immediate = _b === void 0 ? false : _b;
    return createDecorator(function (componentOptions, handler) {
        if (typeof componentOptions.watch !== 'object') {
            componentOptions.watch = Object.create(null);
        }
        var watch = componentOptions.watch;
        if (typeof watch[path] === 'object' && !Array.isArray(watch[path])) {
            watch[path] = [watch[path]];
        }
        else if (typeof watch[path] === 'undefined') {
            watch[path] = [];
        }
        watch[path].push({ handler: handler, deep: deep, immediate: immediate });
    });
}
// Code copied from Vue/src/shared/util.js
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = function (str) { return str.replace(hyphenateRE, '-$1').toLowerCase(); };
/**
 * decorator of an event-emitter function
 * @param  event The name of the event
 * @return MethodDecorator
 */
function Emit(event) {
    return function (_target, propertyKey, descriptor) {
        var key = hyphenate(propertyKey);
        var original = descriptor.value;
        descriptor.value = function emitter() {
            var _this = this;
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var emit = function (returnValue) {
                var emitName = event || key;
                if (returnValue === undefined) {
                    if (args.length === 0) {
                        _this.$emit(emitName);
                    }
                    else if (args.length === 1) {
                        _this.$emit(emitName, args[0]);
                    }
                    else {
                        _this.$emit.apply(_this, [emitName].concat(args));
                    }
                }
                else {
                    if (args.length === 0) {
                        _this.$emit(emitName, returnValue);
                    }
                    else if (args.length === 1) {
                        _this.$emit(emitName, returnValue, args[0]);
                    }
                    else {
                        _this.$emit.apply(_this, [emitName, returnValue].concat(args));
                    }
                }
            };
            var returnValue = original.apply(this, args);
            if (isPromise(returnValue)) {
                returnValue.then(emit);
            }
            else {
                emit(returnValue);
            }
            return returnValue;
        };
    };
}
/**
 * decorator of a ref prop
 * @param refKey the ref key defined in template
 */
function Ref(refKey) {
    return createDecorator(function (options, key) {
        options.computed = options.computed || {};
        options.computed[key] = {
            cache: false,
            get: function () {
                return this.$refs[refKey || key];
            },
        };
    });
}
function isPromise(obj) {
    return obj instanceof Promise || (obj && typeof obj.then === 'function');
}

// EXTERNAL MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/lottie-web/build/player/lottie.js
var lottie = __webpack_require__("782a");
var lottie_default = /*#__PURE__*/__webpack_require__.n(lottie);

// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/src/anim.ts
/*
 * Copyright 2020 LiT Kansai
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var logo={v:"5.6.3",fr:30,ip:0,op:60,w:1080,h:1080,nm:"コンポ 1",ddd:0,assets:[{id:"comp_0",layers:[{ddd:0,ind:1,ty:0,nm:"Your_Text",refId:"comp_1",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[960,540,0],ix:2},a:{a:0,k:[960,540,0],ix:1},s:{a:0,k:[100,100,100],ix:6}},ao:0,w:1920,h:1080,ip:0,op:150,st:0,bm:0}]},{id:"comp_1",layers:[{ddd:0,ind:1,ty:4,nm:"Life is Tech ! KANSAI LOGO_1Layerアウトライン",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[960,540,0],ix:2},a:{a:0,k:[1003,951.373,0],ix:1},s:{a:0,k:[50.001,50.001,100],ix:6}},ao:0,shapes:[{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-128.357,-159.105],[-55.638,-159.105],[-55.638,-28.796],[-54.175,-28.796],[40.018,-159.105],[119.085,-159.105],[23.912,-32.211],[128.357,159.105],[48.804,159.105],[-18.546,24.894],[-55.638,73.696],[-55.638,159.105],[-128.357,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[165.507,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 1",np:2,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[4.225,16.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[-3.908,16.922],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-0.485,-104.443],[-2.439,-104.443],[-68.815,159.106],[-142.024,159.106],[-42.948,-159.107],[42.95,-159.107],[142.024,159.106],[65.888,159.106]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[492.009,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 2",np:2,cix:2,bm:0,ix:2,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,25.673],[-25.672,0],[0,-25.675],[25.675,0]],o:[[0,-25.675],[25.675,0],[0,25.673],[-25.672,0]],v:[[-46.485,0],[-0.001,-46.484],[46.485,0],[-0.001,46.484]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[490.399,1148.471],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 3",np:2,cix:2,bm:0,ix:3,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[2.599,20.828],[0,18.545],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-2.607,-20.172],[0,-18.867],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[-1.63,-16.917],[-2.61,-20.816],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[1.625,17.571],[2.598,20.176],[0,0],[0,0],[0,0]],v:[[-114.205,-159.105],[-40.997,-159.105],[26.354,-0.489],[53.686,69.305],[55.638,69.305],[49.295,12.688],[45.389,-46.364],[45.389,-159.105],[114.206,-159.105],[114.206,159.105],[40.997,159.105],[-26.356,0.489],[-53.684,-68.814],[-55.639,-68.814],[-49.292,-12.199],[-45.39,46.365],[-45.39,159.105],[-114.205,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[833.644,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 4",np:2,cix:2,bm:0,ix:4,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[-14.154,-6.176],[-13.995,0],[-7.649,5.538],[0,9.442],[2.272,3.585],[4.225,2.767],[6.014,2.443],[7.809,2.929],[0,0],[8.295,5.206],[6.175,7.001],[3.739,9.27],[0,11.715],[-5.694,11.549],[-10.252,8.625],[-14.323,4.882],[-17.253,0],[-18.227,-7.151],[-14.641,-13.666],[0,0],[10.737,4.392],[13.665,0],[7.642,-5.04],[0,-9.104],[-9.762,-4.879],[-15.295,-5.529],[0,0],[-12.198,-13.666],[0,-22.449],[5.525,-11.872],[10.412,-8.943],[15.288,-5.368],[19.843,0],[20.986,7.642],[17.242,15.298]],o:[[12.032,9.76],[14.155,6.184],[16.594,0],[7.641,-5.529],[0,-4.882],[-2.278,-3.576],[-4.237,-2.761],[-6.027,-2.438],[0,0],[-8.786,-3.246],[-8.299,-5.202],[-6.185,-6.992],[-3.743,-9.274],[0,-13.008],[5.693,-11.549],[10.249,-8.618],[14.312,-4.878],[19.519,0],[18.218,7.162],[0,0],[-11.066,-8.13],[-10.737,-4.391],[-13.994,0],[-7.649,5.051],[0,9.761],[9.761,4.882],[0,0],[21.145,7.812],[12.205,13.663],[0,13.345],[-5.536,11.881],[-10.415,8.955],[-15.299,5.371],[-21.476,0],[-20.989,-7.641],[0,0]],v:[[-80.773,69.793],[-41.484,93.708],[0.733,102.979],[37.093,94.682],[48.558,72.232],[45.145,59.543],[35.386,50.026],[20.012,42.216],[-0.73,34.164],[-41.728,16.594],[-67.349,3.906],[-89.071,-14.397],[-103.958,-38.799],[-109.569,-70.281],[-101.03,-107.125],[-77.111,-137.386],[-40.264,-157.642],[7.078,-164.963],[63.693,-154.225],[112.984,-122.989],[76.381,-77.6],[43.682,-96.391],[7.078,-102.979],[-25.38,-95.416],[-36.847,-74.184],[-22.207,-52.223],[15.373,-36.603],[53.931,-20.012],[103.954,12.203],[122.259,66.375],[113.963,104.199],[90.045,135.435],[51.49,156.908],[-1.219,164.962],[-64.911,153.495],[-122.259,119.085]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[1175.522,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 5",np:2,cix:2,bm:0,ix:5,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[4.228,16.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[-3.906,16.922],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-0.488,-104.445],[-2.439,-104.445],[-68.815,159.105],[-142.024,159.105],[-42.949,-159.105],[42.95,-159.105],[142.024,159.105],[65.887,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[1516.912,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 6",np:2,cix:2,bm:0,ix:6,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,25.673],[-25.672,0],[0,-25.675],[25.675,0]],o:[[0,-25.675],[25.675,0],[0,25.673],[-25.672,0]],v:[[-46.485,0],[-0.002,-46.484],[46.485,0],[-0.002,46.484]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[1515.392,1148.471],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 7",np:2,cix:2,bm:0,ix:7,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-110.302,98.587],[-36.114,98.587],[-36.114,-98.586],[-110.302,-98.586],[-110.302,-159.106],[110.302,-159.106],[110.302,-98.586],[36.114,-98.586],[36.114,98.587],[110.302,98.587],[110.302,159.106],[-110.302,159.106]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[1858.547,1035.85],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 8",np:2,cix:2,bm:0,ix:8,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[57.355,-57.356],[186.164,0],[87.328,37.703],[5.771,-3.56],[102.949,-23.11],[60.15,-1.685],[-46.317,35.985],[-10.097,12.43],[-0.672,0.864],[8.233,7.593],[38.344,80.766],[0,0],[-0.485,-1.093],[-67.267,-65.546],[47.357,-36.789],[29.182,-10.938],[-2.303,-12.892],[-26.693,-0.131],[-1.922,0],[-106.192,23.833],[-27.971,13.037],[-98.336,0],[-139.781,139.782],[-36.491,82.695]],o:[[-33.792,71.16],[-131.636,131.64],[-95.799,0],[-6.645,-2.867],[-14.291,6.832],[-85.415,19.171],[38.167,-16.665],[64.733,-50.292],[0.776,-0.736],[6.874,-8.842],[-66.186,-61.06],[0,0],[0.483,1.096],[38.354,85.675],[-18.885,21.733],[-60.335,46.873],[-24.369,9.126],[2.339,13.062],[1.869,0.008],[64.532,-0.003],[98.108,-22.023],[90.045,37.446],[197.682,0],[65.833,-65.838],[0,0]],v:[[699.185,-244.165],[561.916,-50.053],[69.092,154.083],[-206.89,97.262],[-226.629,98.701],[-438.979,173.06],[-663.949,200.583],[-525.938,121.09],[-403.097,0.952],[-400.925,-1.451],[-403.333,-30.519],[-560.752,-244.165],[-608.149,-244.165],[-606.726,-240.87],[-447.639,-13.125],[-552.385,87.042],[-716.293,175.344],[-744.317,215.657],[-703.089,244.153],[-697.418,244.164],[-429.538,215.125],[-214.721,140.767],[69.092,197.191],[592.401,-19.569],[746.62,-244.165]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[933.906,1501.123],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 9",np:2,cix:2,bm:0,ix:9,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[88.714,99.713],[0,0],[-24.312,-117.679]],o:[[-25.065,-129.23],[0,0],[80.671,91.367],[0,0]],v:[[101.674,174.406],[-71.211,-174.406],[-101.674,-143.799],[57.738,174.406]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[1627.738,641.476],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 10",np:2,cix:2,bm:0,ix:10,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[-80.115,91.131],[0,0],[24.965,-128.699]],o:[[24.209,-117.189],[0,0],[-88.113,99.468],[0,0]],v:[[-57.224,173.789],[101.164,-143.269],[70.643,-173.789],[-101.164,173.789]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[377.748,642.093],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 11",np:2,cix:2,bm:0,ix:11,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[9.204,7.889],[0,0],[-7.892,9.206],[0,0],[18.406,-17.111],[-5.731,-30.75],[3.313,-3.313],[0,0],[0,0],[0,0],[-20.284,-2.097],[-22.962,22.96],[15.613,29.695]],o:[[-7.893,9.208],[0,0],[-9.21,-7.891],[0,0],[-23.555,-1.302],[-24.802,23.061],[3.42,18.34],[0,0],[0,0],[0,0],[28.21,-28.209],[18.394,1.903],[26.542,-26.545],[0,0]],v:[[50.098,-0.672],[19.013,1.722],[-19.101,-30.946],[-21.496,-62.032],[13.849,-103.272],[-52.119,-79.663],[-83.667,-0.794],[-98.235,36.539],[-108.152,46.461],[-52.96,104.574],[-46.09,97.701],[10.475,63.906],[79.251,38.962],[92.539,-50.191]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[1121.367,499.693],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 12",np:2,cix:2,bm:0,ix:12,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[7.468,-7.469],[7.465,7.469],[-7.467,7.465],[-7.466,-7.469]],o:[[-7.466,7.469],[-7.467,-7.469],[7.465,-7.469],[7.468,7.465]],v:[[-29.151,56.554],[-56.193,56.554],[-56.193,29.512],[-29.151,29.512]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[0,0],[0,0],[-12.309,-12.31],[0,0],[-12.308,12.309],[0,0]],o:[[0,0],[-12.309,12.31],[0,0],[12.309,12.309],[0,0],[0,0]],v:[[30.959,-88.345],[-76.766,19.381],[-76.766,64.146],[-64.876,76.036],[-20.114,76.036],[89.075,-33.152]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[899.883,716.865],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 13",np:4,cix:2,bm:0,ix:13,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[5.032,-10.067],[0,0],[11.334,41.901],[-18.247,-21.133],[0.142,10.382],[-2.967,-13.408],[-1.317,7.85],[-10.106,-8.815]],o:[[0,0],[-28.542,15.876],[-7.55,-27.919],[5.049,5.845],[-0.156,-11.307],[2.013,9.083],[1.993,-11.905],[16.219,14.142]],v:[[57.096,15.182],[23.278,48.999],[-42.464,10.039],[-17.174,-10.326],[-4.912,-19.112],[11.083,-18.985],[28.27,-19.367],[52.586,-21.487]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[19.891,19.891],[19.894,3.979],[17.682,15.028],[-10.905,-44.975],[-43.868,28.842],[0,0]],o:[[-19.891,-19.891],[-19.89,-3.977],[0,0],[13.371,55.144],[0,0],[6.579,-13.162]],v:[[58.851,-38.511],[-0.822,-65.476],[-71.104,-91.554],[-69.114,-19.284],[29.235,62.711],[73.44,18.51]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[863.548,486.603],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 14",np:4,cix:2,bm:0,ix:14,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[-13.785,13.785],[0,0],[12.312,12.31],[0,0],[12.308,-12.307],[0,0],[-12.311,-12.309],[0,0]],o:[[0,0],[13.786,-13.785],[0,0],[-12.308,-12.309],[0,0],[-12.311,12.308],[0,0],[12.311,12.31]],v:[[128.534,128.501],[128.534,128.501],[131.684,80.584],[-69.427,-131.653],[-114.187,-131.653],[-131.685,-114.156],[-131.685,-69.396],[80.618,131.652]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[1046.143,662.187],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 15",np:2,cix:2,bm:0,ix:15,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[22.87,59.992],[-69.384,-44.227],[-51.572,-59.992],[26.219,27.888],[54.92,2.479],[69.384,18.818]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[518.659,426.998],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 16",np:2,cix:2,bm:0,ix:16,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-2.63,-58.411],[-14.034,-74.906],[-65.129,-39.57],[-53.724,-23.078],[-37.879,-34.035],[18.476,47.454],[2.629,58.411],[14.036,74.906],[65.129,39.571],[53.722,23.078],[37.879,34.036],[-18.473,-47.453]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[590.918,358.591],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 17",np:2,cix:2,bm:0,ix:17,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-13.757,-39.784],[3.403,-5.724],[35.357,-21.822],[44.375,-3.911],[12.596,12.096],[39.486,65.47],[18.239,76.171],[-44.375,-48.132],[11.277,-76.171],[20.829,-57.207]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[658.075,309.299],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 18",np:2,cix:2,bm:0,ix:18,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-6.342,76.056],[-54.049,-54.696],[4.496,-76.056],[11.639,-56.479],[-25.666,-42.869],[-13,-8.15],[21.536,-20.75],[28.14,-2.65],[-6.396,9.95],[7.683,48.547],[46.838,34.264],[54.049,54.023]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[759.765,272.599],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 19",np:2,cix:2,bm:0,ix:19,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[22.943,-53.782],[19.811,-73.587],[-41.547,-63.887],[-38.415,-44.081],[-19.388,-47.087],[-3.915,50.774],[-22.945,53.783],[-19.813,73.587],[41.547,63.888],[38.416,44.081],[19.388,47.089],[3.913,-50.773]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[887.641,239.73],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 20",np:2,cix:2,bm:0,ix:20,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[7.733,0],[2.096,-0.718],[1.701,-1.572],[0.984,-2.485],[0,-3.407],[-3.54,-3.209],[-5.767,-2.883],[-3.535,-2.227],[-2.887,-3.145],[-1.836,-4.325],[0,-5.899],[2.163,-5.24],[3.598,-3.605],[4.849,-1.833],[5.372,0],[6.549,3.011],[3.932,4.588],[0,0],[-4.261,-2.093],[-4.457,0],[-3.28,3.41],[0,6.164],[3.932,3.539],[6.025,3.015],[3.343,2.232],[2.556,3.082],[1.505,4.127],[0,5.769],[-2.294,5.178],[-3.733,3.411],[-4.72,1.642],[-4.851,0],[-5.576,-2.293],[-3.805,-4.454]],o:[[-5.11,-6.158],[-2.229,0],[-2.096,0.724],[-1.707,1.574],[-0.981,2.491],[0,5.9],[3.537,3.213],[3.407,1.704],[3.54,2.23],[2.88,3.144],[1.832,4.327],[0,6.816],[-2.163,5.244],[-3.61,3.605],[-4.849,1.836],[-7.735,0],[-6.556,-3.014],[0,0],[3.015,3.672],[4.256,2.099],[4.979,0],[3.272,-3.407],[0,-6.026],[-3.93,-3.537],[-3.803,-1.836],[-3.344,-2.225],[-2.553,-3.078],[-1.509,-4.128],[0,-7.203],[2.289,-5.175],[3.736,-3.407],[4.717,-1.636],[7.076,0],[5.569,2.295],[0,0]],v:[[25.949,-42.659],[6.684,-51.899],[0.196,-50.819],[-5.504,-47.377],[-9.535,-41.284],[-11.01,-32.438],[-5.7,-18.774],[8.256,-9.631],[18.673,-3.734],[28.311,4.325],[35.385,15.531],[38.138,30.864],[34.895,48.95],[26.247,62.221],[13.564,70.378],[-1.768,73.13],[-23.196,68.611],[-38.926,57.209],[-26.147,39.907],[-15.235,48.556],[-2.163,51.704],[10.224,46.591],[15.138,32.24],[9.24,17.889],[-5.7,8.061],[-16.415,1.965],[-25.263,-5.996],[-31.356,-16.807],[-33.616,-31.652],[-30.176,-50.228],[-21.134,-63.105],[-8.452,-70.674],[5.899,-73.13],[24.87,-69.689],[38.926,-59.566]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[978.889,230.589],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 21",np:2,cix:2,bm:0,ix:21,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[9.955,-45.257],[-7.997,72.515],[-30.934,69.019],[-12.981,-48.754],[-38.826,-52.693],[-35.805,-72.515],[38.827,-61.138],[35.804,-41.319]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[1121.475,236.785],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 22",np:2,cix:2,bm:0,ix:22,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-49.198,57.981],[-10.687,-75.769],[49.198,-58.528],[43.431,-38.503],[5.272,-49.49],[-4.955,-13.975],[30.371,-3.804],[25.042,14.71],[-10.285,4.54],[-21.653,44.022],[18.397,55.553],[12.576,75.769]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[1202.994,258.199],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 23",np:2,cix:2,bm:0,ix:23,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[6.622,-0.5],[7.737,3.866],[4.048,6.12],[1.028,7.765],[-1.818,9.054],[-4.745,9.496],[-6.181,6.947],[-6.888,3.814],[-7.301,0.384],[-6.92,-3.457],[-4.077,-5.334],[-0.943,-6.627],[0,0],[7.62,3.803],[4.367,-0.822],[4.162,-3.045],[3.837,-5.042],[3.16,-6.332],[1.726,-6.093],[-0.062,-5.157],[-2.025,-4.014],[-4.341,-2.167],[-4.043,0.616],[-3.519,2.054],[0,0]],o:[[-6.624,0.498],[-7.032,-3.512],[-4.051,-6.123],[-1.035,-7.765],[1.811,-9.06],[4.744,-9.498],[6.18,-6.949],[6.883,-3.813],[7.296,-0.381],[7.148,3.571],[4.076,5.332],[0,0],[-1.353,-9.319],[-4.223,-2.109],[-4.365,0.825],[-4.155,3.052],[-3.84,5.04],[-3.105,6.214],[-1.726,6.1],[0.058,5.16],[2.022,4.015],[4.103,2.048],[4.042,-0.619],[0,0],[-5.742,3.284]],v:[[-10.681,70.192],[-32.224,65.145],[-48.847,50.691],[-56.459,29.857],[-55.284,4.628],[-45.451,-23.204],[-29.065,-47.871],[-9.465,-64.015],[11.807,-70.31],[33.13,-65.704],[49.972,-52.346],[57.495,-34.413],[37.979,-25.702],[24.521,-45.388],[11.639,-47.319],[-1.152,-41.513],[-13.143,-29.371],[-23.641,-12.311],[-30.888,6.153],[-33.385,23.034],[-30.26,36.793],[-20.715,46.064],[-8.493,48.212],[2.847,44.206],[7.863,64.513]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[1309.212,298.27],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 24",np:2,cix:2,bm:0,ix:24,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-20.66,69.643],[13.135,17.989],[-21.744,-4.828],[-55.539,46.828],[-75.113,34.019],[1.085,-82.451],[20.658,-69.647],[-10.227,-22.431],[24.651,0.386],[55.537,-46.829],[75.113,-34.022],[-1.083,82.451]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[1401.918,349.723],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 25",np:2,cix:2,bm:0,ix:25,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0]],v:[[-26.722,11.584],[38.198,-56.898],[54.604,-41.343],[-10.315,27.136]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[2.614,-2.755],[3.748,-0.24],[2.759,2.614],[-0.083,3.708],[-2.797,2.948],[-3.796,0.383],[-2.852,-2.707],[0.128,-3.847]],o:[[-2.796,2.953],[-3.746,0.238],[-2.851,-2.708],[0.089,-3.713],[2.614,-2.758],[3.784,-0.379],[2.757,2.614],[-0.129,3.854]],v:[[-30.792,51.877],[-40.61,56.66],[-50.369,53.098],[-54.521,43.475],[-50.194,33.486],[-40.584,28.777],[-30.621,32.269],[-26.677,41.964]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[1503.325,427.57],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 26",np:4,cix:2,bm:0,ix:26,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[1.309,-5.228],[1.497,-5.234],[0,6.54],[-2.988,0],[-1.121,-1.311]],o:[[-0.187,1.495],[-5.045,-3.736],[0,-6.535],[0.746,0],[1.682,2.053]],v:[[165.703,-3.458],[162.153,9.622],[154.867,-6.82],[161.594,-16.721],[165.141,-15.037]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[3.737,-3.55],[6.352,0],[0,8.965],[-0.746,2.806],[-1.685,6.351],[-4.485,4.482],[-3.734,0.746],[0,-4.295],[-7.098,-7.098],[-2.988,-1.679]],o:[[-5.043,4.671],[-9.902,0],[0,-2.617],[1.682,-5.604],[2.611,-9.154],[2.986,-2.802],[-1.866,3.736],[0,10.276],[2.243,2.243],[-2.617,5.977]],v:[[147.768,40.074],[130.579,47.171],[114.889,32.228],[116.198,23.258],[121.056,6.072],[131.704,-14.29],[141.601,-19.521],[138.803,-5.326],[149.45,19.896],[157.298,25.686]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ind:2,ty:"sh",ix:3,ks:{a:0,k:{i:[[-0.373,1.307],[-14.385,0],[1.872,-8.223],[3.922,-2.241],[9.529,0],[0,0]],o:[[4.296,-14.946],[8.782,0],[-1.119,5.229],[-4.67,2.804],[0,0],[0.187,-1.123]],v:[[-175.042,5.325],[-146.833,-19.896],[-134.315,-5.883],[-142.162,4.95],[-163.274,9.063],[-175.976,9.063]],c:true},ix:2},nm:"パス 3",mn:"ADBE Vector Shape - Group",hd:false},{ind:3,ty:"sh",ix:4,ks:{a:0,k:{i:[[3.364,2.991],[2.798,-3.362],[0,0],[0,0],[7.468,12.701],[0.746,3.925],[-3.363,3.923],[3.359,2.989],[2.616,-3.173],[0,0],[0.08,-0.094],[0,0],[1.866,0],[0,2.992],[-1.125,2.615],[-7.474,17.375],[3.364,2.239],[0,0],[0,0],[3.366,2.804],[3.171,-3.73],[0,0],[0.229,-0.273],[0,0],[2.057,0.747],[-0.373,1.871],[3.365,4.294],[6.352,0],[2.804,-1.309],[4.482,0],[6.167,-3.547],[8.969,-10.46],[0,0],[0.173,-0.253],[0,0],[2.802,0],[0.933,1.122],[-0.747,2.43],[0,0],[0,0],[0,4.483],[4.484,0],[0,0],[0,0],[4.299,1.305],[1.306,-4.112],[0,0],[11.77,-14.01],[0,0],[0.188,-0.291],[0,0],[3.177,0],[-10.835,39.606],[19.801,0],[6.912,-7.285],[5.601,0],[2.611,-3.923],[2.801,-3.175],[0,0],[0.197,-0.324],[0,0],[14.76,0],[3.366,4.671],[-1.121,5.976],[0,0],[-7.288,4.108],[-2.803,9.154],[0.746,4.112],[12.705,0],[6.726,-3.551],[8.034,-9.527],[0,0],[0.232,-0.355],[0,0],[3.176,0],[0,0],[6.164,8.219],[8.966,0],[6.54,-7.47],[8.78,0],[5.419,-5.793],[6.907,0],[2.054,-2.992],[5.231,-6.165],[0,0],[-3.363,-2.807],[-1.867,0],[-1.681,1.868],[0,0],[0,0],[-6.166,0],[-0.936,3.548],[0,0],[-12.89,0],[3.175,-10.46],[0,0],[-4.485,-1.121],[-1.494,4.856],[-2.428,8.781],[-12.33,0],[3.179,-11.019],[0,0],[0,-1.684],[-7.843,0],[-7.1,7.848],[-8.228,9.788],[-5.954,-7.998],[-18.31,0],[-8.968,4.674],[-10.465,11.958],[0,0],[-0.21,0.334],[0,0],[0,0],[-4.107,-1.311],[-0.743,0],[-1.119,3.733],[0,0],[-13.263,0],[3.365,-12.326],[0,0],[0,-2.428],[-7.844,0],[-7.1,7.848],[-9.073,10.806],[-0.059,0.066],[0,0],[0,0],[-4.109,-5.605],[-6.722,0],[-4.482,5.045],[0,0],[-0.016,0.018],[0,0],[0,0],[0.167,-0.503],[-6.915,-9.524],[-10.648,0],[-7.847,7.474],[-3.363,8.217],[-5.601,0],[-1.868,2.241],[0,0],[0,0],[0,0],[6.723,-15.318],[0,-5.604],[-3.176,-3.55],[-5.606,0],[-12.327,14.756],[0,0],[-0.016,0.019],[0,0],[-4.67,-7.473],[0,-4.295],[2.803,-2.8],[6.54,0],[1.494,1.306],[2.617,-3.553],[-3.362,-2.618],[-9.34,0],[-8.782,5.231],[-12.7,14.388],[0,0]],o:[[-3.363,-2.8],[0,0],[0,0],[-0.748,-6.164],[-2.615,-4.672],[-0.189,-1.12],[2.99,-3.363],[-2.99,-2.617],[0,0],[-0.081,0.09],[0,0],[-5.417,6.353],[-2.241,0],[0,-2.052],[6.158,-14.384],[1.679,-3.922],[0,0],[0,0],[2.803,-3.362],[-3.362,-2.986],[0,0],[-0.258,0.232],[0,0],[-3.736,0],[2.057,-7.474],[3.174,-13.265],[-3.923,-4.858],[-2.988,0],[-1.121,-3.177],[-5.793,0],[-6.353,3.549],[0,0],[-0.209,0.235],[0,0],[-3.18,3.548],[-1.681,0],[-1.121,-1.495],[0,0],[0,0],[4.484,0],[0,-4.298],[0,0],[0,0],[1.308,-4.296],[-4.295,-1.125],[0,0],[-3.363,9.9],[0,0],[-0.226,0.272],[-8.471,10.064],[-3.179,3.547],[0.935,-3.739],[7.1,-22.792],[-9.529,0],[1.306,-4.669],[-2.615,0],[-2.806,4.301],[0,0],[-0.246,0.296],[0,0],[-19.058,21.856],[-9.151,0],[-2.802,-3.737],[0,0],[12.332,0],[7.469,-4.297],[1.122,-4.296],[-1.869,-13.824],[-7.474,0],[-7.096,3.55],[0,0],[-0.287,0.324],[-8.228,9.774],[-3.176,3.547],[0,0],[2.99,-10.276],[-5.793,-7.475],[-10.278,0],[-5.231,-7.656],[-8.783,0],[0.56,-2.616],[-2.247,0],[-2.055,2.987],[-11.773,14.013],[-2.799,3.366],[1.495,1.305],[2.242,0],[0,0],[0,0],[-1.309,5.234],[3.549,0],[0,0],[7.289,-25.221],[10.465,0],[0,0],[-1.306,5.045],[5.231,1.307],[0.561,-2.057],[3.179,-11.957],[11.77,0],[0,0],[-0.935,3.553],[0,7.472],[7.847,0],[0,0],[-2.938,11.341],[4.669,6.167],[11.024,0],[9.9,-5.04],[0,0],[0.259,-0.31],[0,0],[0,0],[-1.119,4.116],[0.751,0.186],[3.553,0],[0,0],[6.728,-23.726],[11.025,0],[0,0],[-0.746,2.804],[0,7.475],[7.848,0],[0,0],[0.06,-0.063],[0,0],[0,0],[-2.055,7.283],[3.925,5.23],[10.461,0],[0,0],[0.015,-0.017],[0,0],[0,0],[-0.002,0.139],[-3.176,10.648],[5.604,7.479],[10.465,0],[5.604,-5.229],[7.098,1.866],[4.111,0],[0,0],[0,0],[0,0],[-5.796,13.823],[-1.868,4.298],[0,5.229],[3.549,3.735],[11.019,0],[0,0],[0.016,-0.018],[0,0],[1.309,2.803],[8.034,13.641],[0,3.737],[-2.055,2.055],[-5.977,0],[-3.547,-2.803],[-2.803,3.546],[3.55,2.802],[7.474,0],[7.844,-5.048],[0,0],[2.799,-3.363]],v:[[379.977,-4.391],[368.585,-3.458],[350.276,18.217],[342.054,27.557],[331.221,1.963],[322.626,-14.106],[325.427,-21.203],[324.495,-32.599],[313.47,-31.853],[284.949,2.071],[284.703,2.336],[252.943,40.074],[243.604,46.984],[238.932,42.126],[240.616,35.029],[263.034,-14.666],[260.976,-24.378],[250.328,-30.919],[252.757,-33.721],[252.194,-44.932],[240.616,-43.999],[206.979,-4.209],[206.242,-3.458],[188.682,17.47],[177.099,16.161],[181.396,0.281],[177.658,-25.126],[161.594,-32.787],[153,-30.732],[144.969,-35.961],[127.219,-31.479],[105.173,-11.303],[79.579,19.151],[79.01,19.885],[60.903,41.382],[52.308,46.984],[48.384,45.118],[47.636,38.952],[63.701,-19.896],[82.011,-19.896],[90.045,-27.93],[82.011,-35.961],[68.188,-35.961],[72.668,-52.217],[67.063,-62.117],[57.167,-56.513],[51.747,-36.896],[32.876,-8.312],[11.021,17.654],[10.407,18.503],[-8.215,40.636],[-16.997,46.613],[-5.417,4.204],[-30.076,-35.961],[-55.667,-25.502],[-63.703,-34.467],[-71.359,-29.427],[-78.273,-19.896],[-108.164,15.6],[-108.82,16.535],[-112.269,20.645],[-158.789,47.173],[-178.032,40.074],[-180.459,25.129],[-163.274,25.129],[-134.125,18.963],[-118.808,-1.4],[-118.062,-14.106],[-146.084,-35.961],[-167.57,-31.292],[-189.802,-12.049],[-215.768,18.776],[-216.539,19.799],[-234.071,40.636],[-242.852,46.613],[-231.271,4.204],[-234.445,-25.126],[-257.424,-35.961],[-283.953,-24.756],[-305.438,-35.961],[-328.044,-26.248],[-336.073,-34.467],[-342.987,-30.544],[-351.579,-18.777],[-380.729,15.783],[-379.792,27.184],[-374.562,29.049],[-368.582,26.062],[-351.956,6.445],[-364.472,51.469],[-356.625,61.744],[-348.964,55.768],[-338.32,18.03],[-306.372,-20.27],[-297.216,-0.28],[-308.054,39.885],[-302.823,49.789],[-292.359,43.623],[-281.151,2.52],[-258.547,-20.27],[-246.776,-0.094],[-258.357,41.755],[-259.481,49.977],[-244.162,63.053],[-223.422,52.777],[-195.623,19.668],[-190.92,49.787],[-158.789,63.242],[-129.643,56.324],[-100.873,31.852],[-87.051,15.413],[-86.354,14.441],[-79.953,6.82],[-92.289,51.652],[-86.685,61.558],[-84.442,61.744],[-76.783,55.768],[-65.945,17.654],[-32.878,-20.27],[-20.922,-0.094],[-32.505,41.755],[-33.625,49.601],[-18.307,63.053],[2.432,52.777],[22.98,28.299],[23.163,28.116],[39.042,9.249],[32.13,34.658],[35.493,54.835],[52.308,63.053],[73.603,51.096],[91.298,30.036],[91.347,29.986],[92.689,28.381],[100.875,18.639],[100.689,19.338],[104.987,51.652],[130.579,63.242],[158.606,51.842],[172.245,31.481],[189.429,33.718],[199.517,29.611],[215.266,10.617],[240.237,-18.962],[245.658,-15.783],[225.856,28.489],[222.117,43.81],[226.975,57.263],[241.362,63.239],[271.435,42.877],[283.157,28.917],[283.205,28.865],[309.918,-2.897],[317.393,10.182],[326.177,31.852],[321.693,42.128],[309.547,47.173],[297.031,43.063],[285.821,44.559],[287.13,55.768],[309.547,63.242],[333.089,56.7],[362.043,29.049],[380.729,6.82]],c:true},ix:2},nm:"パス 4",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[1006.165,1378.575],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 27",np:6,cix:2,bm:0,ix:27,mn:"ADBE Vector Group",hd:false},{ty:"st",c:{a:0,k:[1,1,1,1],ix:3},o:{a:0,k:100,ix:4},w:{a:0,k:4,ix:5},lc:1,lj:1,ml:4,bm:0,nm:"線 1",mn:"ADBE Vector Graphic - Stroke",hd:false}],ip:0,op:300.3003003003,st:0,bm:0}]},{id:"comp_2",layers:[{ddd:0,ind:6,ty:4,nm:"シェイプレイヤー 6",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:42,ix:10},p:{a:0,k:[1182.316,307.299,0],ix:2},a:{a:0,k:[298.805,2.75,0],ix:1},s:{a:1,k:[{i:{x:[0.667,0.183,0.667],y:[1,1,1]},o:{x:[0.333,0.903,0.333],y:[0,0,0]},t:20,s:[103.982,0,100]},{t:46,s:[103.982,84,100]}],ix:6}},ao:0,shapes:[{ty:"gr",it:[{ty:"rc",d:1,s:{a:0,k:[33.609,94.75],ix:2},p:{a:0,k:[0,0],ix:3},r:{a:0,k:0,ix:4},nm:"長方形パス 1",mn:"ADBE Vector Shape - Rect",hd:false},{ty:"fl",c:{a:0,k:[0.407843167174,0.717647058824,0.180392156863,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[298.805,-44.625],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"長方形 1",np:3,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false}],ip:20,op:170,st:20,bm:0},{ddd:0,ind:7,ty:4,nm:"シェイプレイヤー 9",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:8,ix:10},p:{a:0,k:[1009.001,219.433,0],ix:2},a:{a:0,k:[58.355,-306.352,0],ix:1},s:{a:1,k:[{i:{x:[0.667,0.183,0.667],y:[1,1,1]},o:{x:[0.333,0.903,0.333],y:[0,0,0]},t:16,s:[103.982,0,100]},{t:42,s:[103.982,80,100]}],ix:6}},ao:0,shapes:[{ty:"gr",it:[{ty:"rc",d:1,s:{a:0,k:[46.711,93.648],ix:2},p:{a:0,k:[0,0],ix:3},r:{a:0,k:0,ix:4},nm:"長方形パス 1",mn:"ADBE Vector Shape - Rect",hd:false},{ty:"fl",c:{a:0,k:[0.90588241278,0.239215701234,0.211764720842,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[58.355,-353.176],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"長方形 1",np:3,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false}],ip:16,op:166,st:16,bm:0},{ddd:0,ind:8,ty:4,nm:"シェイプレイヤー 8",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:-9,ix:10},p:{a:0,k:[908.872,220.379,0],ix:2},a:{a:0,k:[-40.006,-205.502,0],ix:1},s:{a:1,k:[{i:{x:[0.667,0.33,0.667],y:[0.765,0.882,1]},o:{x:[0.333,0.991,0.333],y:[0,0,0]},t:12,s:[72.982,0,100]},{t:34,s:[66.428,80.857,100]}],ix:6}},ao:0,shapes:[{ty:"gr",it:[{ty:"rc",d:1,s:{a:0,k:[54.988,90.998],ix:2},p:{a:0,k:[0,0],ix:3},r:{a:0,k:0,ix:4},nm:"長方形パス 1",mn:"ADBE Vector Shape - Rect",hd:false},{ty:"fl",c:{a:0,k:[0.984313785329,0.784313785329,0,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[-40.006,-251.001],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"長方形 1",np:3,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false}],ip:12,op:162,st:12,bm:0},{ddd:0,ind:9,ty:4,nm:"シェイプレイヤー 7",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:-42,ix:10},p:{a:0,k:[743.283,299.322,0],ix:2},a:{a:0,k:[-287.518,-214.895,0],ix:1},s:{a:1,k:[{i:{x:[0.667,0.183,0.667],y:[1,1,1]},o:{x:[0.333,0.903,0.333],y:[0,0,0]},t:8,s:[72.982,0,100]},{t:34,s:[65.982,79,100]}],ix:6}},ao:0,shapes:[{ty:"gr",it:[{ty:"rc",d:1,s:{a:0,k:[60.965,98.105],ix:2},p:{a:0,k:[0,0],ix:3},r:{a:0,k:0,ix:4},nm:"長方形パス 1",mn:"ADBE Vector Shape - Rect",hd:false},{ty:"fl",c:{a:0,k:[0,0.611764705882,0.862745157878,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[-287.518,-263.947],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"長方形 1",np:3,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false}],ip:8,op:158,st:8,bm:0},{ddd:0,ind:11,ty:4,nm:"シェイプレイヤー 4",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[960,540,0],ix:2},a:{a:0,k:[0,0,0],ix:1},s:{a:0,k:[100,100,100],ix:6}},ao:0,shapes:[{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:1,k:[{i:{x:0.833,y:0.833},o:{x:0.167,y:0.167},t:24,s:[{i:[[7.197,-9.965],[20.5,-14.5],[-19.264,1.589],[-19.5,18],[12.031,9.542],[3.485,-11.948]],o:[[-12.114,16.774],[-15.781,11.162],[28.5,-23],[5.523,-14.327],[-9.751,-7.734],[-3.5,12]],v:[[-47,-208],[-78.5,-177],[-75.5,-181.5],[-20,-230],[-18,-242],[-29.5,-225.5]],c:true}]},{i:{x:0.833,y:0.833},o:{x:0.167,y:0.167},t:28,s:[{i:[[7.197,-9.965],[6.612,-16.935],[-19.264,1.589],[-19.5,18],[12.031,9.542],[7.869,-4.883]],o:[[-12.114,16.774],[-4.492,14.628],[28.5,-23],[5.523,-14.327],[-9.751,-7.734],[-7.801,4.922]],v:[[-80.5,-246],[-97.75,-199.5],[-75.5,-181.5],[-20,-230],[-29.5,-256.5],[-53.75,-250.75]],c:true}]},{t:32,s:[{i:[[7.197,-9.965],[-7.275,-19.37],[-19.264,1.589],[-19.5,18],[12.031,9.542],[12.253,2.182]],o:[[-12.114,16.774],[6.797,18.095],[28.5,-23],[5.523,-14.327],[-9.751,-7.734],[-12.102,-2.155]],v:[[-114,-284],[-117,-222],[-75.5,-181.5],[-20,-230],[-41,-271],[-78,-276]],c:true}]}],ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[0.90588241278,0.239215701234,0.211764720842,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[0,0],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"シェイプ 1",np:3,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false}],ip:24,op:174,st:24,bm:0},{ddd:0,ind:12,ty:4,nm:"シェイプレイヤー 3",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[960,540,0],ix:2},a:{a:0,k:[0,0,0],ix:1},s:{a:0,k:[100,100,100],ix:6}},ao:0,shapes:[{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:1,k:[{i:{x:0.833,y:0.833},o:{x:0.167,y:0.167},t:24,s:[{i:[[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[0,-203.5],[31,-168.5],[35,-170],[24.037,-180.493],[12.79,-191.258]],c:true}]},{i:{x:0.833,y:0.833},o:{x:0.167,y:0.167},t:26,s:[{i:[[-1.939,-5.914],[0,0],[0.715,1.231],[2.07,4.616],[6.592,6.309]],o:[[4.856,14.809],[0,0],[-2.54,-4.375],[-3.734,-8.326],[-4.496,-4.304]],v:[[0,-203.5],[31,-168.5],[35,-170],[24.037,-180.493],[18.29,-207.258]],c:true}]},{i:{x:0.833,y:0.833},o:{x:0.167,y:0.167},t:28,s:[{i:[[-1.939,-5.914],[0,0],[0.715,1.231],[4.824,1.523],[6.592,6.309]],o:[[4.856,14.809],[0,0],[-2.54,-4.375],[-28.537,-9.007],[-4.496,-4.304]],v:[[0,-203.5],[31,-168.5],[35,-170],[72.537,-188.493],[22.79,-251.758]],c:true}]},{i:{x:0.833,y:0.833},o:{x:0.167,y:0.167},t:30,s:[{i:[[-1.939,-5.914],[0,0],[0.715,1.231],[3.269,3.333],[13.563,5.679]],o:[[4.856,14.809],[0,0],[-2.54,-4.375],[-27.937,-37.206],[-5.386,-2.757]],v:[[0,-203.5],[31,-168.5],[35,-170],[141.737,-222.594],[34.19,-278.758]],c:true}]},{t:32,s:[{i:[[-1.939,-5.914],[0,0],[0.715,1.231],[2.232,4.54],[18.21,5.258]],o:[[4.856,14.809],[0,0],[-2.54,-4.375],[-27.537,-56.007],[-5.98,-1.727]],v:[[0,-203.5],[31,-168.5],[35,-170],[139.537,-221.993],[41.79,-296.758]],c:true}]}],ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[0.407843167174,0.717647058824,0.180392156863,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[0,0],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"シェイプ 1",np:3,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false}],ip:24,op:174,st:24,bm:0},{ddd:0,ind:13,ty:4,nm:"シェイプレイヤー 2",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[960,540,0],ix:2},a:{a:0,k:[0,0,0],ix:1},s:{a:0,k:[100,100,100],ix:6}},ao:0,shapes:[{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:1,k:[{i:{x:0.833,y:0.833},o:{x:0.167,y:0.167},t:8,s:[{i:[[45.45,35.26],[5.456,-6.777],[-5.072,-6.645],[0,0],[0,0],[0,0]],o:[[-6.874,-5.333],[-5.243,6.511],[33.821,44.312],[0,0],[0,0],[0,0]],v:[[99.5,-103.5],[90.5,-76.5],[55,-69],[64.5,-68],[141,-38],[97,-100.5]],c:true}]},{i:{x:0.833,y:0.833},o:{x:0.167,y:0.167},t:16,s:[{i:[[45.45,35.26],[5.456,-6.777],[-5.072,-6.645],[0,0],[0,0],[0,0]],o:[[-6.874,-5.333],[-5.243,6.511],[33.821,44.312],[0,0],[0,0],[0,0]],v:[[90.5,-107],[61.5,-102.5],[55,-69],[64.5,-68],[92.5,-70.5],[97,-100.5]],c:true}]},{i:{x:0.833,y:0.833},o:{x:0.167,y:0.167},t:20,s:[{i:[[45.45,35.26],[5.456,-6.777],[-5.072,-6.645],[0,0],[0,0],[0,0]],o:[[-6.874,-5.333],[-5.243,6.511],[33.821,44.312],[0,0],[0,0],[0,0]],v:[[46.5,-154],[34.5,-124.5],[19,-116.5],[64.5,-68],[92.5,-70.5],[97,-100.5]],c:true}]},{i:{x:0.833,y:0.833},o:{x:0.167,y:0.167},t:22,s:[{i:[[45.45,35.26],[5.456,-6.777],[-5.072,-6.645],[0,0],[0,0],[0,0]],o:[[-6.874,-5.333],[-5.243,6.511],[33.821,44.312],[0,0],[0,0],[0,0]],v:[[11.5,-189.5],[-12,-175],[-10.5,-142.5],[64.5,-68],[92.5,-70.5],[97,-100.5]],c:true}]},{t:24,s:[{i:[[45.45,35.26],[5.456,-6.777],[-5.072,-6.645],[0,0],[0,0],[0,0]],o:[[-6.874,-5.333],[-5.243,6.511],[33.821,44.312],[0,0],[0,0],[0,0]],v:[[-22.5,-225],[-43.5,-209.5],[-53.5,-186.5],[64.5,-68],[92.5,-70.5],[97,-100.5]],c:true}]}],ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[0.984313785329,0.784313785329,0,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[0,0],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"シェイプ 1",np:3,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false}],ip:8,op:158,st:8,bm:0},{ddd:0,ind:14,ty:4,nm:"シェイプレイヤー 1",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[960,540,0],ix:2},a:{a:0,k:[0,0,0],ix:1},s:{a:0,k:[100,100,100],ix:6}},ao:0,shapes:[{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:1,k:[{i:{x:0.833,y:0.833},o:{x:0.167,y:0.167},t:8,s:[{i:[[0,0],[0,0],[0,0],[0,0],[6.872,6.872],[6,5.5]],o:[[0,0],[0,0],[0,0],[0,0],[-7.904,-7.904],[-6,-5.5]],v:[[-101,-122.5],[-122,-100.5],[-77,-58],[-27,-69.5],[-97.5,-55.5],[-96.5,-93.5]],c:true}]},{i:{x:0.833,y:0.833},o:{x:0.167,y:0.167},t:18,s:[{i:[[0,0],[0,0],[0,0],[0,0],[6.872,6.872],[6,5.5]],o:[[0,0],[0,0],[0,0],[0,0],[-7.904,-7.904],[-6,-5.5]],v:[[-101,-122.5],[-122,-100.5],[-77,-58],[-27,-69.5],[-56.5,-86],[-66,-116]],c:true}]},{i:{x:0.833,y:0.833},o:{x:0.167,y:0.167},t:22,s:[{i:[[0,0],[0,0],[0,0],[0,0],[6.872,6.872],[6,5.5]],o:[[0,0],[0,0],[0,0],[0,0],[-7.904,-7.904],[-6,-5.5]],v:[[-91.5,-143.5],[-122,-100.5],[-77,-58],[5.5,-111.5],[-26,-124],[-54,-134.5]],c:true}]},{t:24,s:[{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[6,5.5]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[-6,-5.5]],v:[[-34.5,-169],[-122,-100.5],[-77,-58],[3,-127],[-9.5,-140.5],[-27.5,-157.5]],c:true}]}],ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[0,0.611764705882,0.862745157878,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[0,0],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"シェイプ 1",np:3,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false}],ip:8,op:158,st:8,bm:0},{ddd:0,ind:15,ty:4,nm:"シェイプレイヤー 5",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[960,540,0],ix:2},a:{a:0,k:[334.602,418.602,0],ix:1},s:{a:1,k:[{i:{x:[1,1,0.667],y:[1,1,1]},o:{x:[1,1,0.333],y:[0,0,0]},t:0,s:[0,0,100]},{t:20,s:[220,220,100]}],ix:6}},ao:0,shapes:[{ty:"gr",it:[{d:1,ty:"el",s:{a:0,k:[765.203,765.203],ix:2},p:{a:0,k:[0,0],ix:3},nm:"楕円形パス 1",mn:"ADBE Vector Shape - Ellipse",hd:false},{ty:"fl",c:{a:0,k:[0,0,0,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[334.602,418.602],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"楕円形 1",np:3,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false}],ip:0,op:150,st:0,bm:0}]}],layers:[{ddd:0,ind:1,ty:0,nm:"Text_Mask",td:1,refId:"comp_0",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[542,540,0],ix:2},a:{a:0,k:[960,540,0],ix:1},s:{a:0,k:[100,100,100],ix:6}},ao:0,w:1920,h:1080,ip:16,op:166,st:16,bm:0},{ddd:0,ind:2,ty:0,nm:"Liquid",tt:1,refId:"comp_2",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[542,540,0],ix:2},a:{a:0,k:[960,540,0],ix:1},s:{a:0,k:[100,100,100],ix:6}},ao:0,w:1920,h:1080,ip:16,op:166,st:16,bm:0},{ddd:0,ind:3,ty:4,nm:"Life is Tech ! KANSAI LOGO_1Layerアウトライン 5",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[542,540,0],ix:2},a:{a:0,k:[1003,951.373,0],ix:1},s:{a:0,k:[50,50,100],ix:6}},ao:0,shapes:[{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-128.357,-159.105],[-55.638,-159.105],[-55.638,-28.796],[-54.175,-28.796],[40.018,-159.105],[119.085,-159.105],[23.912,-32.211],[128.357,159.105],[48.804,159.105],[-18.546,24.894],[-55.638,73.696],[-55.638,159.105],[-128.357,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[165.507,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 1",np:2,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[4.225,16.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[-3.908,16.922],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-0.485,-104.443],[-2.439,-104.443],[-68.815,159.106],[-142.024,159.106],[-42.948,-159.107],[42.95,-159.107],[142.024,159.106],[65.888,159.106]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[492.009,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 2",np:2,cix:2,bm:0,ix:2,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,25.673],[-25.672,0],[0,-25.675],[25.675,0]],o:[[0,-25.675],[25.675,0],[0,25.673],[-25.672,0]],v:[[-46.485,0],[-0.001,-46.484],[46.485,0],[-0.001,46.484]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[490.399,1148.471],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 3",np:2,cix:2,bm:0,ix:3,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[2.599,20.828],[0,18.545],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-2.607,-20.172],[0,-18.867],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[-1.63,-16.917],[-2.61,-20.816],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[1.625,17.571],[2.598,20.176],[0,0],[0,0],[0,0]],v:[[-114.205,-159.105],[-40.997,-159.105],[26.354,-0.489],[53.686,69.305],[55.638,69.305],[49.295,12.688],[45.389,-46.364],[45.389,-159.105],[114.206,-159.105],[114.206,159.105],[40.997,159.105],[-26.356,0.489],[-53.684,-68.814],[-55.639,-68.814],[-49.292,-12.199],[-45.39,46.365],[-45.39,159.105],[-114.205,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[833.644,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 4",np:2,cix:2,bm:0,ix:4,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[-14.154,-6.176],[-13.995,0],[-7.649,5.538],[0,9.442],[2.272,3.585],[4.225,2.767],[6.014,2.443],[7.809,2.929],[0,0],[8.295,5.206],[6.175,7.001],[3.739,9.27],[0,11.715],[-5.694,11.549],[-10.252,8.625],[-14.323,4.882],[-17.253,0],[-18.227,-7.151],[-14.641,-13.666],[0,0],[10.737,4.392],[13.665,0],[7.642,-5.04],[0,-9.104],[-9.762,-4.879],[-15.295,-5.529],[0,0],[-12.198,-13.666],[0,-22.449],[5.525,-11.872],[10.412,-8.943],[15.288,-5.368],[19.843,0],[20.986,7.642],[17.242,15.298]],o:[[12.032,9.76],[14.155,6.184],[16.594,0],[7.641,-5.529],[0,-4.882],[-2.278,-3.576],[-4.237,-2.761],[-6.027,-2.438],[0,0],[-8.786,-3.246],[-8.299,-5.202],[-6.185,-6.992],[-3.743,-9.274],[0,-13.008],[5.693,-11.549],[10.249,-8.618],[14.312,-4.878],[19.519,0],[18.218,7.162],[0,0],[-11.066,-8.13],[-10.737,-4.391],[-13.994,0],[-7.649,5.051],[0,9.761],[9.761,4.882],[0,0],[21.145,7.812],[12.205,13.663],[0,13.345],[-5.536,11.881],[-10.415,8.955],[-15.299,5.371],[-21.476,0],[-20.989,-7.641],[0,0]],v:[[-80.773,69.793],[-41.484,93.708],[0.733,102.979],[37.093,94.682],[48.558,72.232],[45.145,59.543],[35.386,50.026],[20.012,42.216],[-0.73,34.164],[-41.728,16.594],[-67.349,3.906],[-89.071,-14.397],[-103.958,-38.799],[-109.569,-70.281],[-101.03,-107.125],[-77.111,-137.386],[-40.264,-157.642],[7.078,-164.963],[63.693,-154.225],[112.984,-122.989],[76.381,-77.6],[43.682,-96.391],[7.078,-102.979],[-25.38,-95.416],[-36.847,-74.184],[-22.207,-52.223],[15.373,-36.603],[53.931,-20.012],[103.954,12.203],[122.259,66.375],[113.963,104.199],[90.045,135.435],[51.49,156.908],[-1.219,164.962],[-64.911,153.495],[-122.259,119.085]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1175.522,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 5",np:2,cix:2,bm:0,ix:5,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[4.228,16.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[-3.906,16.922],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-0.488,-104.445],[-2.439,-104.445],[-68.815,159.105],[-142.024,159.105],[-42.949,-159.105],[42.95,-159.105],[142.024,159.105],[65.887,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1516.912,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 6",np:2,cix:2,bm:0,ix:6,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,25.673],[-25.672,0],[0,-25.675],[25.675,0]],o:[[0,-25.675],[25.675,0],[0,25.673],[-25.672,0]],v:[[-46.485,0],[-0.002,-46.484],[46.485,0],[-0.002,46.484]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1515.392,1148.471],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 7",np:2,cix:2,bm:0,ix:7,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-110.302,98.587],[-36.114,98.587],[-36.114,-98.586],[-110.302,-98.586],[-110.302,-159.106],[110.302,-159.106],[110.302,-98.586],[36.114,-98.586],[36.114,98.587],[110.302,98.587],[110.302,159.106],[-110.302,159.106]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1858.547,1035.85],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 8",np:2,cix:2,bm:0,ix:8,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[57.355,-57.356],[186.164,0],[87.328,37.703],[5.771,-3.56],[102.949,-23.11],[60.15,-1.685],[-46.317,35.985],[-10.097,12.43],[-0.672,0.864],[8.233,7.593],[38.344,80.766],[0,0],[-0.485,-1.093],[-67.267,-65.546],[47.357,-36.789],[29.182,-10.938],[-2.303,-12.892],[-26.693,-0.131],[-1.922,0],[-106.192,23.833],[-27.971,13.037],[-98.336,0],[-139.781,139.782],[-36.491,82.695]],o:[[-33.792,71.16],[-131.636,131.64],[-95.799,0],[-6.645,-2.867],[-14.291,6.832],[-85.415,19.171],[38.167,-16.665],[64.733,-50.292],[0.776,-0.736],[6.874,-8.842],[-66.186,-61.06],[0,0],[0.483,1.096],[38.354,85.675],[-18.885,21.733],[-60.335,46.873],[-24.369,9.126],[2.339,13.062],[1.869,0.008],[64.532,-0.003],[98.108,-22.023],[90.045,37.446],[197.682,0],[65.833,-65.838],[0,0]],v:[[699.185,-244.165],[561.916,-50.053],[69.092,154.083],[-206.89,97.262],[-226.629,98.701],[-438.979,173.06],[-663.949,200.583],[-525.938,121.09],[-403.097,0.952],[-400.925,-1.451],[-403.333,-30.519],[-560.752,-244.165],[-608.149,-244.165],[-606.726,-240.87],[-447.639,-13.125],[-552.385,87.042],[-716.293,175.344],[-744.317,215.657],[-703.089,244.153],[-697.418,244.164],[-429.538,215.125],[-214.721,140.767],[69.092,197.191],[592.401,-19.569],[746.62,-244.165]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[933.906,1501.123],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 9",np:2,cix:2,bm:0,ix:9,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[88.714,99.713],[0,0],[-24.312,-117.679]],o:[[-25.065,-129.23],[0,0],[80.671,91.367],[0,0]],v:[[101.674,174.406],[-71.211,-174.406],[-101.674,-143.799],[57.738,174.406]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1627.738,641.476],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 10",np:2,cix:2,bm:0,ix:10,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[-80.115,91.131],[0,0],[24.965,-128.699]],o:[[24.209,-117.189],[0,0],[-88.113,99.468],[0,0]],v:[[-57.224,173.789],[101.164,-143.269],[70.643,-173.789],[-101.164,173.789]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[377.748,642.093],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 11",np:2,cix:2,bm:0,ix:11,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-2.63,-58.411],[-14.034,-74.906],[-65.129,-39.57],[-53.724,-23.078],[-37.879,-34.035],[18.476,47.454],[2.629,58.411],[14.036,74.906],[65.129,39.571],[53.722,23.078],[37.879,34.036],[-18.473,-47.453]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[590.918,358.591],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 17",np:2,cix:2,bm:0,ix:12,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-13.757,-39.784],[3.403,-5.724],[35.357,-21.822],[44.375,-3.911],[12.596,12.096],[39.486,65.47],[18.239,76.171],[-44.375,-48.132],[11.277,-76.171],[20.829,-57.207]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[658.075,309.299],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 18",np:2,cix:2,bm:0,ix:13,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-6.342,76.056],[-54.049,-54.696],[4.496,-76.056],[11.639,-56.479],[-25.666,-42.869],[-13,-8.15],[21.536,-20.75],[28.14,-2.65],[-6.396,9.95],[7.683,48.547],[46.838,34.264],[54.049,54.023]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[759.765,272.599],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 19",np:2,cix:2,bm:0,ix:14,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[7.733,0],[2.096,-0.718],[1.701,-1.572],[0.984,-2.485],[0,-3.407],[-3.54,-3.209],[-5.767,-2.883],[-3.535,-2.227],[-2.887,-3.145],[-1.836,-4.325],[0,-5.899],[2.163,-5.24],[3.598,-3.605],[4.849,-1.833],[5.372,0],[6.549,3.011],[3.932,4.588],[0,0],[-4.261,-2.093],[-4.457,0],[-3.28,3.41],[0,6.164],[3.932,3.539],[6.025,3.015],[3.343,2.232],[2.556,3.082],[1.505,4.127],[0,5.769],[-2.294,5.178],[-3.733,3.411],[-4.72,1.642],[-4.851,0],[-5.576,-2.293],[-3.805,-4.454]],o:[[-5.11,-6.158],[-2.229,0],[-2.096,0.724],[-1.707,1.574],[-0.981,2.491],[0,5.9],[3.537,3.213],[3.407,1.704],[3.54,2.23],[2.88,3.144],[1.832,4.327],[0,6.816],[-2.163,5.244],[-3.61,3.605],[-4.849,1.836],[-7.735,0],[-6.556,-3.014],[0,0],[3.015,3.672],[4.256,2.099],[4.979,0],[3.272,-3.407],[0,-6.026],[-3.93,-3.537],[-3.803,-1.836],[-3.344,-2.225],[-2.553,-3.078],[-1.509,-4.128],[0,-7.203],[2.289,-5.175],[3.736,-3.407],[4.717,-1.636],[7.076,0],[5.569,2.295],[0,0]],v:[[25.949,-42.659],[6.684,-51.899],[0.196,-50.819],[-5.504,-47.377],[-9.535,-41.284],[-11.01,-32.438],[-5.7,-18.774],[8.256,-9.631],[18.673,-3.734],[28.311,4.325],[35.385,15.531],[38.138,30.864],[34.895,48.95],[26.247,62.221],[13.564,70.378],[-1.768,73.13],[-23.196,68.611],[-38.926,57.209],[-26.147,39.907],[-15.235,48.556],[-2.163,51.704],[10.224,46.591],[15.138,32.24],[9.24,17.889],[-5.7,8.061],[-16.415,1.965],[-25.263,-5.996],[-31.356,-16.807],[-33.616,-31.652],[-30.176,-50.228],[-21.134,-63.105],[-8.452,-70.674],[5.899,-73.13],[24.87,-69.689],[38.926,-59.566]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[978.889,230.589],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 21",np:2,cix:2,bm:0,ix:15,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-49.198,57.981],[-10.687,-75.769],[49.198,-58.528],[43.431,-38.503],[5.272,-49.49],[-4.955,-13.975],[30.371,-3.804],[25.042,14.71],[-10.285,4.54],[-21.653,44.022],[18.397,55.553],[12.576,75.769]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1202.994,258.199],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 23",np:2,cix:2,bm:0,ix:16,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[6.622,-0.5],[7.737,3.866],[4.048,6.12],[1.028,7.765],[-1.818,9.054],[-4.745,9.496],[-6.181,6.947],[-6.888,3.814],[-7.301,0.384],[-6.92,-3.457],[-4.077,-5.334],[-0.943,-6.627],[0,0],[7.62,3.803],[4.367,-0.822],[4.162,-3.045],[3.837,-5.042],[3.16,-6.332],[1.726,-6.093],[-0.062,-5.157],[-2.025,-4.014],[-4.341,-2.167],[-4.043,0.616],[-3.519,2.054],[0,0]],o:[[-6.624,0.498],[-7.032,-3.512],[-4.051,-6.123],[-1.035,-7.765],[1.811,-9.06],[4.744,-9.498],[6.18,-6.949],[6.883,-3.813],[7.296,-0.381],[7.148,3.571],[4.076,5.332],[0,0],[-1.353,-9.319],[-4.223,-2.109],[-4.365,0.825],[-4.155,3.052],[-3.84,5.04],[-3.105,6.214],[-1.726,6.1],[0.058,5.16],[2.022,4.015],[4.103,2.048],[4.042,-0.619],[0,0],[-5.742,3.284]],v:[[-10.681,70.192],[-32.224,65.145],[-48.847,50.691],[-56.459,29.857],[-55.284,4.628],[-45.451,-23.204],[-29.065,-47.871],[-9.465,-64.015],[11.807,-70.31],[33.13,-65.704],[49.972,-52.346],[57.495,-34.413],[37.979,-25.702],[24.521,-45.388],[11.639,-47.319],[-1.152,-41.513],[-13.143,-29.371],[-23.641,-12.311],[-30.888,6.153],[-33.385,23.034],[-30.26,36.793],[-20.715,46.064],[-8.493,48.212],[2.847,44.206],[7.863,64.513]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1309.212,298.27],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 24",np:2,cix:2,bm:0,ix:17,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-20.66,69.643],[13.135,17.989],[-21.744,-4.828],[-55.539,46.828],[-75.113,34.019],[1.085,-82.451],[20.658,-69.647],[-10.227,-22.431],[24.651,0.386],[55.537,-46.829],[75.113,-34.022],[-1.083,82.451]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1401.918,349.723],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 25",np:2,cix:2,bm:0,ix:18,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[1.309,-5.228],[1.497,-5.234],[0,6.54],[-2.988,0],[-1.121,-1.311]],o:[[-0.187,1.495],[-5.045,-3.736],[0,-6.535],[0.746,0],[1.682,2.053]],v:[[165.703,-3.458],[162.153,9.622],[154.867,-6.82],[161.594,-16.721],[165.141,-15.037]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[3.737,-3.55],[6.352,0],[0,8.965],[-0.746,2.806],[-1.685,6.351],[-4.485,4.482],[-3.734,0.746],[0,-4.295],[-7.098,-7.098],[-2.988,-1.679]],o:[[-5.043,4.671],[-9.902,0],[0,-2.617],[1.682,-5.604],[2.611,-9.154],[2.986,-2.802],[-1.866,3.736],[0,10.276],[2.243,2.243],[-2.617,5.977]],v:[[147.768,40.074],[130.579,47.171],[114.889,32.228],[116.198,23.258],[121.056,6.072],[131.704,-14.29],[141.601,-19.521],[138.803,-5.326],[149.45,19.896],[157.298,25.686]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ind:2,ty:"sh",ix:3,ks:{a:0,k:{i:[[-0.373,1.307],[-14.385,0],[1.872,-8.223],[3.922,-2.241],[9.529,0],[0,0]],o:[[4.296,-14.946],[8.782,0],[-1.119,5.229],[-4.67,2.804],[0,0],[0.187,-1.123]],v:[[-175.042,5.325],[-146.833,-19.896],[-134.315,-5.883],[-142.162,4.95],[-163.274,9.063],[-175.976,9.063]],c:true},ix:2},nm:"パス 3",mn:"ADBE Vector Shape - Group",hd:false},{ind:3,ty:"sh",ix:4,ks:{a:0,k:{i:[[3.364,2.991],[2.798,-3.362],[0,0],[0,0],[7.468,12.701],[0.746,3.925],[-3.363,3.923],[3.359,2.989],[2.616,-3.173],[0,0],[0.08,-0.094],[0,0],[1.866,0],[0,2.992],[-1.125,2.615],[-7.474,17.375],[3.364,2.239],[0,0],[0,0],[3.366,2.804],[3.171,-3.73],[0,0],[0.229,-0.273],[0,0],[2.057,0.747],[-0.373,1.871],[3.365,4.294],[6.352,0],[2.804,-1.309],[4.482,0],[6.167,-3.547],[8.969,-10.46],[0,0],[0.173,-0.253],[0,0],[2.802,0],[0.933,1.122],[-0.747,2.43],[0,0],[0,0],[0,4.483],[4.484,0],[0,0],[0,0],[4.299,1.305],[1.306,-4.112],[0,0],[11.77,-14.01],[0,0],[0.188,-0.291],[0,0],[3.177,0],[-10.835,39.606],[19.801,0],[6.912,-7.285],[5.601,0],[2.611,-3.923],[2.801,-3.175],[0,0],[0.197,-0.324],[0,0],[14.76,0],[3.366,4.671],[-1.121,5.976],[0,0],[-7.288,4.108],[-2.803,9.154],[0.746,4.112],[12.705,0],[6.726,-3.551],[8.034,-9.527],[0,0],[0.232,-0.355],[0,0],[3.176,0],[0,0],[6.164,8.219],[8.966,0],[6.54,-7.47],[8.78,0],[5.419,-5.793],[6.907,0],[2.054,-2.992],[5.231,-6.165],[0,0],[-3.363,-2.807],[-1.867,0],[-1.681,1.868],[0,0],[0,0],[-6.166,0],[-0.936,3.548],[0,0],[-12.89,0],[3.175,-10.46],[0,0],[-4.485,-1.121],[-1.494,4.856],[-2.428,8.781],[-12.33,0],[3.179,-11.019],[0,0],[0,-1.684],[-7.843,0],[-7.1,7.848],[-8.228,9.788],[-5.954,-7.998],[-18.31,0],[-8.968,4.674],[-10.465,11.958],[0,0],[-0.21,0.334],[0,0],[0,0],[-4.107,-1.311],[-0.743,0],[-1.119,3.733],[0,0],[-13.263,0],[3.365,-12.326],[0,0],[0,-2.428],[-7.844,0],[-7.1,7.848],[-9.073,10.806],[-0.059,0.066],[0,0],[0,0],[-4.109,-5.605],[-6.722,0],[-4.482,5.045],[0,0],[-0.016,0.018],[0,0],[0,0],[0.167,-0.503],[-6.915,-9.524],[-10.648,0],[-7.847,7.474],[-3.363,8.217],[-5.601,0],[-1.868,2.241],[0,0],[0,0],[0,0],[6.723,-15.318],[0,-5.604],[-3.176,-3.55],[-5.606,0],[-12.327,14.756],[0,0],[-0.016,0.019],[0,0],[-4.67,-7.473],[0,-4.295],[2.803,-2.8],[6.54,0],[1.494,1.306],[2.617,-3.553],[-3.362,-2.618],[-9.34,0],[-8.782,5.231],[-12.7,14.388],[0,0]],o:[[-3.363,-2.8],[0,0],[0,0],[-0.748,-6.164],[-2.615,-4.672],[-0.189,-1.12],[2.99,-3.363],[-2.99,-2.617],[0,0],[-0.081,0.09],[0,0],[-5.417,6.353],[-2.241,0],[0,-2.052],[6.158,-14.384],[1.679,-3.922],[0,0],[0,0],[2.803,-3.362],[-3.362,-2.986],[0,0],[-0.258,0.232],[0,0],[-3.736,0],[2.057,-7.474],[3.174,-13.265],[-3.923,-4.858],[-2.988,0],[-1.121,-3.177],[-5.793,0],[-6.353,3.549],[0,0],[-0.209,0.235],[0,0],[-3.18,3.548],[-1.681,0],[-1.121,-1.495],[0,0],[0,0],[4.484,0],[0,-4.298],[0,0],[0,0],[1.308,-4.296],[-4.295,-1.125],[0,0],[-3.363,9.9],[0,0],[-0.226,0.272],[-8.471,10.064],[-3.179,3.547],[0.935,-3.739],[7.1,-22.792],[-9.529,0],[1.306,-4.669],[-2.615,0],[-2.806,4.301],[0,0],[-0.246,0.296],[0,0],[-19.058,21.856],[-9.151,0],[-2.802,-3.737],[0,0],[12.332,0],[7.469,-4.297],[1.122,-4.296],[-1.869,-13.824],[-7.474,0],[-7.096,3.55],[0,0],[-0.287,0.324],[-8.228,9.774],[-3.176,3.547],[0,0],[2.99,-10.276],[-5.793,-7.475],[-10.278,0],[-5.231,-7.656],[-8.783,0],[0.56,-2.616],[-2.247,0],[-2.055,2.987],[-11.773,14.013],[-2.799,3.366],[1.495,1.305],[2.242,0],[0,0],[0,0],[-1.309,5.234],[3.549,0],[0,0],[7.289,-25.221],[10.465,0],[0,0],[-1.306,5.045],[5.231,1.307],[0.561,-2.057],[3.179,-11.957],[11.77,0],[0,0],[-0.935,3.553],[0,7.472],[7.847,0],[0,0],[-2.938,11.341],[4.669,6.167],[11.024,0],[9.9,-5.04],[0,0],[0.259,-0.31],[0,0],[0,0],[-1.119,4.116],[0.751,0.186],[3.553,0],[0,0],[6.728,-23.726],[11.025,0],[0,0],[-0.746,2.804],[0,7.475],[7.848,0],[0,0],[0.06,-0.063],[0,0],[0,0],[-2.055,7.283],[3.925,5.23],[10.461,0],[0,0],[0.015,-0.017],[0,0],[0,0],[-0.002,0.139],[-3.176,10.648],[5.604,7.479],[10.465,0],[5.604,-5.229],[7.098,1.866],[4.111,0],[0,0],[0,0],[0,0],[-5.796,13.823],[-1.868,4.298],[0,5.229],[3.549,3.735],[11.019,0],[0,0],[0.016,-0.018],[0,0],[1.309,2.803],[8.034,13.641],[0,3.737],[-2.055,2.055],[-5.977,0],[-3.547,-2.803],[-2.803,3.546],[3.55,2.802],[7.474,0],[7.844,-5.048],[0,0],[2.799,-3.363]],v:[[379.977,-4.391],[368.585,-3.458],[350.276,18.217],[342.054,27.557],[331.221,1.963],[322.626,-14.106],[325.427,-21.203],[324.495,-32.599],[313.47,-31.853],[284.949,2.071],[284.703,2.336],[252.943,40.074],[243.604,46.984],[238.932,42.126],[240.616,35.029],[263.034,-14.666],[260.976,-24.378],[250.328,-30.919],[252.757,-33.721],[252.194,-44.932],[240.616,-43.999],[206.979,-4.209],[206.242,-3.458],[188.682,17.47],[177.099,16.161],[181.396,0.281],[177.658,-25.126],[161.594,-32.787],[153,-30.732],[144.969,-35.961],[127.219,-31.479],[105.173,-11.303],[79.579,19.151],[79.01,19.885],[60.903,41.382],[52.308,46.984],[48.384,45.118],[47.636,38.952],[63.701,-19.896],[82.011,-19.896],[90.045,-27.93],[82.011,-35.961],[68.188,-35.961],[72.668,-52.217],[67.063,-62.117],[57.167,-56.513],[51.747,-36.896],[32.876,-8.312],[11.021,17.654],[10.407,18.503],[-8.215,40.636],[-16.997,46.613],[-5.417,4.204],[-30.076,-35.961],[-55.667,-25.502],[-63.703,-34.467],[-71.359,-29.427],[-78.273,-19.896],[-108.164,15.6],[-108.82,16.535],[-112.269,20.645],[-158.789,47.173],[-178.032,40.074],[-180.459,25.129],[-163.274,25.129],[-134.125,18.963],[-118.808,-1.4],[-118.062,-14.106],[-146.084,-35.961],[-167.57,-31.292],[-189.802,-12.049],[-215.768,18.776],[-216.539,19.799],[-234.071,40.636],[-242.852,46.613],[-231.271,4.204],[-234.445,-25.126],[-257.424,-35.961],[-283.953,-24.756],[-305.438,-35.961],[-328.044,-26.248],[-336.073,-34.467],[-342.987,-30.544],[-351.579,-18.777],[-380.729,15.783],[-379.792,27.184],[-374.562,29.049],[-368.582,26.062],[-351.956,6.445],[-364.472,51.469],[-356.625,61.744],[-348.964,55.768],[-338.32,18.03],[-306.372,-20.27],[-297.216,-0.28],[-308.054,39.885],[-302.823,49.789],[-292.359,43.623],[-281.151,2.52],[-258.547,-20.27],[-246.776,-0.094],[-258.357,41.755],[-259.481,49.977],[-244.162,63.053],[-223.422,52.777],[-195.623,19.668],[-190.92,49.787],[-158.789,63.242],[-129.643,56.324],[-100.873,31.852],[-87.051,15.413],[-86.354,14.441],[-79.953,6.82],[-92.289,51.652],[-86.685,61.558],[-84.442,61.744],[-76.783,55.768],[-65.945,17.654],[-32.878,-20.27],[-20.922,-0.094],[-32.505,41.755],[-33.625,49.601],[-18.307,63.053],[2.432,52.777],[22.98,28.299],[23.163,28.116],[39.042,9.249],[32.13,34.658],[35.493,54.835],[52.308,63.053],[73.603,51.096],[91.298,30.036],[91.347,29.986],[92.689,28.381],[100.875,18.639],[100.689,19.338],[104.987,51.652],[130.579,63.242],[158.606,51.842],[172.245,31.481],[189.429,33.718],[199.517,29.611],[215.266,10.617],[240.237,-18.962],[245.658,-15.783],[225.856,28.489],[222.117,43.81],[226.975,57.263],[241.362,63.239],[271.435,42.877],[283.157,28.917],[283.205,28.865],[309.918,-2.897],[317.393,10.182],[326.177,31.852],[321.693,42.128],[309.547,47.173],[297.031,43.063],[285.821,44.559],[287.13,55.768],[309.547,63.242],[333.089,56.7],[362.043,29.049],[380.729,6.82]],c:true},ix:2},nm:"パス 4",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[1006.165,1378.575],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 27",np:6,cix:2,bm:0,ix:19,mn:"ADBE Vector Group",hd:false},{ty:"tm",s:{a:0,k:0,ix:1},e:{a:1,k:[{i:{x:[0.282],y:[1]},o:{x:[0.333],y:[0]},t:9,s:[0]},{t:35,s:[100]}],ix:2},o:{a:0,k:0,ix:3},m:1,ix:20,nm:"パスのトリミング 1",mn:"ADBE Vector Filter - Trim",hd:false},{ty:"st",c:{a:0,k:[0,0,0,1],ix:3},o:{a:0,k:100,ix:4},w:{a:0,k:6,ix:5},lc:1,lj:1,ml:4,bm:0,nm:"線 1",mn:"ADBE Vector Graphic - Stroke",hd:false}],ip:35,op:60,st:9,bm:0},{ddd:0,ind:4,ty:4,nm:"Life is Tech ! KANSAI LOGO_1Layerアウトライン",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[542,540,0],ix:2},a:{a:0,k:[1003,951.373,0],ix:1},s:{a:0,k:[50,50,100],ix:6}},ao:0,shapes:[{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-128.357,-159.105],[-55.638,-159.105],[-55.638,-28.796],[-54.175,-28.796],[40.018,-159.105],[119.085,-159.105],[23.912,-32.211],[128.357,159.105],[48.804,159.105],[-18.546,24.894],[-55.638,73.696],[-55.638,159.105],[-128.357,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[165.507,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 1",np:2,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[4.225,16.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[-3.908,16.922],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-0.485,-104.443],[-2.439,-104.443],[-68.815,159.106],[-142.024,159.106],[-42.948,-159.107],[42.95,-159.107],[142.024,159.106],[65.888,159.106]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[492.009,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 2",np:2,cix:2,bm:0,ix:2,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,25.673],[-25.672,0],[0,-25.675],[25.675,0]],o:[[0,-25.675],[25.675,0],[0,25.673],[-25.672,0]],v:[[-46.485,0],[-0.001,-46.484],[46.485,0],[-0.001,46.484]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[490.399,1148.471],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 3",np:2,cix:2,bm:0,ix:3,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[2.599,20.828],[0,18.545],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-2.607,-20.172],[0,-18.867],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[-1.63,-16.917],[-2.61,-20.816],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[1.625,17.571],[2.598,20.176],[0,0],[0,0],[0,0]],v:[[-114.205,-159.105],[-40.997,-159.105],[26.354,-0.489],[53.686,69.305],[55.638,69.305],[49.295,12.688],[45.389,-46.364],[45.389,-159.105],[114.206,-159.105],[114.206,159.105],[40.997,159.105],[-26.356,0.489],[-53.684,-68.814],[-55.639,-68.814],[-49.292,-12.199],[-45.39,46.365],[-45.39,159.105],[-114.205,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[833.644,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 4",np:2,cix:2,bm:0,ix:4,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[-14.154,-6.176],[-13.995,0],[-7.649,5.538],[0,9.442],[2.272,3.585],[4.225,2.767],[6.014,2.443],[7.809,2.929],[0,0],[8.295,5.206],[6.175,7.001],[3.739,9.27],[0,11.715],[-5.694,11.549],[-10.252,8.625],[-14.323,4.882],[-17.253,0],[-18.227,-7.151],[-14.641,-13.666],[0,0],[10.737,4.392],[13.665,0],[7.642,-5.04],[0,-9.104],[-9.762,-4.879],[-15.295,-5.529],[0,0],[-12.198,-13.666],[0,-22.449],[5.525,-11.872],[10.412,-8.943],[15.288,-5.368],[19.843,0],[20.986,7.642],[17.242,15.298]],o:[[12.032,9.76],[14.155,6.184],[16.594,0],[7.641,-5.529],[0,-4.882],[-2.278,-3.576],[-4.237,-2.761],[-6.027,-2.438],[0,0],[-8.786,-3.246],[-8.299,-5.202],[-6.185,-6.992],[-3.743,-9.274],[0,-13.008],[5.693,-11.549],[10.249,-8.618],[14.312,-4.878],[19.519,0],[18.218,7.162],[0,0],[-11.066,-8.13],[-10.737,-4.391],[-13.994,0],[-7.649,5.051],[0,9.761],[9.761,4.882],[0,0],[21.145,7.812],[12.205,13.663],[0,13.345],[-5.536,11.881],[-10.415,8.955],[-15.299,5.371],[-21.476,0],[-20.989,-7.641],[0,0]],v:[[-80.773,69.793],[-41.484,93.708],[0.733,102.979],[37.093,94.682],[48.558,72.232],[45.145,59.543],[35.386,50.026],[20.012,42.216],[-0.73,34.164],[-41.728,16.594],[-67.349,3.906],[-89.071,-14.397],[-103.958,-38.799],[-109.569,-70.281],[-101.03,-107.125],[-77.111,-137.386],[-40.264,-157.642],[7.078,-164.963],[63.693,-154.225],[112.984,-122.989],[76.381,-77.6],[43.682,-96.391],[7.078,-102.979],[-25.38,-95.416],[-36.847,-74.184],[-22.207,-52.223],[15.373,-36.603],[53.931,-20.012],[103.954,12.203],[122.259,66.375],[113.963,104.199],[90.045,135.435],[51.49,156.908],[-1.219,164.962],[-64.911,153.495],[-122.259,119.085]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1175.522,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 5",np:2,cix:2,bm:0,ix:5,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[4.228,16.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[-3.906,16.922],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-0.488,-104.445],[-2.439,-104.445],[-68.815,159.105],[-142.024,159.105],[-42.949,-159.105],[42.95,-159.105],[142.024,159.105],[65.887,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1516.912,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 6",np:2,cix:2,bm:0,ix:6,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,25.673],[-25.672,0],[0,-25.675],[25.675,0]],o:[[0,-25.675],[25.675,0],[0,25.673],[-25.672,0]],v:[[-46.485,0],[-0.002,-46.484],[46.485,0],[-0.002,46.484]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1515.392,1148.471],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 7",np:2,cix:2,bm:0,ix:7,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-110.302,98.587],[-36.114,98.587],[-36.114,-98.586],[-110.302,-98.586],[-110.302,-159.106],[110.302,-159.106],[110.302,-98.586],[36.114,-98.586],[36.114,98.587],[110.302,98.587],[110.302,159.106],[-110.302,159.106]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1858.547,1035.85],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 8",np:2,cix:2,bm:0,ix:8,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[57.355,-57.356],[186.164,0],[87.328,37.703],[5.771,-3.56],[102.949,-23.11],[60.15,-1.685],[-46.317,35.985],[-10.097,12.43],[-0.672,0.864],[8.233,7.593],[38.344,80.766],[0,0],[-0.485,-1.093],[-67.267,-65.546],[47.357,-36.789],[29.182,-10.938],[-2.303,-12.892],[-26.693,-0.131],[-1.922,0],[-106.192,23.833],[-27.971,13.037],[-98.336,0],[-139.781,139.782],[-36.491,82.695]],o:[[-33.792,71.16],[-131.636,131.64],[-95.799,0],[-6.645,-2.867],[-14.291,6.832],[-85.415,19.171],[38.167,-16.665],[64.733,-50.292],[0.776,-0.736],[6.874,-8.842],[-66.186,-61.06],[0,0],[0.483,1.096],[38.354,85.675],[-18.885,21.733],[-60.335,46.873],[-24.369,9.126],[2.339,13.062],[1.869,0.008],[64.532,-0.003],[98.108,-22.023],[90.045,37.446],[197.682,0],[65.833,-65.838],[0,0]],v:[[699.185,-244.165],[561.916,-50.053],[69.092,154.083],[-206.89,97.262],[-226.629,98.701],[-438.979,173.06],[-663.949,200.583],[-525.938,121.09],[-403.097,0.952],[-400.925,-1.451],[-403.333,-30.519],[-560.752,-244.165],[-608.149,-244.165],[-606.726,-240.87],[-447.639,-13.125],[-552.385,87.042],[-716.293,175.344],[-744.317,215.657],[-703.089,244.153],[-697.418,244.164],[-429.538,215.125],[-214.721,140.767],[69.092,197.191],[592.401,-19.569],[746.62,-244.165]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[933.906,1501.123],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 9",np:2,cix:2,bm:0,ix:9,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[88.714,99.713],[0,0],[-24.312,-117.679]],o:[[-25.065,-129.23],[0,0],[80.671,91.367],[0,0]],v:[[101.674,174.406],[-71.211,-174.406],[-101.674,-143.799],[57.738,174.406]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1627.738,641.476],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 10",np:2,cix:2,bm:0,ix:10,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[-80.115,91.131],[0,0],[24.965,-128.699]],o:[[24.209,-117.189],[0,0],[-88.113,99.468],[0,0]],v:[[-57.224,173.789],[101.164,-143.269],[70.643,-173.789],[-101.164,173.789]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[377.748,642.093],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 11",np:2,cix:2,bm:0,ix:11,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[9.204,7.889],[0,0],[-7.892,9.206],[0,0],[18.406,-17.111],[-5.731,-30.75],[3.313,-3.313],[0,0],[0,0],[0,0],[-20.284,-2.097],[-22.962,22.96],[15.613,29.695]],o:[[-7.893,9.208],[0,0],[-9.21,-7.891],[0,0],[-23.555,-1.302],[-24.802,23.061],[3.42,18.34],[0,0],[0,0],[0,0],[28.21,-28.209],[18.394,1.903],[26.542,-26.545],[0,0]],v:[[50.098,-0.672],[19.013,1.722],[-19.101,-30.946],[-21.496,-62.032],[13.849,-103.272],[-52.119,-79.663],[-83.667,-0.794],[-98.235,36.539],[-108.152,46.461],[-52.96,104.574],[-46.09,97.701],[10.475,63.906],[79.251,38.962],[92.539,-50.191]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1121.367,499.693],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 12",np:2,cix:2,bm:0,ix:12,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[7.468,-7.469],[7.465,7.469],[-7.467,7.465],[-7.466,-7.469]],o:[[-7.466,7.469],[-7.467,-7.469],[7.465,-7.469],[7.468,7.465]],v:[[-29.151,56.554],[-56.193,56.554],[-56.193,29.512],[-29.151,29.512]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[0,0],[0,0],[-12.309,-12.31],[0,0],[-12.308,12.309],[0,0]],o:[[0,0],[-12.309,12.31],[0,0],[12.309,12.309],[0,0],[0,0]],v:[[30.959,-88.345],[-76.766,19.381],[-76.766,64.146],[-64.876,76.036],[-20.114,76.036],[89.075,-33.152]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[899.883,716.865],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 13",np:4,cix:2,bm:0,ix:13,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[5.032,-10.067],[0,0],[11.334,41.901],[-18.247,-21.133],[0.142,10.382],[-2.967,-13.408],[-1.317,7.85],[-10.106,-8.815]],o:[[0,0],[-28.542,15.876],[-7.55,-27.919],[5.049,5.845],[-0.156,-11.307],[2.013,9.083],[1.993,-11.905],[16.219,14.142]],v:[[57.096,15.182],[23.278,48.999],[-42.464,10.039],[-17.174,-10.326],[-4.912,-19.112],[11.083,-18.985],[28.27,-19.367],[52.586,-21.487]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[19.891,19.891],[19.894,3.979],[17.682,15.028],[-10.905,-44.975],[-43.868,28.842],[0,0]],o:[[-19.891,-19.891],[-19.89,-3.977],[0,0],[13.371,55.144],[0,0],[6.579,-13.162]],v:[[58.851,-38.511],[-0.822,-65.476],[-71.104,-91.554],[-69.114,-19.284],[29.235,62.711],[73.44,18.51]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[863.548,486.603],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 14",np:4,cix:2,bm:0,ix:14,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[-13.785,13.785],[0,0],[12.312,12.31],[0,0],[12.308,-12.307],[0,0],[-12.311,-12.309],[0,0]],o:[[0,0],[13.786,-13.785],[0,0],[-12.308,-12.309],[0,0],[-12.311,12.308],[0,0],[12.311,12.31]],v:[[128.534,128.501],[128.534,128.501],[131.684,80.584],[-69.427,-131.653],[-114.187,-131.653],[-131.685,-114.156],[-131.685,-69.396],[80.618,131.652]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1046.143,662.187],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 15",np:2,cix:2,bm:0,ix:15,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[22.87,59.992],[-69.384,-44.227],[-51.572,-59.992],[26.219,27.888],[54.92,2.479],[69.384,18.818]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[518.659,426.998],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 16",np:2,cix:2,bm:0,ix:16,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-2.63,-58.411],[-14.034,-74.906],[-65.129,-39.57],[-53.724,-23.078],[-37.879,-34.035],[18.476,47.454],[2.629,58.411],[14.036,74.906],[65.129,39.571],[53.722,23.078],[37.879,34.036],[-18.473,-47.453]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[590.918,358.591],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 17",np:2,cix:2,bm:0,ix:17,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-13.757,-39.784],[3.403,-5.724],[35.357,-21.822],[44.375,-3.911],[12.596,12.096],[39.486,65.47],[18.239,76.171],[-44.375,-48.132],[11.277,-76.171],[20.829,-57.207]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[658.075,309.299],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 18",np:2,cix:2,bm:0,ix:18,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-6.342,76.056],[-54.049,-54.696],[4.496,-76.056],[11.639,-56.479],[-25.666,-42.869],[-13,-8.15],[21.536,-20.75],[28.14,-2.65],[-6.396,9.95],[7.683,48.547],[46.838,34.264],[54.049,54.023]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[759.765,272.599],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 19",np:2,cix:2,bm:0,ix:19,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[22.943,-53.782],[19.811,-73.587],[-41.547,-63.887],[-38.415,-44.081],[-19.388,-47.087],[-3.915,50.774],[-22.945,53.783],[-19.813,73.587],[41.547,63.888],[38.416,44.081],[19.388,47.089],[3.913,-50.773]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[887.641,239.73],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 20",np:2,cix:2,bm:0,ix:20,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[7.733,0],[2.096,-0.718],[1.701,-1.572],[0.984,-2.485],[0,-3.407],[-3.54,-3.209],[-5.767,-2.883],[-3.535,-2.227],[-2.887,-3.145],[-1.836,-4.325],[0,-5.899],[2.163,-5.24],[3.598,-3.605],[4.849,-1.833],[5.372,0],[6.549,3.011],[3.932,4.588],[0,0],[-4.261,-2.093],[-4.457,0],[-3.28,3.41],[0,6.164],[3.932,3.539],[6.025,3.015],[3.343,2.232],[2.556,3.082],[1.505,4.127],[0,5.769],[-2.294,5.178],[-3.733,3.411],[-4.72,1.642],[-4.851,0],[-5.576,-2.293],[-3.805,-4.454]],o:[[-5.11,-6.158],[-2.229,0],[-2.096,0.724],[-1.707,1.574],[-0.981,2.491],[0,5.9],[3.537,3.213],[3.407,1.704],[3.54,2.23],[2.88,3.144],[1.832,4.327],[0,6.816],[-2.163,5.244],[-3.61,3.605],[-4.849,1.836],[-7.735,0],[-6.556,-3.014],[0,0],[3.015,3.672],[4.256,2.099],[4.979,0],[3.272,-3.407],[0,-6.026],[-3.93,-3.537],[-3.803,-1.836],[-3.344,-2.225],[-2.553,-3.078],[-1.509,-4.128],[0,-7.203],[2.289,-5.175],[3.736,-3.407],[4.717,-1.636],[7.076,0],[5.569,2.295],[0,0]],v:[[25.949,-42.659],[6.684,-51.899],[0.196,-50.819],[-5.504,-47.377],[-9.535,-41.284],[-11.01,-32.438],[-5.7,-18.774],[8.256,-9.631],[18.673,-3.734],[28.311,4.325],[35.385,15.531],[38.138,30.864],[34.895,48.95],[26.247,62.221],[13.564,70.378],[-1.768,73.13],[-23.196,68.611],[-38.926,57.209],[-26.147,39.907],[-15.235,48.556],[-2.163,51.704],[10.224,46.591],[15.138,32.24],[9.24,17.889],[-5.7,8.061],[-16.415,1.965],[-25.263,-5.996],[-31.356,-16.807],[-33.616,-31.652],[-30.176,-50.228],[-21.134,-63.105],[-8.452,-70.674],[5.899,-73.13],[24.87,-69.689],[38.926,-59.566]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[978.889,230.589],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 21",np:2,cix:2,bm:0,ix:21,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[9.955,-45.257],[-7.997,72.515],[-30.934,69.019],[-12.981,-48.754],[-38.826,-52.693],[-35.805,-72.515],[38.827,-61.138],[35.804,-41.319]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1121.475,236.785],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 22",np:2,cix:2,bm:0,ix:22,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-49.198,57.981],[-10.687,-75.769],[49.198,-58.528],[43.431,-38.503],[5.272,-49.49],[-4.955,-13.975],[30.371,-3.804],[25.042,14.71],[-10.285,4.54],[-21.653,44.022],[18.397,55.553],[12.576,75.769]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1202.994,258.199],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 23",np:2,cix:2,bm:0,ix:23,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[6.622,-0.5],[7.737,3.866],[4.048,6.12],[1.028,7.765],[-1.818,9.054],[-4.745,9.496],[-6.181,6.947],[-6.888,3.814],[-7.301,0.384],[-6.92,-3.457],[-4.077,-5.334],[-0.943,-6.627],[0,0],[7.62,3.803],[4.367,-0.822],[4.162,-3.045],[3.837,-5.042],[3.16,-6.332],[1.726,-6.093],[-0.062,-5.157],[-2.025,-4.014],[-4.341,-2.167],[-4.043,0.616],[-3.519,2.054],[0,0]],o:[[-6.624,0.498],[-7.032,-3.512],[-4.051,-6.123],[-1.035,-7.765],[1.811,-9.06],[4.744,-9.498],[6.18,-6.949],[6.883,-3.813],[7.296,-0.381],[7.148,3.571],[4.076,5.332],[0,0],[-1.353,-9.319],[-4.223,-2.109],[-4.365,0.825],[-4.155,3.052],[-3.84,5.04],[-3.105,6.214],[-1.726,6.1],[0.058,5.16],[2.022,4.015],[4.103,2.048],[4.042,-0.619],[0,0],[-5.742,3.284]],v:[[-10.681,70.192],[-32.224,65.145],[-48.847,50.691],[-56.459,29.857],[-55.284,4.628],[-45.451,-23.204],[-29.065,-47.871],[-9.465,-64.015],[11.807,-70.31],[33.13,-65.704],[49.972,-52.346],[57.495,-34.413],[37.979,-25.702],[24.521,-45.388],[11.639,-47.319],[-1.152,-41.513],[-13.143,-29.371],[-23.641,-12.311],[-30.888,6.153],[-33.385,23.034],[-30.26,36.793],[-20.715,46.064],[-8.493,48.212],[2.847,44.206],[7.863,64.513]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1309.212,298.27],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 24",np:2,cix:2,bm:0,ix:24,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-20.66,69.643],[13.135,17.989],[-21.744,-4.828],[-55.539,46.828],[-75.113,34.019],[1.085,-82.451],[20.658,-69.647],[-10.227,-22.431],[24.651,0.386],[55.537,-46.829],[75.113,-34.022],[-1.083,82.451]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1401.918,349.723],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 25",np:2,cix:2,bm:0,ix:25,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0]],v:[[-26.722,11.584],[38.198,-56.898],[54.604,-41.343],[-10.315,27.136]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[2.614,-2.755],[3.748,-0.24],[2.759,2.614],[-0.083,3.708],[-2.797,2.948],[-3.796,0.383],[-2.852,-2.707],[0.128,-3.847]],o:[[-2.796,2.953],[-3.746,0.238],[-2.851,-2.708],[0.089,-3.713],[2.614,-2.758],[3.784,-0.379],[2.757,2.614],[-0.129,3.854]],v:[[-30.792,51.877],[-40.61,56.66],[-50.369,53.098],[-54.521,43.475],[-50.194,33.486],[-40.584,28.777],[-30.621,32.269],[-26.677,41.964]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[1503.325,427.57],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 26",np:4,cix:2,bm:0,ix:26,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[1.309,-5.228],[1.497,-5.234],[0,6.54],[-2.988,0],[-1.121,-1.311]],o:[[-0.187,1.495],[-5.045,-3.736],[0,-6.535],[0.746,0],[1.682,2.053]],v:[[165.703,-3.458],[162.153,9.622],[154.867,-6.82],[161.594,-16.721],[165.141,-15.037]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[3.737,-3.55],[6.352,0],[0,8.965],[-0.746,2.806],[-1.685,6.351],[-4.485,4.482],[-3.734,0.746],[0,-4.295],[-7.098,-7.098],[-2.988,-1.679]],o:[[-5.043,4.671],[-9.902,0],[0,-2.617],[1.682,-5.604],[2.611,-9.154],[2.986,-2.802],[-1.866,3.736],[0,10.276],[2.243,2.243],[-2.617,5.977]],v:[[147.768,40.074],[130.579,47.171],[114.889,32.228],[116.198,23.258],[121.056,6.072],[131.704,-14.29],[141.601,-19.521],[138.803,-5.326],[149.45,19.896],[157.298,25.686]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ind:2,ty:"sh",ix:3,ks:{a:0,k:{i:[[-0.373,1.307],[-14.385,0],[1.872,-8.223],[3.922,-2.241],[9.529,0],[0,0]],o:[[4.296,-14.946],[8.782,0],[-1.119,5.229],[-4.67,2.804],[0,0],[0.187,-1.123]],v:[[-175.042,5.325],[-146.833,-19.896],[-134.315,-5.883],[-142.162,4.95],[-163.274,9.063],[-175.976,9.063]],c:true},ix:2},nm:"パス 3",mn:"ADBE Vector Shape - Group",hd:false},{ind:3,ty:"sh",ix:4,ks:{a:0,k:{i:[[3.364,2.991],[2.798,-3.362],[0,0],[0,0],[7.468,12.701],[0.746,3.925],[-3.363,3.923],[3.359,2.989],[2.616,-3.173],[0,0],[0.08,-0.094],[0,0],[1.866,0],[0,2.992],[-1.125,2.615],[-7.474,17.375],[3.364,2.239],[0,0],[0,0],[3.366,2.804],[3.171,-3.73],[0,0],[0.229,-0.273],[0,0],[2.057,0.747],[-0.373,1.871],[3.365,4.294],[6.352,0],[2.804,-1.309],[4.482,0],[6.167,-3.547],[8.969,-10.46],[0,0],[0.173,-0.253],[0,0],[2.802,0],[0.933,1.122],[-0.747,2.43],[0,0],[0,0],[0,4.483],[4.484,0],[0,0],[0,0],[4.299,1.305],[1.306,-4.112],[0,0],[11.77,-14.01],[0,0],[0.188,-0.291],[0,0],[3.177,0],[-10.835,39.606],[19.801,0],[6.912,-7.285],[5.601,0],[2.611,-3.923],[2.801,-3.175],[0,0],[0.197,-0.324],[0,0],[14.76,0],[3.366,4.671],[-1.121,5.976],[0,0],[-7.288,4.108],[-2.803,9.154],[0.746,4.112],[12.705,0],[6.726,-3.551],[8.034,-9.527],[0,0],[0.232,-0.355],[0,0],[3.176,0],[0,0],[6.164,8.219],[8.966,0],[6.54,-7.47],[8.78,0],[5.419,-5.793],[6.907,0],[2.054,-2.992],[5.231,-6.165],[0,0],[-3.363,-2.807],[-1.867,0],[-1.681,1.868],[0,0],[0,0],[-6.166,0],[-0.936,3.548],[0,0],[-12.89,0],[3.175,-10.46],[0,0],[-4.485,-1.121],[-1.494,4.856],[-2.428,8.781],[-12.33,0],[3.179,-11.019],[0,0],[0,-1.684],[-7.843,0],[-7.1,7.848],[-8.228,9.788],[-5.954,-7.998],[-18.31,0],[-8.968,4.674],[-10.465,11.958],[0,0],[-0.21,0.334],[0,0],[0,0],[-4.107,-1.311],[-0.743,0],[-1.119,3.733],[0,0],[-13.263,0],[3.365,-12.326],[0,0],[0,-2.428],[-7.844,0],[-7.1,7.848],[-9.073,10.806],[-0.059,0.066],[0,0],[0,0],[-4.109,-5.605],[-6.722,0],[-4.482,5.045],[0,0],[-0.016,0.018],[0,0],[0,0],[0.167,-0.503],[-6.915,-9.524],[-10.648,0],[-7.847,7.474],[-3.363,8.217],[-5.601,0],[-1.868,2.241],[0,0],[0,0],[0,0],[6.723,-15.318],[0,-5.604],[-3.176,-3.55],[-5.606,0],[-12.327,14.756],[0,0],[-0.016,0.019],[0,0],[-4.67,-7.473],[0,-4.295],[2.803,-2.8],[6.54,0],[1.494,1.306],[2.617,-3.553],[-3.362,-2.618],[-9.34,0],[-8.782,5.231],[-12.7,14.388],[0,0]],o:[[-3.363,-2.8],[0,0],[0,0],[-0.748,-6.164],[-2.615,-4.672],[-0.189,-1.12],[2.99,-3.363],[-2.99,-2.617],[0,0],[-0.081,0.09],[0,0],[-5.417,6.353],[-2.241,0],[0,-2.052],[6.158,-14.384],[1.679,-3.922],[0,0],[0,0],[2.803,-3.362],[-3.362,-2.986],[0,0],[-0.258,0.232],[0,0],[-3.736,0],[2.057,-7.474],[3.174,-13.265],[-3.923,-4.858],[-2.988,0],[-1.121,-3.177],[-5.793,0],[-6.353,3.549],[0,0],[-0.209,0.235],[0,0],[-3.18,3.548],[-1.681,0],[-1.121,-1.495],[0,0],[0,0],[4.484,0],[0,-4.298],[0,0],[0,0],[1.308,-4.296],[-4.295,-1.125],[0,0],[-3.363,9.9],[0,0],[-0.226,0.272],[-8.471,10.064],[-3.179,3.547],[0.935,-3.739],[7.1,-22.792],[-9.529,0],[1.306,-4.669],[-2.615,0],[-2.806,4.301],[0,0],[-0.246,0.296],[0,0],[-19.058,21.856],[-9.151,0],[-2.802,-3.737],[0,0],[12.332,0],[7.469,-4.297],[1.122,-4.296],[-1.869,-13.824],[-7.474,0],[-7.096,3.55],[0,0],[-0.287,0.324],[-8.228,9.774],[-3.176,3.547],[0,0],[2.99,-10.276],[-5.793,-7.475],[-10.278,0],[-5.231,-7.656],[-8.783,0],[0.56,-2.616],[-2.247,0],[-2.055,2.987],[-11.773,14.013],[-2.799,3.366],[1.495,1.305],[2.242,0],[0,0],[0,0],[-1.309,5.234],[3.549,0],[0,0],[7.289,-25.221],[10.465,0],[0,0],[-1.306,5.045],[5.231,1.307],[0.561,-2.057],[3.179,-11.957],[11.77,0],[0,0],[-0.935,3.553],[0,7.472],[7.847,0],[0,0],[-2.938,11.341],[4.669,6.167],[11.024,0],[9.9,-5.04],[0,0],[0.259,-0.31],[0,0],[0,0],[-1.119,4.116],[0.751,0.186],[3.553,0],[0,0],[6.728,-23.726],[11.025,0],[0,0],[-0.746,2.804],[0,7.475],[7.848,0],[0,0],[0.06,-0.063],[0,0],[0,0],[-2.055,7.283],[3.925,5.23],[10.461,0],[0,0],[0.015,-0.017],[0,0],[0,0],[-0.002,0.139],[-3.176,10.648],[5.604,7.479],[10.465,0],[5.604,-5.229],[7.098,1.866],[4.111,0],[0,0],[0,0],[0,0],[-5.796,13.823],[-1.868,4.298],[0,5.229],[3.549,3.735],[11.019,0],[0,0],[0.016,-0.018],[0,0],[1.309,2.803],[8.034,13.641],[0,3.737],[-2.055,2.055],[-5.977,0],[-3.547,-2.803],[-2.803,3.546],[3.55,2.802],[7.474,0],[7.844,-5.048],[0,0],[2.799,-3.363]],v:[[379.977,-4.391],[368.585,-3.458],[350.276,18.217],[342.054,27.557],[331.221,1.963],[322.626,-14.106],[325.427,-21.203],[324.495,-32.599],[313.47,-31.853],[284.949,2.071],[284.703,2.336],[252.943,40.074],[243.604,46.984],[238.932,42.126],[240.616,35.029],[263.034,-14.666],[260.976,-24.378],[250.328,-30.919],[252.757,-33.721],[252.194,-44.932],[240.616,-43.999],[206.979,-4.209],[206.242,-3.458],[188.682,17.47],[177.099,16.161],[181.396,0.281],[177.658,-25.126],[161.594,-32.787],[153,-30.732],[144.969,-35.961],[127.219,-31.479],[105.173,-11.303],[79.579,19.151],[79.01,19.885],[60.903,41.382],[52.308,46.984],[48.384,45.118],[47.636,38.952],[63.701,-19.896],[82.011,-19.896],[90.045,-27.93],[82.011,-35.961],[68.188,-35.961],[72.668,-52.217],[67.063,-62.117],[57.167,-56.513],[51.747,-36.896],[32.876,-8.312],[11.021,17.654],[10.407,18.503],[-8.215,40.636],[-16.997,46.613],[-5.417,4.204],[-30.076,-35.961],[-55.667,-25.502],[-63.703,-34.467],[-71.359,-29.427],[-78.273,-19.896],[-108.164,15.6],[-108.82,16.535],[-112.269,20.645],[-158.789,47.173],[-178.032,40.074],[-180.459,25.129],[-163.274,25.129],[-134.125,18.963],[-118.808,-1.4],[-118.062,-14.106],[-146.084,-35.961],[-167.57,-31.292],[-189.802,-12.049],[-215.768,18.776],[-216.539,19.799],[-234.071,40.636],[-242.852,46.613],[-231.271,4.204],[-234.445,-25.126],[-257.424,-35.961],[-283.953,-24.756],[-305.438,-35.961],[-328.044,-26.248],[-336.073,-34.467],[-342.987,-30.544],[-351.579,-18.777],[-380.729,15.783],[-379.792,27.184],[-374.562,29.049],[-368.582,26.062],[-351.956,6.445],[-364.472,51.469],[-356.625,61.744],[-348.964,55.768],[-338.32,18.03],[-306.372,-20.27],[-297.216,-0.28],[-308.054,39.885],[-302.823,49.789],[-292.359,43.623],[-281.151,2.52],[-258.547,-20.27],[-246.776,-0.094],[-258.357,41.755],[-259.481,49.977],[-244.162,63.053],[-223.422,52.777],[-195.623,19.668],[-190.92,49.787],[-158.789,63.242],[-129.643,56.324],[-100.873,31.852],[-87.051,15.413],[-86.354,14.441],[-79.953,6.82],[-92.289,51.652],[-86.685,61.558],[-84.442,61.744],[-76.783,55.768],[-65.945,17.654],[-32.878,-20.27],[-20.922,-0.094],[-32.505,41.755],[-33.625,49.601],[-18.307,63.053],[2.432,52.777],[22.98,28.299],[23.163,28.116],[39.042,9.249],[32.13,34.658],[35.493,54.835],[52.308,63.053],[73.603,51.096],[91.298,30.036],[91.347,29.986],[92.689,28.381],[100.875,18.639],[100.689,19.338],[104.987,51.652],[130.579,63.242],[158.606,51.842],[172.245,31.481],[189.429,33.718],[199.517,29.611],[215.266,10.617],[240.237,-18.962],[245.658,-15.783],[225.856,28.489],[222.117,43.81],[226.975,57.263],[241.362,63.239],[271.435,42.877],[283.157,28.917],[283.205,28.865],[309.918,-2.897],[317.393,10.182],[326.177,31.852],[321.693,42.128],[309.547,47.173],[297.031,43.063],[285.821,44.559],[287.13,55.768],[309.547,63.242],[333.089,56.7],[362.043,29.049],[380.729,6.82]],c:true},ix:2},nm:"パス 4",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[1006.165,1378.575],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 27",np:6,cix:2,bm:0,ix:27,mn:"ADBE Vector Group",hd:false},{ty:"tm",s:{a:0,k:0,ix:1},e:{a:1,k:[{i:{x:[0.282],y:[1]},o:{x:[0.333],y:[0]},t:9,s:[0]},{t:35,s:[100]}],ix:2},o:{a:0,k:0,ix:3},m:1,ix:28,nm:"パスのトリミング 1",mn:"ADBE Vector Filter - Trim",hd:false},{ty:"st",c:{a:0,k:[0,0,0,1],ix:3},o:{a:0,k:100,ix:4},w:{a:0,k:6,ix:5},lc:1,lj:1,ml:4,bm:0,nm:"線 1",mn:"ADBE Vector Graphic - Stroke",hd:false}],ip:9,op:35,st:9,bm:0},{ddd:0,ind:5,ty:4,nm:"Life is Tech ! KANSAI LOGO_1Layerアウトライン 4",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[542,540,0],ix:2},a:{a:0,k:[1003,951.373,0],ix:1},s:{a:0,k:[50,50,100],ix:6}},ao:0,shapes:[{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-128.357,-159.105],[-55.638,-159.105],[-55.638,-28.796],[-54.175,-28.796],[40.018,-159.105],[119.085,-159.105],[23.912,-32.211],[128.357,159.105],[48.804,159.105],[-18.546,24.894],[-55.638,73.696],[-55.638,159.105],[-128.357,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[165.507,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 1",np:2,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[4.225,16.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[-3.908,16.922],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-0.485,-104.443],[-2.439,-104.443],[-68.815,159.106],[-142.024,159.106],[-42.948,-159.107],[42.95,-159.107],[142.024,159.106],[65.888,159.106]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[492.009,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 2",np:2,cix:2,bm:0,ix:2,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,25.673],[-25.672,0],[0,-25.675],[25.675,0]],o:[[0,-25.675],[25.675,0],[0,25.673],[-25.672,0]],v:[[-46.485,0],[-0.001,-46.484],[46.485,0],[-0.001,46.484]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[490.399,1148.471],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 3",np:2,cix:2,bm:0,ix:3,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[2.599,20.828],[0,18.545],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-2.607,-20.172],[0,-18.867],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[-1.63,-16.917],[-2.61,-20.816],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[1.625,17.571],[2.598,20.176],[0,0],[0,0],[0,0]],v:[[-114.205,-159.105],[-40.997,-159.105],[26.354,-0.489],[53.686,69.305],[55.638,69.305],[49.295,12.688],[45.389,-46.364],[45.389,-159.105],[114.206,-159.105],[114.206,159.105],[40.997,159.105],[-26.356,0.489],[-53.684,-68.814],[-55.639,-68.814],[-49.292,-12.199],[-45.39,46.365],[-45.39,159.105],[-114.205,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[833.644,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 4",np:2,cix:2,bm:0,ix:4,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[-14.154,-6.176],[-13.995,0],[-7.649,5.538],[0,9.442],[2.272,3.585],[4.225,2.767],[6.014,2.443],[7.809,2.929],[0,0],[8.295,5.206],[6.175,7.001],[3.739,9.27],[0,11.715],[-5.694,11.549],[-10.252,8.625],[-14.323,4.882],[-17.253,0],[-18.227,-7.151],[-14.641,-13.666],[0,0],[10.737,4.392],[13.665,0],[7.642,-5.04],[0,-9.104],[-9.762,-4.879],[-15.295,-5.529],[0,0],[-12.198,-13.666],[0,-22.449],[5.525,-11.872],[10.412,-8.943],[15.288,-5.368],[19.843,0],[20.986,7.642],[17.242,15.298]],o:[[12.032,9.76],[14.155,6.184],[16.594,0],[7.641,-5.529],[0,-4.882],[-2.278,-3.576],[-4.237,-2.761],[-6.027,-2.438],[0,0],[-8.786,-3.246],[-8.299,-5.202],[-6.185,-6.992],[-3.743,-9.274],[0,-13.008],[5.693,-11.549],[10.249,-8.618],[14.312,-4.878],[19.519,0],[18.218,7.162],[0,0],[-11.066,-8.13],[-10.737,-4.391],[-13.994,0],[-7.649,5.051],[0,9.761],[9.761,4.882],[0,0],[21.145,7.812],[12.205,13.663],[0,13.345],[-5.536,11.881],[-10.415,8.955],[-15.299,5.371],[-21.476,0],[-20.989,-7.641],[0,0]],v:[[-80.773,69.793],[-41.484,93.708],[0.733,102.979],[37.093,94.682],[48.558,72.232],[45.145,59.543],[35.386,50.026],[20.012,42.216],[-0.73,34.164],[-41.728,16.594],[-67.349,3.906],[-89.071,-14.397],[-103.958,-38.799],[-109.569,-70.281],[-101.03,-107.125],[-77.111,-137.386],[-40.264,-157.642],[7.078,-164.963],[63.693,-154.225],[112.984,-122.989],[76.381,-77.6],[43.682,-96.391],[7.078,-102.979],[-25.38,-95.416],[-36.847,-74.184],[-22.207,-52.223],[15.373,-36.603],[53.931,-20.012],[103.954,12.203],[122.259,66.375],[113.963,104.199],[90.045,135.435],[51.49,156.908],[-1.219,164.962],[-64.911,153.495],[-122.259,119.085]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1175.522,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 5",np:2,cix:2,bm:0,ix:5,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[4.228,16.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[-3.906,16.922],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-0.488,-104.445],[-2.439,-104.445],[-68.815,159.105],[-142.024,159.105],[-42.949,-159.105],[42.95,-159.105],[142.024,159.105],[65.887,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1516.912,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 6",np:2,cix:2,bm:0,ix:6,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,25.673],[-25.672,0],[0,-25.675],[25.675,0]],o:[[0,-25.675],[25.675,0],[0,25.673],[-25.672,0]],v:[[-46.485,0],[-0.002,-46.484],[46.485,0],[-0.002,46.484]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1515.392,1148.471],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 7",np:2,cix:2,bm:0,ix:7,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-110.302,98.587],[-36.114,98.587],[-36.114,-98.586],[-110.302,-98.586],[-110.302,-159.106],[110.302,-159.106],[110.302,-98.586],[36.114,-98.586],[36.114,98.587],[110.302,98.587],[110.302,159.106],[-110.302,159.106]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1858.547,1035.85],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 8",np:2,cix:2,bm:0,ix:8,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[57.355,-57.356],[186.164,0],[87.328,37.703],[5.771,-3.56],[102.949,-23.11],[60.15,-1.685],[-46.317,35.985],[-10.097,12.43],[-0.672,0.864],[8.233,7.593],[38.344,80.766],[0,0],[-0.485,-1.093],[-67.267,-65.546],[47.357,-36.789],[29.182,-10.938],[-2.303,-12.892],[-26.693,-0.131],[-1.922,0],[-106.192,23.833],[-27.971,13.037],[-98.336,0],[-139.781,139.782],[-36.491,82.695]],o:[[-33.792,71.16],[-131.636,131.64],[-95.799,0],[-6.645,-2.867],[-14.291,6.832],[-85.415,19.171],[38.167,-16.665],[64.733,-50.292],[0.776,-0.736],[6.874,-8.842],[-66.186,-61.06],[0,0],[0.483,1.096],[38.354,85.675],[-18.885,21.733],[-60.335,46.873],[-24.369,9.126],[2.339,13.062],[1.869,0.008],[64.532,-0.003],[98.108,-22.023],[90.045,37.446],[197.682,0],[65.833,-65.838],[0,0]],v:[[699.185,-244.165],[561.916,-50.053],[69.092,154.083],[-206.89,97.262],[-226.629,98.701],[-438.979,173.06],[-663.949,200.583],[-525.938,121.09],[-403.097,0.952],[-400.925,-1.451],[-403.333,-30.519],[-560.752,-244.165],[-608.149,-244.165],[-606.726,-240.87],[-447.639,-13.125],[-552.385,87.042],[-716.293,175.344],[-744.317,215.657],[-703.089,244.153],[-697.418,244.164],[-429.538,215.125],[-214.721,140.767],[69.092,197.191],[592.401,-19.569],[746.62,-244.165]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[933.906,1501.123],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 9",np:2,cix:2,bm:0,ix:9,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[88.714,99.713],[0,0],[-24.312,-117.679]],o:[[-25.065,-129.23],[0,0],[80.671,91.367],[0,0]],v:[[101.674,174.406],[-71.211,-174.406],[-101.674,-143.799],[57.738,174.406]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1627.738,641.476],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 10",np:2,cix:2,bm:0,ix:10,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[-80.115,91.131],[0,0],[24.965,-128.699]],o:[[24.209,-117.189],[0,0],[-88.113,99.468],[0,0]],v:[[-57.224,173.789],[101.164,-143.269],[70.643,-173.789],[-101.164,173.789]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[377.748,642.093],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 11",np:2,cix:2,bm:0,ix:11,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[9.204,7.889],[0,0],[-7.892,9.206],[0,0],[18.406,-17.111],[-5.731,-30.75],[3.313,-3.313],[0,0],[0,0],[0,0],[-20.284,-2.097],[-22.962,22.96],[15.613,29.695]],o:[[-7.893,9.208],[0,0],[-9.21,-7.891],[0,0],[-23.555,-1.302],[-24.802,23.061],[3.42,18.34],[0,0],[0,0],[0,0],[28.21,-28.209],[18.394,1.903],[26.542,-26.545],[0,0]],v:[[50.098,-0.672],[19.013,1.722],[-19.101,-30.946],[-21.496,-62.032],[13.849,-103.272],[-52.119,-79.663],[-83.667,-0.794],[-98.235,36.539],[-108.152,46.461],[-52.96,104.574],[-46.09,97.701],[10.475,63.906],[79.251,38.962],[92.539,-50.191]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1121.367,499.693],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 12",np:2,cix:2,bm:0,ix:12,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[7.468,-7.469],[7.465,7.469],[-7.467,7.465],[-7.466,-7.469]],o:[[-7.466,7.469],[-7.467,-7.469],[7.465,-7.469],[7.468,7.465]],v:[[-29.151,56.554],[-56.193,56.554],[-56.193,29.512],[-29.151,29.512]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[0,0],[0,0],[-12.309,-12.31],[0,0],[-12.308,12.309],[0,0]],o:[[0,0],[-12.309,12.31],[0,0],[12.309,12.309],[0,0],[0,0]],v:[[30.959,-88.345],[-76.766,19.381],[-76.766,64.146],[-64.876,76.036],[-20.114,76.036],[89.075,-33.152]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[899.883,716.865],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 13",np:4,cix:2,bm:0,ix:13,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[5.032,-10.067],[0,0],[11.334,41.901],[-18.247,-21.133],[0.142,10.382],[-2.967,-13.408],[-1.317,7.85],[-10.106,-8.815]],o:[[0,0],[-28.542,15.876],[-7.55,-27.919],[5.049,5.845],[-0.156,-11.307],[2.013,9.083],[1.993,-11.905],[16.219,14.142]],v:[[57.096,15.182],[23.278,48.999],[-42.464,10.039],[-17.174,-10.326],[-4.912,-19.112],[11.083,-18.985],[28.27,-19.367],[52.586,-21.487]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[19.891,19.891],[19.894,3.979],[17.682,15.028],[-10.905,-44.975],[-43.868,28.842],[0,0]],o:[[-19.891,-19.891],[-19.89,-3.977],[0,0],[13.371,55.144],[0,0],[6.579,-13.162]],v:[[58.851,-38.511],[-0.822,-65.476],[-71.104,-91.554],[-69.114,-19.284],[29.235,62.711],[73.44,18.51]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[863.548,486.603],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 14",np:4,cix:2,bm:0,ix:14,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[-13.785,13.785],[0,0],[12.312,12.31],[0,0],[12.308,-12.307],[0,0],[-12.311,-12.309],[0,0]],o:[[0,0],[13.786,-13.785],[0,0],[-12.308,-12.309],[0,0],[-12.311,12.308],[0,0],[12.311,12.31]],v:[[128.534,128.501],[128.534,128.501],[131.684,80.584],[-69.427,-131.653],[-114.187,-131.653],[-131.685,-114.156],[-131.685,-69.396],[80.618,131.652]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1046.143,662.187],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 15",np:2,cix:2,bm:0,ix:15,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[22.87,59.992],[-69.384,-44.227],[-51.572,-59.992],[26.219,27.888],[54.92,2.479],[69.384,18.818]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[518.659,426.998],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 16",np:2,cix:2,bm:0,ix:16,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-2.63,-58.411],[-14.034,-74.906],[-65.129,-39.57],[-53.724,-23.078],[-37.879,-34.035],[18.476,47.454],[2.629,58.411],[14.036,74.906],[65.129,39.571],[53.722,23.078],[37.879,34.036],[-18.473,-47.453]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[590.918,358.591],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 17",np:2,cix:2,bm:0,ix:17,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-13.757,-39.784],[3.403,-5.724],[35.357,-21.822],[44.375,-3.911],[12.596,12.096],[39.486,65.47],[18.239,76.171],[-44.375,-48.132],[11.277,-76.171],[20.829,-57.207]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[658.075,309.299],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 18",np:2,cix:2,bm:0,ix:18,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-6.342,76.056],[-54.049,-54.696],[4.496,-76.056],[11.639,-56.479],[-25.666,-42.869],[-13,-8.15],[21.536,-20.75],[28.14,-2.65],[-6.396,9.95],[7.683,48.547],[46.838,34.264],[54.049,54.023]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[759.765,272.599],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 19",np:2,cix:2,bm:0,ix:19,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[22.943,-53.782],[19.811,-73.587],[-41.547,-63.887],[-38.415,-44.081],[-19.388,-47.087],[-3.915,50.774],[-22.945,53.783],[-19.813,73.587],[41.547,63.888],[38.416,44.081],[19.388,47.089],[3.913,-50.773]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[887.641,239.73],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 20",np:2,cix:2,bm:0,ix:20,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[7.733,0],[2.096,-0.718],[1.701,-1.572],[0.984,-2.485],[0,-3.407],[-3.54,-3.209],[-5.767,-2.883],[-3.535,-2.227],[-2.887,-3.145],[-1.836,-4.325],[0,-5.899],[2.163,-5.24],[3.598,-3.605],[4.849,-1.833],[5.372,0],[6.549,3.011],[3.932,4.588],[0,0],[-4.261,-2.093],[-4.457,0],[-3.28,3.41],[0,6.164],[3.932,3.539],[6.025,3.015],[3.343,2.232],[2.556,3.082],[1.505,4.127],[0,5.769],[-2.294,5.178],[-3.733,3.411],[-4.72,1.642],[-4.851,0],[-5.576,-2.293],[-3.805,-4.454]],o:[[-5.11,-6.158],[-2.229,0],[-2.096,0.724],[-1.707,1.574],[-0.981,2.491],[0,5.9],[3.537,3.213],[3.407,1.704],[3.54,2.23],[2.88,3.144],[1.832,4.327],[0,6.816],[-2.163,5.244],[-3.61,3.605],[-4.849,1.836],[-7.735,0],[-6.556,-3.014],[0,0],[3.015,3.672],[4.256,2.099],[4.979,0],[3.272,-3.407],[0,-6.026],[-3.93,-3.537],[-3.803,-1.836],[-3.344,-2.225],[-2.553,-3.078],[-1.509,-4.128],[0,-7.203],[2.289,-5.175],[3.736,-3.407],[4.717,-1.636],[7.076,0],[5.569,2.295],[0,0]],v:[[25.949,-42.659],[6.684,-51.899],[0.196,-50.819],[-5.504,-47.377],[-9.535,-41.284],[-11.01,-32.438],[-5.7,-18.774],[8.256,-9.631],[18.673,-3.734],[28.311,4.325],[35.385,15.531],[38.138,30.864],[34.895,48.95],[26.247,62.221],[13.564,70.378],[-1.768,73.13],[-23.196,68.611],[-38.926,57.209],[-26.147,39.907],[-15.235,48.556],[-2.163,51.704],[10.224,46.591],[15.138,32.24],[9.24,17.889],[-5.7,8.061],[-16.415,1.965],[-25.263,-5.996],[-31.356,-16.807],[-33.616,-31.652],[-30.176,-50.228],[-21.134,-63.105],[-8.452,-70.674],[5.899,-73.13],[24.87,-69.689],[38.926,-59.566]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[978.889,230.589],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 21",np:2,cix:2,bm:0,ix:21,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[9.955,-45.257],[-7.997,72.515],[-30.934,69.019],[-12.981,-48.754],[-38.826,-52.693],[-35.805,-72.515],[38.827,-61.138],[35.804,-41.319]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1121.475,236.785],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 22",np:2,cix:2,bm:0,ix:22,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-49.198,57.981],[-10.687,-75.769],[49.198,-58.528],[43.431,-38.503],[5.272,-49.49],[-4.955,-13.975],[30.371,-3.804],[25.042,14.71],[-10.285,4.54],[-21.653,44.022],[18.397,55.553],[12.576,75.769]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1202.994,258.199],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 23",np:2,cix:2,bm:0,ix:23,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[6.622,-0.5],[7.737,3.866],[4.048,6.12],[1.028,7.765],[-1.818,9.054],[-4.745,9.496],[-6.181,6.947],[-6.888,3.814],[-7.301,0.384],[-6.92,-3.457],[-4.077,-5.334],[-0.943,-6.627],[0,0],[7.62,3.803],[4.367,-0.822],[4.162,-3.045],[3.837,-5.042],[3.16,-6.332],[1.726,-6.093],[-0.062,-5.157],[-2.025,-4.014],[-4.341,-2.167],[-4.043,0.616],[-3.519,2.054],[0,0]],o:[[-6.624,0.498],[-7.032,-3.512],[-4.051,-6.123],[-1.035,-7.765],[1.811,-9.06],[4.744,-9.498],[6.18,-6.949],[6.883,-3.813],[7.296,-0.381],[7.148,3.571],[4.076,5.332],[0,0],[-1.353,-9.319],[-4.223,-2.109],[-4.365,0.825],[-4.155,3.052],[-3.84,5.04],[-3.105,6.214],[-1.726,6.1],[0.058,5.16],[2.022,4.015],[4.103,2.048],[4.042,-0.619],[0,0],[-5.742,3.284]],v:[[-10.681,70.192],[-32.224,65.145],[-48.847,50.691],[-56.459,29.857],[-55.284,4.628],[-45.451,-23.204],[-29.065,-47.871],[-9.465,-64.015],[11.807,-70.31],[33.13,-65.704],[49.972,-52.346],[57.495,-34.413],[37.979,-25.702],[24.521,-45.388],[11.639,-47.319],[-1.152,-41.513],[-13.143,-29.371],[-23.641,-12.311],[-30.888,6.153],[-33.385,23.034],[-30.26,36.793],[-20.715,46.064],[-8.493,48.212],[2.847,44.206],[7.863,64.513]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1309.212,298.27],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 24",np:2,cix:2,bm:0,ix:24,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-20.66,69.643],[13.135,17.989],[-21.744,-4.828],[-55.539,46.828],[-75.113,34.019],[1.085,-82.451],[20.658,-69.647],[-10.227,-22.431],[24.651,0.386],[55.537,-46.829],[75.113,-34.022],[-1.083,82.451]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1401.918,349.723],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 25",np:2,cix:2,bm:0,ix:25,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0]],v:[[-26.722,11.584],[38.198,-56.898],[54.604,-41.343],[-10.315,27.136]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[2.614,-2.755],[3.748,-0.24],[2.759,2.614],[-0.083,3.708],[-2.797,2.948],[-3.796,0.383],[-2.852,-2.707],[0.128,-3.847]],o:[[-2.796,2.953],[-3.746,0.238],[-2.851,-2.708],[0.089,-3.713],[2.614,-2.758],[3.784,-0.379],[2.757,2.614],[-0.129,3.854]],v:[[-30.792,51.877],[-40.61,56.66],[-50.369,53.098],[-54.521,43.475],[-50.194,33.486],[-40.584,28.777],[-30.621,32.269],[-26.677,41.964]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[1503.325,427.57],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 26",np:4,cix:2,bm:0,ix:26,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[1.309,-5.228],[1.497,-5.234],[0,6.54],[-2.988,0],[-1.121,-1.311]],o:[[-0.187,1.495],[-5.045,-3.736],[0,-6.535],[0.746,0],[1.682,2.053]],v:[[165.703,-3.458],[162.153,9.622],[154.867,-6.82],[161.594,-16.721],[165.141,-15.037]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[3.737,-3.55],[6.352,0],[0,8.965],[-0.746,2.806],[-1.685,6.351],[-4.485,4.482],[-3.734,0.746],[0,-4.295],[-7.098,-7.098],[-2.988,-1.679]],o:[[-5.043,4.671],[-9.902,0],[0,-2.617],[1.682,-5.604],[2.611,-9.154],[2.986,-2.802],[-1.866,3.736],[0,10.276],[2.243,2.243],[-2.617,5.977]],v:[[147.768,40.074],[130.579,47.171],[114.889,32.228],[116.198,23.258],[121.056,6.072],[131.704,-14.29],[141.601,-19.521],[138.803,-5.326],[149.45,19.896],[157.298,25.686]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ind:2,ty:"sh",ix:3,ks:{a:0,k:{i:[[-0.373,1.307],[-14.385,0],[1.872,-8.223],[3.922,-2.241],[9.529,0],[0,0]],o:[[4.296,-14.946],[8.782,0],[-1.119,5.229],[-4.67,2.804],[0,0],[0.187,-1.123]],v:[[-175.042,5.325],[-146.833,-19.896],[-134.315,-5.883],[-142.162,4.95],[-163.274,9.063],[-175.976,9.063]],c:true},ix:2},nm:"パス 3",mn:"ADBE Vector Shape - Group",hd:false},{ind:3,ty:"sh",ix:4,ks:{a:0,k:{i:[[3.364,2.991],[2.798,-3.362],[0,0],[0,0],[7.468,12.701],[0.746,3.925],[-3.363,3.923],[3.359,2.989],[2.616,-3.173],[0,0],[0.08,-0.094],[0,0],[1.866,0],[0,2.992],[-1.125,2.615],[-7.474,17.375],[3.364,2.239],[0,0],[0,0],[3.366,2.804],[3.171,-3.73],[0,0],[0.229,-0.273],[0,0],[2.057,0.747],[-0.373,1.871],[3.365,4.294],[6.352,0],[2.804,-1.309],[4.482,0],[6.167,-3.547],[8.969,-10.46],[0,0],[0.173,-0.253],[0,0],[2.802,0],[0.933,1.122],[-0.747,2.43],[0,0],[0,0],[0,4.483],[4.484,0],[0,0],[0,0],[4.299,1.305],[1.306,-4.112],[0,0],[11.77,-14.01],[0,0],[0.188,-0.291],[0,0],[3.177,0],[-10.835,39.606],[19.801,0],[6.912,-7.285],[5.601,0],[2.611,-3.923],[2.801,-3.175],[0,0],[0.197,-0.324],[0,0],[14.76,0],[3.366,4.671],[-1.121,5.976],[0,0],[-7.288,4.108],[-2.803,9.154],[0.746,4.112],[12.705,0],[6.726,-3.551],[8.034,-9.527],[0,0],[0.232,-0.355],[0,0],[3.176,0],[0,0],[6.164,8.219],[8.966,0],[6.54,-7.47],[8.78,0],[5.419,-5.793],[6.907,0],[2.054,-2.992],[5.231,-6.165],[0,0],[-3.363,-2.807],[-1.867,0],[-1.681,1.868],[0,0],[0,0],[-6.166,0],[-0.936,3.548],[0,0],[-12.89,0],[3.175,-10.46],[0,0],[-4.485,-1.121],[-1.494,4.856],[-2.428,8.781],[-12.33,0],[3.179,-11.019],[0,0],[0,-1.684],[-7.843,0],[-7.1,7.848],[-8.228,9.788],[-5.954,-7.998],[-18.31,0],[-8.968,4.674],[-10.465,11.958],[0,0],[-0.21,0.334],[0,0],[0,0],[-4.107,-1.311],[-0.743,0],[-1.119,3.733],[0,0],[-13.263,0],[3.365,-12.326],[0,0],[0,-2.428],[-7.844,0],[-7.1,7.848],[-9.073,10.806],[-0.059,0.066],[0,0],[0,0],[-4.109,-5.605],[-6.722,0],[-4.482,5.045],[0,0],[-0.016,0.018],[0,0],[0,0],[0.167,-0.503],[-6.915,-9.524],[-10.648,0],[-7.847,7.474],[-3.363,8.217],[-5.601,0],[-1.868,2.241],[0,0],[0,0],[0,0],[6.723,-15.318],[0,-5.604],[-3.176,-3.55],[-5.606,0],[-12.327,14.756],[0,0],[-0.016,0.019],[0,0],[-4.67,-7.473],[0,-4.295],[2.803,-2.8],[6.54,0],[1.494,1.306],[2.617,-3.553],[-3.362,-2.618],[-9.34,0],[-8.782,5.231],[-12.7,14.388],[0,0]],o:[[-3.363,-2.8],[0,0],[0,0],[-0.748,-6.164],[-2.615,-4.672],[-0.189,-1.12],[2.99,-3.363],[-2.99,-2.617],[0,0],[-0.081,0.09],[0,0],[-5.417,6.353],[-2.241,0],[0,-2.052],[6.158,-14.384],[1.679,-3.922],[0,0],[0,0],[2.803,-3.362],[-3.362,-2.986],[0,0],[-0.258,0.232],[0,0],[-3.736,0],[2.057,-7.474],[3.174,-13.265],[-3.923,-4.858],[-2.988,0],[-1.121,-3.177],[-5.793,0],[-6.353,3.549],[0,0],[-0.209,0.235],[0,0],[-3.18,3.548],[-1.681,0],[-1.121,-1.495],[0,0],[0,0],[4.484,0],[0,-4.298],[0,0],[0,0],[1.308,-4.296],[-4.295,-1.125],[0,0],[-3.363,9.9],[0,0],[-0.226,0.272],[-8.471,10.064],[-3.179,3.547],[0.935,-3.739],[7.1,-22.792],[-9.529,0],[1.306,-4.669],[-2.615,0],[-2.806,4.301],[0,0],[-0.246,0.296],[0,0],[-19.058,21.856],[-9.151,0],[-2.802,-3.737],[0,0],[12.332,0],[7.469,-4.297],[1.122,-4.296],[-1.869,-13.824],[-7.474,0],[-7.096,3.55],[0,0],[-0.287,0.324],[-8.228,9.774],[-3.176,3.547],[0,0],[2.99,-10.276],[-5.793,-7.475],[-10.278,0],[-5.231,-7.656],[-8.783,0],[0.56,-2.616],[-2.247,0],[-2.055,2.987],[-11.773,14.013],[-2.799,3.366],[1.495,1.305],[2.242,0],[0,0],[0,0],[-1.309,5.234],[3.549,0],[0,0],[7.289,-25.221],[10.465,0],[0,0],[-1.306,5.045],[5.231,1.307],[0.561,-2.057],[3.179,-11.957],[11.77,0],[0,0],[-0.935,3.553],[0,7.472],[7.847,0],[0,0],[-2.938,11.341],[4.669,6.167],[11.024,0],[9.9,-5.04],[0,0],[0.259,-0.31],[0,0],[0,0],[-1.119,4.116],[0.751,0.186],[3.553,0],[0,0],[6.728,-23.726],[11.025,0],[0,0],[-0.746,2.804],[0,7.475],[7.848,0],[0,0],[0.06,-0.063],[0,0],[0,0],[-2.055,7.283],[3.925,5.23],[10.461,0],[0,0],[0.015,-0.017],[0,0],[0,0],[-0.002,0.139],[-3.176,10.648],[5.604,7.479],[10.465,0],[5.604,-5.229],[7.098,1.866],[4.111,0],[0,0],[0,0],[0,0],[-5.796,13.823],[-1.868,4.298],[0,5.229],[3.549,3.735],[11.019,0],[0,0],[0.016,-0.018],[0,0],[1.309,2.803],[8.034,13.641],[0,3.737],[-2.055,2.055],[-5.977,0],[-3.547,-2.803],[-2.803,3.546],[3.55,2.802],[7.474,0],[7.844,-5.048],[0,0],[2.799,-3.363]],v:[[379.977,-4.391],[368.585,-3.458],[350.276,18.217],[342.054,27.557],[331.221,1.963],[322.626,-14.106],[325.427,-21.203],[324.495,-32.599],[313.47,-31.853],[284.949,2.071],[284.703,2.336],[252.943,40.074],[243.604,46.984],[238.932,42.126],[240.616,35.029],[263.034,-14.666],[260.976,-24.378],[250.328,-30.919],[252.757,-33.721],[252.194,-44.932],[240.616,-43.999],[206.979,-4.209],[206.242,-3.458],[188.682,17.47],[177.099,16.161],[181.396,0.281],[177.658,-25.126],[161.594,-32.787],[153,-30.732],[144.969,-35.961],[127.219,-31.479],[105.173,-11.303],[79.579,19.151],[79.01,19.885],[60.903,41.382],[52.308,46.984],[48.384,45.118],[47.636,38.952],[63.701,-19.896],[82.011,-19.896],[90.045,-27.93],[82.011,-35.961],[68.188,-35.961],[72.668,-52.217],[67.063,-62.117],[57.167,-56.513],[51.747,-36.896],[32.876,-8.312],[11.021,17.654],[10.407,18.503],[-8.215,40.636],[-16.997,46.613],[-5.417,4.204],[-30.076,-35.961],[-55.667,-25.502],[-63.703,-34.467],[-71.359,-29.427],[-78.273,-19.896],[-108.164,15.6],[-108.82,16.535],[-112.269,20.645],[-158.789,47.173],[-178.032,40.074],[-180.459,25.129],[-163.274,25.129],[-134.125,18.963],[-118.808,-1.4],[-118.062,-14.106],[-146.084,-35.961],[-167.57,-31.292],[-189.802,-12.049],[-215.768,18.776],[-216.539,19.799],[-234.071,40.636],[-242.852,46.613],[-231.271,4.204],[-234.445,-25.126],[-257.424,-35.961],[-283.953,-24.756],[-305.438,-35.961],[-328.044,-26.248],[-336.073,-34.467],[-342.987,-30.544],[-351.579,-18.777],[-380.729,15.783],[-379.792,27.184],[-374.562,29.049],[-368.582,26.062],[-351.956,6.445],[-364.472,51.469],[-356.625,61.744],[-348.964,55.768],[-338.32,18.03],[-306.372,-20.27],[-297.216,-0.28],[-308.054,39.885],[-302.823,49.789],[-292.359,43.623],[-281.151,2.52],[-258.547,-20.27],[-246.776,-0.094],[-258.357,41.755],[-259.481,49.977],[-244.162,63.053],[-223.422,52.777],[-195.623,19.668],[-190.92,49.787],[-158.789,63.242],[-129.643,56.324],[-100.873,31.852],[-87.051,15.413],[-86.354,14.441],[-79.953,6.82],[-92.289,51.652],[-86.685,61.558],[-84.442,61.744],[-76.783,55.768],[-65.945,17.654],[-32.878,-20.27],[-20.922,-0.094],[-32.505,41.755],[-33.625,49.601],[-18.307,63.053],[2.432,52.777],[22.98,28.299],[23.163,28.116],[39.042,9.249],[32.13,34.658],[35.493,54.835],[52.308,63.053],[73.603,51.096],[91.298,30.036],[91.347,29.986],[92.689,28.381],[100.875,18.639],[100.689,19.338],[104.987,51.652],[130.579,63.242],[158.606,51.842],[172.245,31.481],[189.429,33.718],[199.517,29.611],[215.266,10.617],[240.237,-18.962],[245.658,-15.783],[225.856,28.489],[222.117,43.81],[226.975,57.263],[241.362,63.239],[271.435,42.877],[283.157,28.917],[283.205,28.865],[309.918,-2.897],[317.393,10.182],[326.177,31.852],[321.693,42.128],[309.547,47.173],[297.031,43.063],[285.821,44.559],[287.13,55.768],[309.547,63.242],[333.089,56.7],[362.043,29.049],[380.729,6.82]],c:true},ix:2},nm:"パス 4",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[1006.165,1378.575],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 27",np:6,cix:2,bm:0,ix:27,mn:"ADBE Vector Group",hd:false},{ty:"tm",s:{a:0,k:0,ix:1},e:{a:1,k:[{i:{x:[0.282],y:[1]},o:{x:[0.333],y:[0]},t:6,s:[0]},{t:32,s:[100]}],ix:2},o:{a:0,k:0,ix:3},m:1,ix:28,nm:"パスのトリミング 1",mn:"ADBE Vector Filter - Trim",hd:false},{ty:"st",c:{a:0,k:[0.901960784314,0.235294117647,0.207843137255,1],ix:3},o:{a:0,k:100,ix:4},w:{a:0,k:6,ix:5},lc:1,lj:1,ml:4,bm:0,nm:"線 1",mn:"ADBE Vector Graphic - Stroke",hd:false}],ip:6,op:32,st:6,bm:0},{ddd:0,ind:6,ty:4,nm:"Life is Tech ! KANSAI LOGO_1Layerアウトライン 3",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[542,540,0],ix:2},a:{a:0,k:[1003,951.373,0],ix:1},s:{a:0,k:[50,50,100],ix:6}},ao:0,shapes:[{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-128.357,-159.105],[-55.638,-159.105],[-55.638,-28.796],[-54.175,-28.796],[40.018,-159.105],[119.085,-159.105],[23.912,-32.211],[128.357,159.105],[48.804,159.105],[-18.546,24.894],[-55.638,73.696],[-55.638,159.105],[-128.357,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[165.507,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 1",np:2,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[4.225,16.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[-3.908,16.922],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-0.485,-104.443],[-2.439,-104.443],[-68.815,159.106],[-142.024,159.106],[-42.948,-159.107],[42.95,-159.107],[142.024,159.106],[65.888,159.106]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[492.009,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 2",np:2,cix:2,bm:0,ix:2,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,25.673],[-25.672,0],[0,-25.675],[25.675,0]],o:[[0,-25.675],[25.675,0],[0,25.673],[-25.672,0]],v:[[-46.485,0],[-0.001,-46.484],[46.485,0],[-0.001,46.484]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[490.399,1148.471],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 3",np:2,cix:2,bm:0,ix:3,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[2.599,20.828],[0,18.545],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-2.607,-20.172],[0,-18.867],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[-1.63,-16.917],[-2.61,-20.816],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[1.625,17.571],[2.598,20.176],[0,0],[0,0],[0,0]],v:[[-114.205,-159.105],[-40.997,-159.105],[26.354,-0.489],[53.686,69.305],[55.638,69.305],[49.295,12.688],[45.389,-46.364],[45.389,-159.105],[114.206,-159.105],[114.206,159.105],[40.997,159.105],[-26.356,0.489],[-53.684,-68.814],[-55.639,-68.814],[-49.292,-12.199],[-45.39,46.365],[-45.39,159.105],[-114.205,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[833.644,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 4",np:2,cix:2,bm:0,ix:4,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[-14.154,-6.176],[-13.995,0],[-7.649,5.538],[0,9.442],[2.272,3.585],[4.225,2.767],[6.014,2.443],[7.809,2.929],[0,0],[8.295,5.206],[6.175,7.001],[3.739,9.27],[0,11.715],[-5.694,11.549],[-10.252,8.625],[-14.323,4.882],[-17.253,0],[-18.227,-7.151],[-14.641,-13.666],[0,0],[10.737,4.392],[13.665,0],[7.642,-5.04],[0,-9.104],[-9.762,-4.879],[-15.295,-5.529],[0,0],[-12.198,-13.666],[0,-22.449],[5.525,-11.872],[10.412,-8.943],[15.288,-5.368],[19.843,0],[20.986,7.642],[17.242,15.298]],o:[[12.032,9.76],[14.155,6.184],[16.594,0],[7.641,-5.529],[0,-4.882],[-2.278,-3.576],[-4.237,-2.761],[-6.027,-2.438],[0,0],[-8.786,-3.246],[-8.299,-5.202],[-6.185,-6.992],[-3.743,-9.274],[0,-13.008],[5.693,-11.549],[10.249,-8.618],[14.312,-4.878],[19.519,0],[18.218,7.162],[0,0],[-11.066,-8.13],[-10.737,-4.391],[-13.994,0],[-7.649,5.051],[0,9.761],[9.761,4.882],[0,0],[21.145,7.812],[12.205,13.663],[0,13.345],[-5.536,11.881],[-10.415,8.955],[-15.299,5.371],[-21.476,0],[-20.989,-7.641],[0,0]],v:[[-80.773,69.793],[-41.484,93.708],[0.733,102.979],[37.093,94.682],[48.558,72.232],[45.145,59.543],[35.386,50.026],[20.012,42.216],[-0.73,34.164],[-41.728,16.594],[-67.349,3.906],[-89.071,-14.397],[-103.958,-38.799],[-109.569,-70.281],[-101.03,-107.125],[-77.111,-137.386],[-40.264,-157.642],[7.078,-164.963],[63.693,-154.225],[112.984,-122.989],[76.381,-77.6],[43.682,-96.391],[7.078,-102.979],[-25.38,-95.416],[-36.847,-74.184],[-22.207,-52.223],[15.373,-36.603],[53.931,-20.012],[103.954,12.203],[122.259,66.375],[113.963,104.199],[90.045,135.435],[51.49,156.908],[-1.219,164.962],[-64.911,153.495],[-122.259,119.085]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1175.522,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 5",np:2,cix:2,bm:0,ix:5,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[4.228,16.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[-3.906,16.922],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-0.488,-104.445],[-2.439,-104.445],[-68.815,159.105],[-142.024,159.105],[-42.949,-159.105],[42.95,-159.105],[142.024,159.105],[65.887,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1516.912,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 6",np:2,cix:2,bm:0,ix:6,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,25.673],[-25.672,0],[0,-25.675],[25.675,0]],o:[[0,-25.675],[25.675,0],[0,25.673],[-25.672,0]],v:[[-46.485,0],[-0.002,-46.484],[46.485,0],[-0.002,46.484]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1515.392,1148.471],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 7",np:2,cix:2,bm:0,ix:7,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-110.302,98.587],[-36.114,98.587],[-36.114,-98.586],[-110.302,-98.586],[-110.302,-159.106],[110.302,-159.106],[110.302,-98.586],[36.114,-98.586],[36.114,98.587],[110.302,98.587],[110.302,159.106],[-110.302,159.106]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1858.547,1035.85],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 8",np:2,cix:2,bm:0,ix:8,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[57.355,-57.356],[186.164,0],[87.328,37.703],[5.771,-3.56],[102.949,-23.11],[60.15,-1.685],[-46.317,35.985],[-10.097,12.43],[-0.672,0.864],[8.233,7.593],[38.344,80.766],[0,0],[-0.485,-1.093],[-67.267,-65.546],[47.357,-36.789],[29.182,-10.938],[-2.303,-12.892],[-26.693,-0.131],[-1.922,0],[-106.192,23.833],[-27.971,13.037],[-98.336,0],[-139.781,139.782],[-36.491,82.695]],o:[[-33.792,71.16],[-131.636,131.64],[-95.799,0],[-6.645,-2.867],[-14.291,6.832],[-85.415,19.171],[38.167,-16.665],[64.733,-50.292],[0.776,-0.736],[6.874,-8.842],[-66.186,-61.06],[0,0],[0.483,1.096],[38.354,85.675],[-18.885,21.733],[-60.335,46.873],[-24.369,9.126],[2.339,13.062],[1.869,0.008],[64.532,-0.003],[98.108,-22.023],[90.045,37.446],[197.682,0],[65.833,-65.838],[0,0]],v:[[699.185,-244.165],[561.916,-50.053],[69.092,154.083],[-206.89,97.262],[-226.629,98.701],[-438.979,173.06],[-663.949,200.583],[-525.938,121.09],[-403.097,0.952],[-400.925,-1.451],[-403.333,-30.519],[-560.752,-244.165],[-608.149,-244.165],[-606.726,-240.87],[-447.639,-13.125],[-552.385,87.042],[-716.293,175.344],[-744.317,215.657],[-703.089,244.153],[-697.418,244.164],[-429.538,215.125],[-214.721,140.767],[69.092,197.191],[592.401,-19.569],[746.62,-244.165]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[933.906,1501.123],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 9",np:2,cix:2,bm:0,ix:9,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[88.714,99.713],[0,0],[-24.312,-117.679]],o:[[-25.065,-129.23],[0,0],[80.671,91.367],[0,0]],v:[[101.674,174.406],[-71.211,-174.406],[-101.674,-143.799],[57.738,174.406]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1627.738,641.476],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 10",np:2,cix:2,bm:0,ix:10,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[-80.115,91.131],[0,0],[24.965,-128.699]],o:[[24.209,-117.189],[0,0],[-88.113,99.468],[0,0]],v:[[-57.224,173.789],[101.164,-143.269],[70.643,-173.789],[-101.164,173.789]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[377.748,642.093],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 11",np:2,cix:2,bm:0,ix:11,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[9.204,7.889],[0,0],[-7.892,9.206],[0,0],[18.406,-17.111],[-5.731,-30.75],[3.313,-3.313],[0,0],[0,0],[0,0],[-20.284,-2.097],[-22.962,22.96],[15.613,29.695]],o:[[-7.893,9.208],[0,0],[-9.21,-7.891],[0,0],[-23.555,-1.302],[-24.802,23.061],[3.42,18.34],[0,0],[0,0],[0,0],[28.21,-28.209],[18.394,1.903],[26.542,-26.545],[0,0]],v:[[50.098,-0.672],[19.013,1.722],[-19.101,-30.946],[-21.496,-62.032],[13.849,-103.272],[-52.119,-79.663],[-83.667,-0.794],[-98.235,36.539],[-108.152,46.461],[-52.96,104.574],[-46.09,97.701],[10.475,63.906],[79.251,38.962],[92.539,-50.191]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1121.367,499.693],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 12",np:2,cix:2,bm:0,ix:12,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[7.468,-7.469],[7.465,7.469],[-7.467,7.465],[-7.466,-7.469]],o:[[-7.466,7.469],[-7.467,-7.469],[7.465,-7.469],[7.468,7.465]],v:[[-29.151,56.554],[-56.193,56.554],[-56.193,29.512],[-29.151,29.512]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[0,0],[0,0],[-12.309,-12.31],[0,0],[-12.308,12.309],[0,0]],o:[[0,0],[-12.309,12.31],[0,0],[12.309,12.309],[0,0],[0,0]],v:[[30.959,-88.345],[-76.766,19.381],[-76.766,64.146],[-64.876,76.036],[-20.114,76.036],[89.075,-33.152]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[899.883,716.865],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 13",np:4,cix:2,bm:0,ix:13,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[5.032,-10.067],[0,0],[11.334,41.901],[-18.247,-21.133],[0.142,10.382],[-2.967,-13.408],[-1.317,7.85],[-10.106,-8.815]],o:[[0,0],[-28.542,15.876],[-7.55,-27.919],[5.049,5.845],[-0.156,-11.307],[2.013,9.083],[1.993,-11.905],[16.219,14.142]],v:[[57.096,15.182],[23.278,48.999],[-42.464,10.039],[-17.174,-10.326],[-4.912,-19.112],[11.083,-18.985],[28.27,-19.367],[52.586,-21.487]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[19.891,19.891],[19.894,3.979],[17.682,15.028],[-10.905,-44.975],[-43.868,28.842],[0,0]],o:[[-19.891,-19.891],[-19.89,-3.977],[0,0],[13.371,55.144],[0,0],[6.579,-13.162]],v:[[58.851,-38.511],[-0.822,-65.476],[-71.104,-91.554],[-69.114,-19.284],[29.235,62.711],[73.44,18.51]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[863.548,486.603],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 14",np:4,cix:2,bm:0,ix:14,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[-13.785,13.785],[0,0],[12.312,12.31],[0,0],[12.308,-12.307],[0,0],[-12.311,-12.309],[0,0]],o:[[0,0],[13.786,-13.785],[0,0],[-12.308,-12.309],[0,0],[-12.311,12.308],[0,0],[12.311,12.31]],v:[[128.534,128.501],[128.534,128.501],[131.684,80.584],[-69.427,-131.653],[-114.187,-131.653],[-131.685,-114.156],[-131.685,-69.396],[80.618,131.652]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1046.143,662.187],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 15",np:2,cix:2,bm:0,ix:15,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[22.87,59.992],[-69.384,-44.227],[-51.572,-59.992],[26.219,27.888],[54.92,2.479],[69.384,18.818]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[518.659,426.998],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 16",np:2,cix:2,bm:0,ix:16,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-2.63,-58.411],[-14.034,-74.906],[-65.129,-39.57],[-53.724,-23.078],[-37.879,-34.035],[18.476,47.454],[2.629,58.411],[14.036,74.906],[65.129,39.571],[53.722,23.078],[37.879,34.036],[-18.473,-47.453]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[590.918,358.591],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 17",np:2,cix:2,bm:0,ix:17,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-13.757,-39.784],[3.403,-5.724],[35.357,-21.822],[44.375,-3.911],[12.596,12.096],[39.486,65.47],[18.239,76.171],[-44.375,-48.132],[11.277,-76.171],[20.829,-57.207]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[658.075,309.299],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 18",np:2,cix:2,bm:0,ix:18,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-6.342,76.056],[-54.049,-54.696],[4.496,-76.056],[11.639,-56.479],[-25.666,-42.869],[-13,-8.15],[21.536,-20.75],[28.14,-2.65],[-6.396,9.95],[7.683,48.547],[46.838,34.264],[54.049,54.023]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[759.765,272.599],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 19",np:2,cix:2,bm:0,ix:19,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[22.943,-53.782],[19.811,-73.587],[-41.547,-63.887],[-38.415,-44.081],[-19.388,-47.087],[-3.915,50.774],[-22.945,53.783],[-19.813,73.587],[41.547,63.888],[38.416,44.081],[19.388,47.089],[3.913,-50.773]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[887.641,239.73],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 20",np:2,cix:2,bm:0,ix:20,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[7.733,0],[2.096,-0.718],[1.701,-1.572],[0.984,-2.485],[0,-3.407],[-3.54,-3.209],[-5.767,-2.883],[-3.535,-2.227],[-2.887,-3.145],[-1.836,-4.325],[0,-5.899],[2.163,-5.24],[3.598,-3.605],[4.849,-1.833],[5.372,0],[6.549,3.011],[3.932,4.588],[0,0],[-4.261,-2.093],[-4.457,0],[-3.28,3.41],[0,6.164],[3.932,3.539],[6.025,3.015],[3.343,2.232],[2.556,3.082],[1.505,4.127],[0,5.769],[-2.294,5.178],[-3.733,3.411],[-4.72,1.642],[-4.851,0],[-5.576,-2.293],[-3.805,-4.454]],o:[[-5.11,-6.158],[-2.229,0],[-2.096,0.724],[-1.707,1.574],[-0.981,2.491],[0,5.9],[3.537,3.213],[3.407,1.704],[3.54,2.23],[2.88,3.144],[1.832,4.327],[0,6.816],[-2.163,5.244],[-3.61,3.605],[-4.849,1.836],[-7.735,0],[-6.556,-3.014],[0,0],[3.015,3.672],[4.256,2.099],[4.979,0],[3.272,-3.407],[0,-6.026],[-3.93,-3.537],[-3.803,-1.836],[-3.344,-2.225],[-2.553,-3.078],[-1.509,-4.128],[0,-7.203],[2.289,-5.175],[3.736,-3.407],[4.717,-1.636],[7.076,0],[5.569,2.295],[0,0]],v:[[25.949,-42.659],[6.684,-51.899],[0.196,-50.819],[-5.504,-47.377],[-9.535,-41.284],[-11.01,-32.438],[-5.7,-18.774],[8.256,-9.631],[18.673,-3.734],[28.311,4.325],[35.385,15.531],[38.138,30.864],[34.895,48.95],[26.247,62.221],[13.564,70.378],[-1.768,73.13],[-23.196,68.611],[-38.926,57.209],[-26.147,39.907],[-15.235,48.556],[-2.163,51.704],[10.224,46.591],[15.138,32.24],[9.24,17.889],[-5.7,8.061],[-16.415,1.965],[-25.263,-5.996],[-31.356,-16.807],[-33.616,-31.652],[-30.176,-50.228],[-21.134,-63.105],[-8.452,-70.674],[5.899,-73.13],[24.87,-69.689],[38.926,-59.566]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[978.889,230.589],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 21",np:2,cix:2,bm:0,ix:21,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[9.955,-45.257],[-7.997,72.515],[-30.934,69.019],[-12.981,-48.754],[-38.826,-52.693],[-35.805,-72.515],[38.827,-61.138],[35.804,-41.319]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1121.475,236.785],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 22",np:2,cix:2,bm:0,ix:22,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-49.198,57.981],[-10.687,-75.769],[49.198,-58.528],[43.431,-38.503],[5.272,-49.49],[-4.955,-13.975],[30.371,-3.804],[25.042,14.71],[-10.285,4.54],[-21.653,44.022],[18.397,55.553],[12.576,75.769]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1202.994,258.199],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 23",np:2,cix:2,bm:0,ix:23,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[6.622,-0.5],[7.737,3.866],[4.048,6.12],[1.028,7.765],[-1.818,9.054],[-4.745,9.496],[-6.181,6.947],[-6.888,3.814],[-7.301,0.384],[-6.92,-3.457],[-4.077,-5.334],[-0.943,-6.627],[0,0],[7.62,3.803],[4.367,-0.822],[4.162,-3.045],[3.837,-5.042],[3.16,-6.332],[1.726,-6.093],[-0.062,-5.157],[-2.025,-4.014],[-4.341,-2.167],[-4.043,0.616],[-3.519,2.054],[0,0]],o:[[-6.624,0.498],[-7.032,-3.512],[-4.051,-6.123],[-1.035,-7.765],[1.811,-9.06],[4.744,-9.498],[6.18,-6.949],[6.883,-3.813],[7.296,-0.381],[7.148,3.571],[4.076,5.332],[0,0],[-1.353,-9.319],[-4.223,-2.109],[-4.365,0.825],[-4.155,3.052],[-3.84,5.04],[-3.105,6.214],[-1.726,6.1],[0.058,5.16],[2.022,4.015],[4.103,2.048],[4.042,-0.619],[0,0],[-5.742,3.284]],v:[[-10.681,70.192],[-32.224,65.145],[-48.847,50.691],[-56.459,29.857],[-55.284,4.628],[-45.451,-23.204],[-29.065,-47.871],[-9.465,-64.015],[11.807,-70.31],[33.13,-65.704],[49.972,-52.346],[57.495,-34.413],[37.979,-25.702],[24.521,-45.388],[11.639,-47.319],[-1.152,-41.513],[-13.143,-29.371],[-23.641,-12.311],[-30.888,6.153],[-33.385,23.034],[-30.26,36.793],[-20.715,46.064],[-8.493,48.212],[2.847,44.206],[7.863,64.513]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1309.212,298.27],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 24",np:2,cix:2,bm:0,ix:24,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-20.66,69.643],[13.135,17.989],[-21.744,-4.828],[-55.539,46.828],[-75.113,34.019],[1.085,-82.451],[20.658,-69.647],[-10.227,-22.431],[24.651,0.386],[55.537,-46.829],[75.113,-34.022],[-1.083,82.451]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1401.918,349.723],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 25",np:2,cix:2,bm:0,ix:25,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0]],v:[[-26.722,11.584],[38.198,-56.898],[54.604,-41.343],[-10.315,27.136]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[2.614,-2.755],[3.748,-0.24],[2.759,2.614],[-0.083,3.708],[-2.797,2.948],[-3.796,0.383],[-2.852,-2.707],[0.128,-3.847]],o:[[-2.796,2.953],[-3.746,0.238],[-2.851,-2.708],[0.089,-3.713],[2.614,-2.758],[3.784,-0.379],[2.757,2.614],[-0.129,3.854]],v:[[-30.792,51.877],[-40.61,56.66],[-50.369,53.098],[-54.521,43.475],[-50.194,33.486],[-40.584,28.777],[-30.621,32.269],[-26.677,41.964]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[1503.325,427.57],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 26",np:4,cix:2,bm:0,ix:26,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[1.309,-5.228],[1.497,-5.234],[0,6.54],[-2.988,0],[-1.121,-1.311]],o:[[-0.187,1.495],[-5.045,-3.736],[0,-6.535],[0.746,0],[1.682,2.053]],v:[[165.703,-3.458],[162.153,9.622],[154.867,-6.82],[161.594,-16.721],[165.141,-15.037]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[3.737,-3.55],[6.352,0],[0,8.965],[-0.746,2.806],[-1.685,6.351],[-4.485,4.482],[-3.734,0.746],[0,-4.295],[-7.098,-7.098],[-2.988,-1.679]],o:[[-5.043,4.671],[-9.902,0],[0,-2.617],[1.682,-5.604],[2.611,-9.154],[2.986,-2.802],[-1.866,3.736],[0,10.276],[2.243,2.243],[-2.617,5.977]],v:[[147.768,40.074],[130.579,47.171],[114.889,32.228],[116.198,23.258],[121.056,6.072],[131.704,-14.29],[141.601,-19.521],[138.803,-5.326],[149.45,19.896],[157.298,25.686]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ind:2,ty:"sh",ix:3,ks:{a:0,k:{i:[[-0.373,1.307],[-14.385,0],[1.872,-8.223],[3.922,-2.241],[9.529,0],[0,0]],o:[[4.296,-14.946],[8.782,0],[-1.119,5.229],[-4.67,2.804],[0,0],[0.187,-1.123]],v:[[-175.042,5.325],[-146.833,-19.896],[-134.315,-5.883],[-142.162,4.95],[-163.274,9.063],[-175.976,9.063]],c:true},ix:2},nm:"パス 3",mn:"ADBE Vector Shape - Group",hd:false},{ind:3,ty:"sh",ix:4,ks:{a:0,k:{i:[[3.364,2.991],[2.798,-3.362],[0,0],[0,0],[7.468,12.701],[0.746,3.925],[-3.363,3.923],[3.359,2.989],[2.616,-3.173],[0,0],[0.08,-0.094],[0,0],[1.866,0],[0,2.992],[-1.125,2.615],[-7.474,17.375],[3.364,2.239],[0,0],[0,0],[3.366,2.804],[3.171,-3.73],[0,0],[0.229,-0.273],[0,0],[2.057,0.747],[-0.373,1.871],[3.365,4.294],[6.352,0],[2.804,-1.309],[4.482,0],[6.167,-3.547],[8.969,-10.46],[0,0],[0.173,-0.253],[0,0],[2.802,0],[0.933,1.122],[-0.747,2.43],[0,0],[0,0],[0,4.483],[4.484,0],[0,0],[0,0],[4.299,1.305],[1.306,-4.112],[0,0],[11.77,-14.01],[0,0],[0.188,-0.291],[0,0],[3.177,0],[-10.835,39.606],[19.801,0],[6.912,-7.285],[5.601,0],[2.611,-3.923],[2.801,-3.175],[0,0],[0.197,-0.324],[0,0],[14.76,0],[3.366,4.671],[-1.121,5.976],[0,0],[-7.288,4.108],[-2.803,9.154],[0.746,4.112],[12.705,0],[6.726,-3.551],[8.034,-9.527],[0,0],[0.232,-0.355],[0,0],[3.176,0],[0,0],[6.164,8.219],[8.966,0],[6.54,-7.47],[8.78,0],[5.419,-5.793],[6.907,0],[2.054,-2.992],[5.231,-6.165],[0,0],[-3.363,-2.807],[-1.867,0],[-1.681,1.868],[0,0],[0,0],[-6.166,0],[-0.936,3.548],[0,0],[-12.89,0],[3.175,-10.46],[0,0],[-4.485,-1.121],[-1.494,4.856],[-2.428,8.781],[-12.33,0],[3.179,-11.019],[0,0],[0,-1.684],[-7.843,0],[-7.1,7.848],[-8.228,9.788],[-5.954,-7.998],[-18.31,0],[-8.968,4.674],[-10.465,11.958],[0,0],[-0.21,0.334],[0,0],[0,0],[-4.107,-1.311],[-0.743,0],[-1.119,3.733],[0,0],[-13.263,0],[3.365,-12.326],[0,0],[0,-2.428],[-7.844,0],[-7.1,7.848],[-9.073,10.806],[-0.059,0.066],[0,0],[0,0],[-4.109,-5.605],[-6.722,0],[-4.482,5.045],[0,0],[-0.016,0.018],[0,0],[0,0],[0.167,-0.503],[-6.915,-9.524],[-10.648,0],[-7.847,7.474],[-3.363,8.217],[-5.601,0],[-1.868,2.241],[0,0],[0,0],[0,0],[6.723,-15.318],[0,-5.604],[-3.176,-3.55],[-5.606,0],[-12.327,14.756],[0,0],[-0.016,0.019],[0,0],[-4.67,-7.473],[0,-4.295],[2.803,-2.8],[6.54,0],[1.494,1.306],[2.617,-3.553],[-3.362,-2.618],[-9.34,0],[-8.782,5.231],[-12.7,14.388],[0,0]],o:[[-3.363,-2.8],[0,0],[0,0],[-0.748,-6.164],[-2.615,-4.672],[-0.189,-1.12],[2.99,-3.363],[-2.99,-2.617],[0,0],[-0.081,0.09],[0,0],[-5.417,6.353],[-2.241,0],[0,-2.052],[6.158,-14.384],[1.679,-3.922],[0,0],[0,0],[2.803,-3.362],[-3.362,-2.986],[0,0],[-0.258,0.232],[0,0],[-3.736,0],[2.057,-7.474],[3.174,-13.265],[-3.923,-4.858],[-2.988,0],[-1.121,-3.177],[-5.793,0],[-6.353,3.549],[0,0],[-0.209,0.235],[0,0],[-3.18,3.548],[-1.681,0],[-1.121,-1.495],[0,0],[0,0],[4.484,0],[0,-4.298],[0,0],[0,0],[1.308,-4.296],[-4.295,-1.125],[0,0],[-3.363,9.9],[0,0],[-0.226,0.272],[-8.471,10.064],[-3.179,3.547],[0.935,-3.739],[7.1,-22.792],[-9.529,0],[1.306,-4.669],[-2.615,0],[-2.806,4.301],[0,0],[-0.246,0.296],[0,0],[-19.058,21.856],[-9.151,0],[-2.802,-3.737],[0,0],[12.332,0],[7.469,-4.297],[1.122,-4.296],[-1.869,-13.824],[-7.474,0],[-7.096,3.55],[0,0],[-0.287,0.324],[-8.228,9.774],[-3.176,3.547],[0,0],[2.99,-10.276],[-5.793,-7.475],[-10.278,0],[-5.231,-7.656],[-8.783,0],[0.56,-2.616],[-2.247,0],[-2.055,2.987],[-11.773,14.013],[-2.799,3.366],[1.495,1.305],[2.242,0],[0,0],[0,0],[-1.309,5.234],[3.549,0],[0,0],[7.289,-25.221],[10.465,0],[0,0],[-1.306,5.045],[5.231,1.307],[0.561,-2.057],[3.179,-11.957],[11.77,0],[0,0],[-0.935,3.553],[0,7.472],[7.847,0],[0,0],[-2.938,11.341],[4.669,6.167],[11.024,0],[9.9,-5.04],[0,0],[0.259,-0.31],[0,0],[0,0],[-1.119,4.116],[0.751,0.186],[3.553,0],[0,0],[6.728,-23.726],[11.025,0],[0,0],[-0.746,2.804],[0,7.475],[7.848,0],[0,0],[0.06,-0.063],[0,0],[0,0],[-2.055,7.283],[3.925,5.23],[10.461,0],[0,0],[0.015,-0.017],[0,0],[0,0],[-0.002,0.139],[-3.176,10.648],[5.604,7.479],[10.465,0],[5.604,-5.229],[7.098,1.866],[4.111,0],[0,0],[0,0],[0,0],[-5.796,13.823],[-1.868,4.298],[0,5.229],[3.549,3.735],[11.019,0],[0,0],[0.016,-0.018],[0,0],[1.309,2.803],[8.034,13.641],[0,3.737],[-2.055,2.055],[-5.977,0],[-3.547,-2.803],[-2.803,3.546],[3.55,2.802],[7.474,0],[7.844,-5.048],[0,0],[2.799,-3.363]],v:[[379.977,-4.391],[368.585,-3.458],[350.276,18.217],[342.054,27.557],[331.221,1.963],[322.626,-14.106],[325.427,-21.203],[324.495,-32.599],[313.47,-31.853],[284.949,2.071],[284.703,2.336],[252.943,40.074],[243.604,46.984],[238.932,42.126],[240.616,35.029],[263.034,-14.666],[260.976,-24.378],[250.328,-30.919],[252.757,-33.721],[252.194,-44.932],[240.616,-43.999],[206.979,-4.209],[206.242,-3.458],[188.682,17.47],[177.099,16.161],[181.396,0.281],[177.658,-25.126],[161.594,-32.787],[153,-30.732],[144.969,-35.961],[127.219,-31.479],[105.173,-11.303],[79.579,19.151],[79.01,19.885],[60.903,41.382],[52.308,46.984],[48.384,45.118],[47.636,38.952],[63.701,-19.896],[82.011,-19.896],[90.045,-27.93],[82.011,-35.961],[68.188,-35.961],[72.668,-52.217],[67.063,-62.117],[57.167,-56.513],[51.747,-36.896],[32.876,-8.312],[11.021,17.654],[10.407,18.503],[-8.215,40.636],[-16.997,46.613],[-5.417,4.204],[-30.076,-35.961],[-55.667,-25.502],[-63.703,-34.467],[-71.359,-29.427],[-78.273,-19.896],[-108.164,15.6],[-108.82,16.535],[-112.269,20.645],[-158.789,47.173],[-178.032,40.074],[-180.459,25.129],[-163.274,25.129],[-134.125,18.963],[-118.808,-1.4],[-118.062,-14.106],[-146.084,-35.961],[-167.57,-31.292],[-189.802,-12.049],[-215.768,18.776],[-216.539,19.799],[-234.071,40.636],[-242.852,46.613],[-231.271,4.204],[-234.445,-25.126],[-257.424,-35.961],[-283.953,-24.756],[-305.438,-35.961],[-328.044,-26.248],[-336.073,-34.467],[-342.987,-30.544],[-351.579,-18.777],[-380.729,15.783],[-379.792,27.184],[-374.562,29.049],[-368.582,26.062],[-351.956,6.445],[-364.472,51.469],[-356.625,61.744],[-348.964,55.768],[-338.32,18.03],[-306.372,-20.27],[-297.216,-0.28],[-308.054,39.885],[-302.823,49.789],[-292.359,43.623],[-281.151,2.52],[-258.547,-20.27],[-246.776,-0.094],[-258.357,41.755],[-259.481,49.977],[-244.162,63.053],[-223.422,52.777],[-195.623,19.668],[-190.92,49.787],[-158.789,63.242],[-129.643,56.324],[-100.873,31.852],[-87.051,15.413],[-86.354,14.441],[-79.953,6.82],[-92.289,51.652],[-86.685,61.558],[-84.442,61.744],[-76.783,55.768],[-65.945,17.654],[-32.878,-20.27],[-20.922,-0.094],[-32.505,41.755],[-33.625,49.601],[-18.307,63.053],[2.432,52.777],[22.98,28.299],[23.163,28.116],[39.042,9.249],[32.13,34.658],[35.493,54.835],[52.308,63.053],[73.603,51.096],[91.298,30.036],[91.347,29.986],[92.689,28.381],[100.875,18.639],[100.689,19.338],[104.987,51.652],[130.579,63.242],[158.606,51.842],[172.245,31.481],[189.429,33.718],[199.517,29.611],[215.266,10.617],[240.237,-18.962],[245.658,-15.783],[225.856,28.489],[222.117,43.81],[226.975,57.263],[241.362,63.239],[271.435,42.877],[283.157,28.917],[283.205,28.865],[309.918,-2.897],[317.393,10.182],[326.177,31.852],[321.693,42.128],[309.547,47.173],[297.031,43.063],[285.821,44.559],[287.13,55.768],[309.547,63.242],[333.089,56.7],[362.043,29.049],[380.729,6.82]],c:true},ix:2},nm:"パス 4",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[1006.165,1378.575],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 27",np:6,cix:2,bm:0,ix:27,mn:"ADBE Vector Group",hd:false},{ty:"tm",s:{a:0,k:0,ix:1},e:{a:1,k:[{i:{x:[0.282],y:[1]},o:{x:[0.333],y:[0]},t:3,s:[0]},{t:29,s:[100]}],ix:2},o:{a:0,k:0,ix:3},m:1,ix:28,nm:"パスのトリミング 1",mn:"ADBE Vector Filter - Trim",hd:false},{ty:"st",c:{a:0,k:[0,0.607843137255,0.858823529412,1],ix:3},o:{a:0,k:100,ix:4},w:{a:0,k:6,ix:5},lc:1,lj:1,ml:4,bm:0,nm:"線 1",mn:"ADBE Vector Graphic - Stroke",hd:false}],ip:3,op:29,st:3,bm:0},{ddd:0,ind:7,ty:4,nm:"Life is Tech ! KANSAI LOGO_1Layerアウトライン 2",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[542,540,0],ix:2},a:{a:0,k:[1003,951.373,0],ix:1},s:{a:0,k:[50,50,100],ix:6}},ao:0,shapes:[{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-128.357,-159.105],[-55.638,-159.105],[-55.638,-28.796],[-54.175,-28.796],[40.018,-159.105],[119.085,-159.105],[23.912,-32.211],[128.357,159.105],[48.804,159.105],[-18.546,24.894],[-55.638,73.696],[-55.638,159.105],[-128.357,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[165.507,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 1",np:2,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[4.225,16.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[-3.908,16.922],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-0.485,-104.443],[-2.439,-104.443],[-68.815,159.106],[-142.024,159.106],[-42.948,-159.107],[42.95,-159.107],[142.024,159.106],[65.888,159.106]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[492.009,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 2",np:2,cix:2,bm:0,ix:2,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,25.673],[-25.672,0],[0,-25.675],[25.675,0]],o:[[0,-25.675],[25.675,0],[0,25.673],[-25.672,0]],v:[[-46.485,0],[-0.001,-46.484],[46.485,0],[-0.001,46.484]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[490.399,1148.471],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 3",np:2,cix:2,bm:0,ix:3,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[2.599,20.828],[0,18.545],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-2.607,-20.172],[0,-18.867],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[-1.63,-16.917],[-2.61,-20.816],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[1.625,17.571],[2.598,20.176],[0,0],[0,0],[0,0]],v:[[-114.205,-159.105],[-40.997,-159.105],[26.354,-0.489],[53.686,69.305],[55.638,69.305],[49.295,12.688],[45.389,-46.364],[45.389,-159.105],[114.206,-159.105],[114.206,159.105],[40.997,159.105],[-26.356,0.489],[-53.684,-68.814],[-55.639,-68.814],[-49.292,-12.199],[-45.39,46.365],[-45.39,159.105],[-114.205,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[833.644,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 4",np:2,cix:2,bm:0,ix:4,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[-14.154,-6.176],[-13.995,0],[-7.649,5.538],[0,9.442],[2.272,3.585],[4.225,2.767],[6.014,2.443],[7.809,2.929],[0,0],[8.295,5.206],[6.175,7.001],[3.739,9.27],[0,11.715],[-5.694,11.549],[-10.252,8.625],[-14.323,4.882],[-17.253,0],[-18.227,-7.151],[-14.641,-13.666],[0,0],[10.737,4.392],[13.665,0],[7.642,-5.04],[0,-9.104],[-9.762,-4.879],[-15.295,-5.529],[0,0],[-12.198,-13.666],[0,-22.449],[5.525,-11.872],[10.412,-8.943],[15.288,-5.368],[19.843,0],[20.986,7.642],[17.242,15.298]],o:[[12.032,9.76],[14.155,6.184],[16.594,0],[7.641,-5.529],[0,-4.882],[-2.278,-3.576],[-4.237,-2.761],[-6.027,-2.438],[0,0],[-8.786,-3.246],[-8.299,-5.202],[-6.185,-6.992],[-3.743,-9.274],[0,-13.008],[5.693,-11.549],[10.249,-8.618],[14.312,-4.878],[19.519,0],[18.218,7.162],[0,0],[-11.066,-8.13],[-10.737,-4.391],[-13.994,0],[-7.649,5.051],[0,9.761],[9.761,4.882],[0,0],[21.145,7.812],[12.205,13.663],[0,13.345],[-5.536,11.881],[-10.415,8.955],[-15.299,5.371],[-21.476,0],[-20.989,-7.641],[0,0]],v:[[-80.773,69.793],[-41.484,93.708],[0.733,102.979],[37.093,94.682],[48.558,72.232],[45.145,59.543],[35.386,50.026],[20.012,42.216],[-0.73,34.164],[-41.728,16.594],[-67.349,3.906],[-89.071,-14.397],[-103.958,-38.799],[-109.569,-70.281],[-101.03,-107.125],[-77.111,-137.386],[-40.264,-157.642],[7.078,-164.963],[63.693,-154.225],[112.984,-122.989],[76.381,-77.6],[43.682,-96.391],[7.078,-102.979],[-25.38,-95.416],[-36.847,-74.184],[-22.207,-52.223],[15.373,-36.603],[53.931,-20.012],[103.954,12.203],[122.259,66.375],[113.963,104.199],[90.045,135.435],[51.49,156.908],[-1.219,164.962],[-64.911,153.495],[-122.259,119.085]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1175.522,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 5",np:2,cix:2,bm:0,ix:5,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[4.228,16.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[-3.906,16.922],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-0.488,-104.445],[-2.439,-104.445],[-68.815,159.105],[-142.024,159.105],[-42.949,-159.105],[42.95,-159.105],[142.024,159.105],[65.887,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1516.912,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 6",np:2,cix:2,bm:0,ix:6,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,25.673],[-25.672,0],[0,-25.675],[25.675,0]],o:[[0,-25.675],[25.675,0],[0,25.673],[-25.672,0]],v:[[-46.485,0],[-0.002,-46.484],[46.485,0],[-0.002,46.484]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1515.392,1148.471],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 7",np:2,cix:2,bm:0,ix:7,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-110.302,98.587],[-36.114,98.587],[-36.114,-98.586],[-110.302,-98.586],[-110.302,-159.106],[110.302,-159.106],[110.302,-98.586],[36.114,-98.586],[36.114,98.587],[110.302,98.587],[110.302,159.106],[-110.302,159.106]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1858.547,1035.85],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 8",np:2,cix:2,bm:0,ix:8,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[57.355,-57.356],[186.164,0],[87.328,37.703],[5.771,-3.56],[102.949,-23.11],[60.15,-1.685],[-46.317,35.985],[-10.097,12.43],[-0.672,0.864],[8.233,7.593],[38.344,80.766],[0,0],[-0.485,-1.093],[-67.267,-65.546],[47.357,-36.789],[29.182,-10.938],[-2.303,-12.892],[-26.693,-0.131],[-1.922,0],[-106.192,23.833],[-27.971,13.037],[-98.336,0],[-139.781,139.782],[-36.491,82.695]],o:[[-33.792,71.16],[-131.636,131.64],[-95.799,0],[-6.645,-2.867],[-14.291,6.832],[-85.415,19.171],[38.167,-16.665],[64.733,-50.292],[0.776,-0.736],[6.874,-8.842],[-66.186,-61.06],[0,0],[0.483,1.096],[38.354,85.675],[-18.885,21.733],[-60.335,46.873],[-24.369,9.126],[2.339,13.062],[1.869,0.008],[64.532,-0.003],[98.108,-22.023],[90.045,37.446],[197.682,0],[65.833,-65.838],[0,0]],v:[[699.185,-244.165],[561.916,-50.053],[69.092,154.083],[-206.89,97.262],[-226.629,98.701],[-438.979,173.06],[-663.949,200.583],[-525.938,121.09],[-403.097,0.952],[-400.925,-1.451],[-403.333,-30.519],[-560.752,-244.165],[-608.149,-244.165],[-606.726,-240.87],[-447.639,-13.125],[-552.385,87.042],[-716.293,175.344],[-744.317,215.657],[-703.089,244.153],[-697.418,244.164],[-429.538,215.125],[-214.721,140.767],[69.092,197.191],[592.401,-19.569],[746.62,-244.165]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[933.906,1501.123],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 9",np:2,cix:2,bm:0,ix:9,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[88.714,99.713],[0,0],[-24.312,-117.679]],o:[[-25.065,-129.23],[0,0],[80.671,91.367],[0,0]],v:[[101.674,174.406],[-71.211,-174.406],[-101.674,-143.799],[57.738,174.406]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1627.738,641.476],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 10",np:2,cix:2,bm:0,ix:10,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[-80.115,91.131],[0,0],[24.965,-128.699]],o:[[24.209,-117.189],[0,0],[-88.113,99.468],[0,0]],v:[[-57.224,173.789],[101.164,-143.269],[70.643,-173.789],[-101.164,173.789]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[377.748,642.093],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 11",np:2,cix:2,bm:0,ix:11,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[9.204,7.889],[0,0],[-7.892,9.206],[0,0],[18.406,-17.111],[-5.731,-30.75],[3.313,-3.313],[0,0],[0,0],[0,0],[-20.284,-2.097],[-22.962,22.96],[15.613,29.695]],o:[[-7.893,9.208],[0,0],[-9.21,-7.891],[0,0],[-23.555,-1.302],[-24.802,23.061],[3.42,18.34],[0,0],[0,0],[0,0],[28.21,-28.209],[18.394,1.903],[26.542,-26.545],[0,0]],v:[[50.098,-0.672],[19.013,1.722],[-19.101,-30.946],[-21.496,-62.032],[13.849,-103.272],[-52.119,-79.663],[-83.667,-0.794],[-98.235,36.539],[-108.152,46.461],[-52.96,104.574],[-46.09,97.701],[10.475,63.906],[79.251,38.962],[92.539,-50.191]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1121.367,499.693],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 12",np:2,cix:2,bm:0,ix:12,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[7.468,-7.469],[7.465,7.469],[-7.467,7.465],[-7.466,-7.469]],o:[[-7.466,7.469],[-7.467,-7.469],[7.465,-7.469],[7.468,7.465]],v:[[-29.151,56.554],[-56.193,56.554],[-56.193,29.512],[-29.151,29.512]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[0,0],[0,0],[-12.309,-12.31],[0,0],[-12.308,12.309],[0,0]],o:[[0,0],[-12.309,12.31],[0,0],[12.309,12.309],[0,0],[0,0]],v:[[30.959,-88.345],[-76.766,19.381],[-76.766,64.146],[-64.876,76.036],[-20.114,76.036],[89.075,-33.152]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[899.883,716.865],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 13",np:4,cix:2,bm:0,ix:13,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[5.032,-10.067],[0,0],[11.334,41.901],[-18.247,-21.133],[0.142,10.382],[-2.967,-13.408],[-1.317,7.85],[-10.106,-8.815]],o:[[0,0],[-28.542,15.876],[-7.55,-27.919],[5.049,5.845],[-0.156,-11.307],[2.013,9.083],[1.993,-11.905],[16.219,14.142]],v:[[57.096,15.182],[23.278,48.999],[-42.464,10.039],[-17.174,-10.326],[-4.912,-19.112],[11.083,-18.985],[28.27,-19.367],[52.586,-21.487]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[19.891,19.891],[19.894,3.979],[17.682,15.028],[-10.905,-44.975],[-43.868,28.842],[0,0]],o:[[-19.891,-19.891],[-19.89,-3.977],[0,0],[13.371,55.144],[0,0],[6.579,-13.162]],v:[[58.851,-38.511],[-0.822,-65.476],[-71.104,-91.554],[-69.114,-19.284],[29.235,62.711],[73.44,18.51]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[863.548,486.603],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 14",np:4,cix:2,bm:0,ix:14,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[-13.785,13.785],[0,0],[12.312,12.31],[0,0],[12.308,-12.307],[0,0],[-12.311,-12.309],[0,0]],o:[[0,0],[13.786,-13.785],[0,0],[-12.308,-12.309],[0,0],[-12.311,12.308],[0,0],[12.311,12.31]],v:[[128.534,128.501],[128.534,128.501],[131.684,80.584],[-69.427,-131.653],[-114.187,-131.653],[-131.685,-114.156],[-131.685,-69.396],[80.618,131.652]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1046.143,662.187],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 15",np:2,cix:2,bm:0,ix:15,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[22.87,59.992],[-69.384,-44.227],[-51.572,-59.992],[26.219,27.888],[54.92,2.479],[69.384,18.818]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[518.659,426.998],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 16",np:2,cix:2,bm:0,ix:16,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-2.63,-58.411],[-14.034,-74.906],[-65.129,-39.57],[-53.724,-23.078],[-37.879,-34.035],[18.476,47.454],[2.629,58.411],[14.036,74.906],[65.129,39.571],[53.722,23.078],[37.879,34.036],[-18.473,-47.453]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[590.918,358.591],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 17",np:2,cix:2,bm:0,ix:17,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-13.757,-39.784],[3.403,-5.724],[35.357,-21.822],[44.375,-3.911],[12.596,12.096],[39.486,65.47],[18.239,76.171],[-44.375,-48.132],[11.277,-76.171],[20.829,-57.207]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[658.075,309.299],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 18",np:2,cix:2,bm:0,ix:18,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-6.342,76.056],[-54.049,-54.696],[4.496,-76.056],[11.639,-56.479],[-25.666,-42.869],[-13,-8.15],[21.536,-20.75],[28.14,-2.65],[-6.396,9.95],[7.683,48.547],[46.838,34.264],[54.049,54.023]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[759.765,272.599],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 19",np:2,cix:2,bm:0,ix:19,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[22.943,-53.782],[19.811,-73.587],[-41.547,-63.887],[-38.415,-44.081],[-19.388,-47.087],[-3.915,50.774],[-22.945,53.783],[-19.813,73.587],[41.547,63.888],[38.416,44.081],[19.388,47.089],[3.913,-50.773]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[887.641,239.73],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 20",np:2,cix:2,bm:0,ix:20,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[7.733,0],[2.096,-0.718],[1.701,-1.572],[0.984,-2.485],[0,-3.407],[-3.54,-3.209],[-5.767,-2.883],[-3.535,-2.227],[-2.887,-3.145],[-1.836,-4.325],[0,-5.899],[2.163,-5.24],[3.598,-3.605],[4.849,-1.833],[5.372,0],[6.549,3.011],[3.932,4.588],[0,0],[-4.261,-2.093],[-4.457,0],[-3.28,3.41],[0,6.164],[3.932,3.539],[6.025,3.015],[3.343,2.232],[2.556,3.082],[1.505,4.127],[0,5.769],[-2.294,5.178],[-3.733,3.411],[-4.72,1.642],[-4.851,0],[-5.576,-2.293],[-3.805,-4.454]],o:[[-5.11,-6.158],[-2.229,0],[-2.096,0.724],[-1.707,1.574],[-0.981,2.491],[0,5.9],[3.537,3.213],[3.407,1.704],[3.54,2.23],[2.88,3.144],[1.832,4.327],[0,6.816],[-2.163,5.244],[-3.61,3.605],[-4.849,1.836],[-7.735,0],[-6.556,-3.014],[0,0],[3.015,3.672],[4.256,2.099],[4.979,0],[3.272,-3.407],[0,-6.026],[-3.93,-3.537],[-3.803,-1.836],[-3.344,-2.225],[-2.553,-3.078],[-1.509,-4.128],[0,-7.203],[2.289,-5.175],[3.736,-3.407],[4.717,-1.636],[7.076,0],[5.569,2.295],[0,0]],v:[[25.949,-42.659],[6.684,-51.899],[0.196,-50.819],[-5.504,-47.377],[-9.535,-41.284],[-11.01,-32.438],[-5.7,-18.774],[8.256,-9.631],[18.673,-3.734],[28.311,4.325],[35.385,15.531],[38.138,30.864],[34.895,48.95],[26.247,62.221],[13.564,70.378],[-1.768,73.13],[-23.196,68.611],[-38.926,57.209],[-26.147,39.907],[-15.235,48.556],[-2.163,51.704],[10.224,46.591],[15.138,32.24],[9.24,17.889],[-5.7,8.061],[-16.415,1.965],[-25.263,-5.996],[-31.356,-16.807],[-33.616,-31.652],[-30.176,-50.228],[-21.134,-63.105],[-8.452,-70.674],[5.899,-73.13],[24.87,-69.689],[38.926,-59.566]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[978.889,230.589],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 21",np:2,cix:2,bm:0,ix:21,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[9.955,-45.257],[-7.997,72.515],[-30.934,69.019],[-12.981,-48.754],[-38.826,-52.693],[-35.805,-72.515],[38.827,-61.138],[35.804,-41.319]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1121.475,236.785],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 22",np:2,cix:2,bm:0,ix:22,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-49.198,57.981],[-10.687,-75.769],[49.198,-58.528],[43.431,-38.503],[5.272,-49.49],[-4.955,-13.975],[30.371,-3.804],[25.042,14.71],[-10.285,4.54],[-21.653,44.022],[18.397,55.553],[12.576,75.769]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1202.994,258.199],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 23",np:2,cix:2,bm:0,ix:23,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[6.622,-0.5],[7.737,3.866],[4.048,6.12],[1.028,7.765],[-1.818,9.054],[-4.745,9.496],[-6.181,6.947],[-6.888,3.814],[-7.301,0.384],[-6.92,-3.457],[-4.077,-5.334],[-0.943,-6.627],[0,0],[7.62,3.803],[4.367,-0.822],[4.162,-3.045],[3.837,-5.042],[3.16,-6.332],[1.726,-6.093],[-0.062,-5.157],[-2.025,-4.014],[-4.341,-2.167],[-4.043,0.616],[-3.519,2.054],[0,0]],o:[[-6.624,0.498],[-7.032,-3.512],[-4.051,-6.123],[-1.035,-7.765],[1.811,-9.06],[4.744,-9.498],[6.18,-6.949],[6.883,-3.813],[7.296,-0.381],[7.148,3.571],[4.076,5.332],[0,0],[-1.353,-9.319],[-4.223,-2.109],[-4.365,0.825],[-4.155,3.052],[-3.84,5.04],[-3.105,6.214],[-1.726,6.1],[0.058,5.16],[2.022,4.015],[4.103,2.048],[4.042,-0.619],[0,0],[-5.742,3.284]],v:[[-10.681,70.192],[-32.224,65.145],[-48.847,50.691],[-56.459,29.857],[-55.284,4.628],[-45.451,-23.204],[-29.065,-47.871],[-9.465,-64.015],[11.807,-70.31],[33.13,-65.704],[49.972,-52.346],[57.495,-34.413],[37.979,-25.702],[24.521,-45.388],[11.639,-47.319],[-1.152,-41.513],[-13.143,-29.371],[-23.641,-12.311],[-30.888,6.153],[-33.385,23.034],[-30.26,36.793],[-20.715,46.064],[-8.493,48.212],[2.847,44.206],[7.863,64.513]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1309.212,298.27],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 24",np:2,cix:2,bm:0,ix:24,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-20.66,69.643],[13.135,17.989],[-21.744,-4.828],[-55.539,46.828],[-75.113,34.019],[1.085,-82.451],[20.658,-69.647],[-10.227,-22.431],[24.651,0.386],[55.537,-46.829],[75.113,-34.022],[-1.083,82.451]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1401.918,349.723],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 25",np:2,cix:2,bm:0,ix:25,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0]],v:[[-26.722,11.584],[38.198,-56.898],[54.604,-41.343],[-10.315,27.136]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[2.614,-2.755],[3.748,-0.24],[2.759,2.614],[-0.083,3.708],[-2.797,2.948],[-3.796,0.383],[-2.852,-2.707],[0.128,-3.847]],o:[[-2.796,2.953],[-3.746,0.238],[-2.851,-2.708],[0.089,-3.713],[2.614,-2.758],[3.784,-0.379],[2.757,2.614],[-0.129,3.854]],v:[[-30.792,51.877],[-40.61,56.66],[-50.369,53.098],[-54.521,43.475],[-50.194,33.486],[-40.584,28.777],[-30.621,32.269],[-26.677,41.964]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[1503.325,427.57],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 26",np:4,cix:2,bm:0,ix:26,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[1.309,-5.228],[1.497,-5.234],[0,6.54],[-2.988,0],[-1.121,-1.311]],o:[[-0.187,1.495],[-5.045,-3.736],[0,-6.535],[0.746,0],[1.682,2.053]],v:[[165.703,-3.458],[162.153,9.622],[154.867,-6.82],[161.594,-16.721],[165.141,-15.037]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[3.737,-3.55],[6.352,0],[0,8.965],[-0.746,2.806],[-1.685,6.351],[-4.485,4.482],[-3.734,0.746],[0,-4.295],[-7.098,-7.098],[-2.988,-1.679]],o:[[-5.043,4.671],[-9.902,0],[0,-2.617],[1.682,-5.604],[2.611,-9.154],[2.986,-2.802],[-1.866,3.736],[0,10.276],[2.243,2.243],[-2.617,5.977]],v:[[147.768,40.074],[130.579,47.171],[114.889,32.228],[116.198,23.258],[121.056,6.072],[131.704,-14.29],[141.601,-19.521],[138.803,-5.326],[149.45,19.896],[157.298,25.686]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ind:2,ty:"sh",ix:3,ks:{a:0,k:{i:[[-0.373,1.307],[-14.385,0],[1.872,-8.223],[3.922,-2.241],[9.529,0],[0,0]],o:[[4.296,-14.946],[8.782,0],[-1.119,5.229],[-4.67,2.804],[0,0],[0.187,-1.123]],v:[[-175.042,5.325],[-146.833,-19.896],[-134.315,-5.883],[-142.162,4.95],[-163.274,9.063],[-175.976,9.063]],c:true},ix:2},nm:"パス 3",mn:"ADBE Vector Shape - Group",hd:false},{ind:3,ty:"sh",ix:4,ks:{a:0,k:{i:[[3.364,2.991],[2.798,-3.362],[0,0],[0,0],[7.468,12.701],[0.746,3.925],[-3.363,3.923],[3.359,2.989],[2.616,-3.173],[0,0],[0.08,-0.094],[0,0],[1.866,0],[0,2.992],[-1.125,2.615],[-7.474,17.375],[3.364,2.239],[0,0],[0,0],[3.366,2.804],[3.171,-3.73],[0,0],[0.229,-0.273],[0,0],[2.057,0.747],[-0.373,1.871],[3.365,4.294],[6.352,0],[2.804,-1.309],[4.482,0],[6.167,-3.547],[8.969,-10.46],[0,0],[0.173,-0.253],[0,0],[2.802,0],[0.933,1.122],[-0.747,2.43],[0,0],[0,0],[0,4.483],[4.484,0],[0,0],[0,0],[4.299,1.305],[1.306,-4.112],[0,0],[11.77,-14.01],[0,0],[0.188,-0.291],[0,0],[3.177,0],[-10.835,39.606],[19.801,0],[6.912,-7.285],[5.601,0],[2.611,-3.923],[2.801,-3.175],[0,0],[0.197,-0.324],[0,0],[14.76,0],[3.366,4.671],[-1.121,5.976],[0,0],[-7.288,4.108],[-2.803,9.154],[0.746,4.112],[12.705,0],[6.726,-3.551],[8.034,-9.527],[0,0],[0.232,-0.355],[0,0],[3.176,0],[0,0],[6.164,8.219],[8.966,0],[6.54,-7.47],[8.78,0],[5.419,-5.793],[6.907,0],[2.054,-2.992],[5.231,-6.165],[0,0],[-3.363,-2.807],[-1.867,0],[-1.681,1.868],[0,0],[0,0],[-6.166,0],[-0.936,3.548],[0,0],[-12.89,0],[3.175,-10.46],[0,0],[-4.485,-1.121],[-1.494,4.856],[-2.428,8.781],[-12.33,0],[3.179,-11.019],[0,0],[0,-1.684],[-7.843,0],[-7.1,7.848],[-8.228,9.788],[-5.954,-7.998],[-18.31,0],[-8.968,4.674],[-10.465,11.958],[0,0],[-0.21,0.334],[0,0],[0,0],[-4.107,-1.311],[-0.743,0],[-1.119,3.733],[0,0],[-13.263,0],[3.365,-12.326],[0,0],[0,-2.428],[-7.844,0],[-7.1,7.848],[-9.073,10.806],[-0.059,0.066],[0,0],[0,0],[-4.109,-5.605],[-6.722,0],[-4.482,5.045],[0,0],[-0.016,0.018],[0,0],[0,0],[0.167,-0.503],[-6.915,-9.524],[-10.648,0],[-7.847,7.474],[-3.363,8.217],[-5.601,0],[-1.868,2.241],[0,0],[0,0],[0,0],[6.723,-15.318],[0,-5.604],[-3.176,-3.55],[-5.606,0],[-12.327,14.756],[0,0],[-0.016,0.019],[0,0],[-4.67,-7.473],[0,-4.295],[2.803,-2.8],[6.54,0],[1.494,1.306],[2.617,-3.553],[-3.362,-2.618],[-9.34,0],[-8.782,5.231],[-12.7,14.388],[0,0]],o:[[-3.363,-2.8],[0,0],[0,0],[-0.748,-6.164],[-2.615,-4.672],[-0.189,-1.12],[2.99,-3.363],[-2.99,-2.617],[0,0],[-0.081,0.09],[0,0],[-5.417,6.353],[-2.241,0],[0,-2.052],[6.158,-14.384],[1.679,-3.922],[0,0],[0,0],[2.803,-3.362],[-3.362,-2.986],[0,0],[-0.258,0.232],[0,0],[-3.736,0],[2.057,-7.474],[3.174,-13.265],[-3.923,-4.858],[-2.988,0],[-1.121,-3.177],[-5.793,0],[-6.353,3.549],[0,0],[-0.209,0.235],[0,0],[-3.18,3.548],[-1.681,0],[-1.121,-1.495],[0,0],[0,0],[4.484,0],[0,-4.298],[0,0],[0,0],[1.308,-4.296],[-4.295,-1.125],[0,0],[-3.363,9.9],[0,0],[-0.226,0.272],[-8.471,10.064],[-3.179,3.547],[0.935,-3.739],[7.1,-22.792],[-9.529,0],[1.306,-4.669],[-2.615,0],[-2.806,4.301],[0,0],[-0.246,0.296],[0,0],[-19.058,21.856],[-9.151,0],[-2.802,-3.737],[0,0],[12.332,0],[7.469,-4.297],[1.122,-4.296],[-1.869,-13.824],[-7.474,0],[-7.096,3.55],[0,0],[-0.287,0.324],[-8.228,9.774],[-3.176,3.547],[0,0],[2.99,-10.276],[-5.793,-7.475],[-10.278,0],[-5.231,-7.656],[-8.783,0],[0.56,-2.616],[-2.247,0],[-2.055,2.987],[-11.773,14.013],[-2.799,3.366],[1.495,1.305],[2.242,0],[0,0],[0,0],[-1.309,5.234],[3.549,0],[0,0],[7.289,-25.221],[10.465,0],[0,0],[-1.306,5.045],[5.231,1.307],[0.561,-2.057],[3.179,-11.957],[11.77,0],[0,0],[-0.935,3.553],[0,7.472],[7.847,0],[0,0],[-2.938,11.341],[4.669,6.167],[11.024,0],[9.9,-5.04],[0,0],[0.259,-0.31],[0,0],[0,0],[-1.119,4.116],[0.751,0.186],[3.553,0],[0,0],[6.728,-23.726],[11.025,0],[0,0],[-0.746,2.804],[0,7.475],[7.848,0],[0,0],[0.06,-0.063],[0,0],[0,0],[-2.055,7.283],[3.925,5.23],[10.461,0],[0,0],[0.015,-0.017],[0,0],[0,0],[-0.002,0.139],[-3.176,10.648],[5.604,7.479],[10.465,0],[5.604,-5.229],[7.098,1.866],[4.111,0],[0,0],[0,0],[0,0],[-5.796,13.823],[-1.868,4.298],[0,5.229],[3.549,3.735],[11.019,0],[0,0],[0.016,-0.018],[0,0],[1.309,2.803],[8.034,13.641],[0,3.737],[-2.055,2.055],[-5.977,0],[-3.547,-2.803],[-2.803,3.546],[3.55,2.802],[7.474,0],[7.844,-5.048],[0,0],[2.799,-3.363]],v:[[379.977,-4.391],[368.585,-3.458],[350.276,18.217],[342.054,27.557],[331.221,1.963],[322.626,-14.106],[325.427,-21.203],[324.495,-32.599],[313.47,-31.853],[284.949,2.071],[284.703,2.336],[252.943,40.074],[243.604,46.984],[238.932,42.126],[240.616,35.029],[263.034,-14.666],[260.976,-24.378],[250.328,-30.919],[252.757,-33.721],[252.194,-44.932],[240.616,-43.999],[206.979,-4.209],[206.242,-3.458],[188.682,17.47],[177.099,16.161],[181.396,0.281],[177.658,-25.126],[161.594,-32.787],[153,-30.732],[144.969,-35.961],[127.219,-31.479],[105.173,-11.303],[79.579,19.151],[79.01,19.885],[60.903,41.382],[52.308,46.984],[48.384,45.118],[47.636,38.952],[63.701,-19.896],[82.011,-19.896],[90.045,-27.93],[82.011,-35.961],[68.188,-35.961],[72.668,-52.217],[67.063,-62.117],[57.167,-56.513],[51.747,-36.896],[32.876,-8.312],[11.021,17.654],[10.407,18.503],[-8.215,40.636],[-16.997,46.613],[-5.417,4.204],[-30.076,-35.961],[-55.667,-25.502],[-63.703,-34.467],[-71.359,-29.427],[-78.273,-19.896],[-108.164,15.6],[-108.82,16.535],[-112.269,20.645],[-158.789,47.173],[-178.032,40.074],[-180.459,25.129],[-163.274,25.129],[-134.125,18.963],[-118.808,-1.4],[-118.062,-14.106],[-146.084,-35.961],[-167.57,-31.292],[-189.802,-12.049],[-215.768,18.776],[-216.539,19.799],[-234.071,40.636],[-242.852,46.613],[-231.271,4.204],[-234.445,-25.126],[-257.424,-35.961],[-283.953,-24.756],[-305.438,-35.961],[-328.044,-26.248],[-336.073,-34.467],[-342.987,-30.544],[-351.579,-18.777],[-380.729,15.783],[-379.792,27.184],[-374.562,29.049],[-368.582,26.062],[-351.956,6.445],[-364.472,51.469],[-356.625,61.744],[-348.964,55.768],[-338.32,18.03],[-306.372,-20.27],[-297.216,-0.28],[-308.054,39.885],[-302.823,49.789],[-292.359,43.623],[-281.151,2.52],[-258.547,-20.27],[-246.776,-0.094],[-258.357,41.755],[-259.481,49.977],[-244.162,63.053],[-223.422,52.777],[-195.623,19.668],[-190.92,49.787],[-158.789,63.242],[-129.643,56.324],[-100.873,31.852],[-87.051,15.413],[-86.354,14.441],[-79.953,6.82],[-92.289,51.652],[-86.685,61.558],[-84.442,61.744],[-76.783,55.768],[-65.945,17.654],[-32.878,-20.27],[-20.922,-0.094],[-32.505,41.755],[-33.625,49.601],[-18.307,63.053],[2.432,52.777],[22.98,28.299],[23.163,28.116],[39.042,9.249],[32.13,34.658],[35.493,54.835],[52.308,63.053],[73.603,51.096],[91.298,30.036],[91.347,29.986],[92.689,28.381],[100.875,18.639],[100.689,19.338],[104.987,51.652],[130.579,63.242],[158.606,51.842],[172.245,31.481],[189.429,33.718],[199.517,29.611],[215.266,10.617],[240.237,-18.962],[245.658,-15.783],[225.856,28.489],[222.117,43.81],[226.975,57.263],[241.362,63.239],[271.435,42.877],[283.157,28.917],[283.205,28.865],[309.918,-2.897],[317.393,10.182],[326.177,31.852],[321.693,42.128],[309.547,47.173],[297.031,43.063],[285.821,44.559],[287.13,55.768],[309.547,63.242],[333.089,56.7],[362.043,29.049],[380.729,6.82]],c:true},ix:2},nm:"パス 4",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[1006.165,1378.575],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 27",np:6,cix:2,bm:0,ix:27,mn:"ADBE Vector Group",hd:false},{ty:"tm",s:{a:0,k:0,ix:1},e:{a:1,k:[{i:{x:[0.282],y:[1]},o:{x:[0.333],y:[0]},t:0,s:[0]},{t:26,s:[100]}],ix:2},o:{a:0,k:0,ix:3},m:1,ix:28,nm:"パスのトリミング 1",mn:"ADBE Vector Filter - Trim",hd:false},{ty:"st",c:{a:0,k:[0.980392156863,0.780392156863,0,1],ix:3},o:{a:0,k:100,ix:4},w:{a:0,k:6,ix:5},lc:1,lj:1,ml:4,bm:0,nm:"線 1",mn:"ADBE Vector Graphic - Stroke",hd:false}],ip:0,op:26,st:0,bm:0}],markers:[]};var notfound={v:"5.6.3",fr:30,ip:0,op:180,w:1080,h:1080,nm:"コンポ 1",ddd:0,assets:[{id:"comp_0",layers:[{ddd:0,ind:10,ty:4,nm:"Life is Tech ! KANSAI LOGO_1Layerアウトライン",td:1,sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[959,564,0],ix:2},a:{a:0,k:[1000,1000,0],ix:1},s:{a:0,k:[50,50,100],ix:6}},ao:0,hasMask:true,masksProperties:[{inv:false,mode:"f",pt:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[541.87,487.492],[449.616,383.274],[467.428,367.508],[545.219,455.387],[573.92,429.979],[588.384,446.318]],c:true},ix:1},o:{a:0,k:100,ix:3},x:{a:0,k:0,ix:4},nm:"マスク 1"}],ef:[{ty:22,nm:"線",np:13,mn:"ADBE Stroke",ix:1,en:1,ef:[{ty:10,nm:"パス",mn:"ADBE Stroke-0001",ix:1,v:{a:0,k:1,ix:1}},{ty:7,nm:"すべてのマスク",mn:"ADBE Stroke-0010",ix:2,v:{a:0,k:0,ix:2}},{ty:7,nm:"線(連続)",mn:"ADBE Stroke-0011",ix:3,v:{a:0,k:1,ix:3}},{ty:2,nm:"カラー",mn:"ADBE Stroke-0002",ix:4,v:{a:0,k:[0,0.611764729023,0.862745165825,1],ix:4}},{ty:0,nm:"ブラシのサイズ",mn:"ADBE Stroke-0003",ix:5,v:{a:0,k:9.1,ix:5}},{ty:0,nm:"ブラシの硬さ",mn:"ADBE Stroke-0004",ix:6,v:{a:0,k:0.75,ix:6}},{ty:0,nm:"不透明度",mn:"ADBE Stroke-0005",ix:7,v:{a:0,k:1,ix:7}},{ty:0,nm:"開始",mn:"ADBE Stroke-0008",ix:8,v:{a:1,k:[{i:{x:[0.149],y:[1]},o:{x:[1],y:[0]},t:8,s:[100]},{t:34,s:[0]}],ix:8}},{ty:0,nm:"終了",mn:"ADBE Stroke-0009",ix:9,v:{a:0,k:100,ix:9}},{ty:7,nm:"間隔",mn:"ADBE Stroke-0006",ix:10,v:{a:0,k:15,ix:10}},{ty:7,nm:"ペイントスタイル",mn:"ADBE Stroke-0007",ix:11,v:{a:0,k:2,ix:11}}]}],shapes:[{ty:"gr",it:[{ty:"rc",d:1,s:{a:0,k:[107.422,125.504],ix:2},p:{a:0,k:[0,0],ix:3},r:{a:0,k:0,ix:4},nm:"長方形パス 1",mn:"ADBE Vector Shape - Rect",hd:false},{ty:"fl",c:{a:0,k:[0,0.611999990426,0.862999949736,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[913.711,419.752],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"長方形 1",np:3,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[22.87,59.992],[-69.384,-44.227],[-51.572,-59.992],[26.219,27.888],[54.92,2.479],[69.384,18.818]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[0,0.611999990426,0.862999949736,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[518.659,426.998],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 16",np:2,cix:2,bm:0,ix:2,mn:"ADBE Vector Group",hd:false}],ip:8,op:158,st:8,bm:0},{ddd:0,ind:11,ty:0,nm:"プリコンポジション 3",tt:2,refId:"comp_1",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[960,540,0],ix:2},a:{a:0,k:[960,540,0],ix:1},s:{a:0,k:[100,100,100],ix:6}},ao:0,w:1920,h:1080,ip:0,op:82,st:0,bm:0},{ddd:0,ind:12,ty:4,nm:"シェイプレイヤー 13",td:1,sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{s:true,x:{a:1,k:[{i:{x:[0.769],y:[1]},o:{x:[0.004],y:[0.157]},t:0,s:[-1080]},{i:{x:[0.769],y:[1]},o:{x:[0.298],y:[0]},t:82,s:[731.243]},{i:{x:[0.995],y:[1.201]},o:{x:[0.298],y:[0]},t:86,s:[731.243]},{t:140,s:[-1080]}],ix:3},y:{a:1,k:[{i:{x:[0.81],y:[1]},o:{x:[0.004],y:[0.157]},t:0,s:[740]},{i:{x:[0.81],y:[1]},o:{x:[0.243],y:[0]},t:82,s:[-286.165]},{i:{x:[0.995],y:[1.201]},o:{x:[0.243],y:[0]},t:86,s:[-286.165]},{t:140,s:[740]}],ix:4}},a:{a:0,k:[0,0,0],ix:1},s:{a:0,k:[100,100,100],ix:6}},ao:0,shapes:[{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[228,0],[156,0],[236,0],[228,0],[192,0],[180,0],[155.534,0],[413.719,0],[223.962,0],[0,0],[0,0],[0,0],[0,0]],o:[[-228,0],[-156,0],[-236,0],[-228,0],[-192,0],[-156,0],[-252.466,0],[-158.427,0],[-896.816,0],[0,0],[0,0],[0,0],[0,0]],v:[[3241.921,362.28],[2753.921,530.28],[2329.921,370.28],[1853.921,518.28],[1433.922,370.28],[1033.921,530.28],[650.387,375.096],[64.203,539.678],[-386.041,410.687],[-2430.079,882.28],[177.921,1762.28],[3521.921,1674.28],[3921.921,682.28]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"st",c:{a:0,k:[0,0,0,1],ix:3},o:{a:0,k:100,ix:4},w:{a:0,k:6,ix:5},lc:1,lj:1,ml:4,bm:0,nm:"線 1",mn:"ADBE Vector Graphic - Stroke",hd:false},{ty:"fl",c:{a:0,k:[0,0,0,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[0,0],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"シェイプ 2",np:3,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false}],ip:0,op:150,st:0,bm:0},{ddd:0,ind:13,ty:0,nm:"プリコンポジション 3",tt:1,refId:"comp_1",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[960,540,0],ix:2},a:{a:0,k:[960,540,0],ix:1},s:{a:0,k:[100,100,100],ix:6}},ao:0,w:1920,h:1080,ip:82,op:150,st:0,bm:0},{ddd:0,ind:14,ty:4,nm:"シェイプレイヤー 10",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{s:true,x:{a:1,k:[{i:{x:[0.769],y:[1]},o:{x:[0.004],y:[0.157]},t:0,s:[-1080]},{i:{x:[0.769],y:[1]},o:{x:[0.298],y:[0]},t:82,s:[731.243]},{i:{x:[0.995],y:[1.201]},o:{x:[0.298],y:[0]},t:86,s:[731.243]},{t:140,s:[-1080]}],ix:3},y:{a:1,k:[{i:{x:[0.81],y:[1]},o:{x:[0.004],y:[0.157]},t:0,s:[740]},{i:{x:[0.81],y:[1]},o:{x:[0.243],y:[0]},t:82,s:[-286.165]},{i:{x:[0.995],y:[1.201]},o:{x:[0.243],y:[0]},t:86,s:[-286.165]},{t:140,s:[740]}],ix:4}},a:{a:0,k:[0,0,0],ix:1},s:{a:0,k:[100,100,100],ix:6}},ao:0,shapes:[{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[228,0],[156,0],[236,0],[228,0],[192,0],[180,0],[155.534,0],[413.719,0],[223.962,0],[0,0],[0,0],[0,0],[0,0]],o:[[-228,0],[-156,0],[-236,0],[-228,0],[-192,0],[-156,0],[-252.466,0],[-158.427,0],[-896.816,0],[0,0],[0,0],[0,0],[0,0]],v:[[3241.921,362.28],[2753.921,530.28],[2329.921,370.28],[1853.921,518.28],[1433.922,370.28],[1033.921,530.28],[650.387,375.096],[64.203,539.678],[-386.041,410.687],[-2430.079,882.28],[177.921,1762.28],[3521.921,1674.28],[3921.921,682.28]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"st",c:{a:0,k:[0,0,0,1],ix:3},o:{a:0,k:100,ix:4},w:{a:0,k:6,ix:5},lc:1,lj:1,ml:4,bm:0,nm:"線 1",mn:"ADBE Vector Graphic - Stroke",hd:false},{ty:"fl",c:{a:0,k:[0,0,0,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[0,0],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"シェイプ 2",np:3,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false}],ip:0,op:150,st:0,bm:0}]},{id:"comp_1",layers:[{ddd:0,ind:1,ty:4,nm:"シェイプレイヤー 3",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[960,540,0],ix:2},a:{a:0,k:[0,0,0],ix:1},s:{a:0,k:[100,100,100],ix:6}},ao:0,shapes:[{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:1,k:[{i:{x:0.833,y:0.833},o:{x:0.167,y:0.167},t:24,s:[{i:[[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[0,-203.5],[31,-168.5],[35,-170],[24.037,-180.493],[12.79,-191.258]],c:true}]},{i:{x:0.833,y:0.833},o:{x:0.167,y:0.167},t:26,s:[{i:[[-1.939,-5.914],[0,0],[0.715,1.231],[2.07,4.616],[6.592,6.309]],o:[[4.856,14.809],[0,0],[-2.54,-4.375],[-3.734,-8.326],[-4.496,-4.304]],v:[[0,-203.5],[31,-168.5],[35,-170],[24.037,-180.493],[18.29,-207.258]],c:true}]},{i:{x:0.833,y:0.833},o:{x:0.167,y:0.167},t:28,s:[{i:[[-1.939,-5.914],[0,0],[0.715,1.231],[4.824,1.523],[6.592,6.309]],o:[[4.856,14.809],[0,0],[-2.54,-4.375],[-28.537,-9.007],[-4.496,-4.304]],v:[[0,-203.5],[31,-168.5],[35,-170],[72.537,-188.493],[22.79,-251.758]],c:true}]},{i:{x:0.833,y:0.833},o:{x:0.167,y:0.167},t:30,s:[{i:[[-1.939,-5.914],[0,0],[0.715,1.231],[3.269,3.333],[13.563,5.679]],o:[[4.856,14.809],[0,0],[-2.54,-4.375],[-27.937,-37.206],[-5.386,-2.757]],v:[[0,-203.5],[31,-168.5],[35,-170],[141.737,-222.594],[34.19,-278.758]],c:true}]},{t:32,s:[{i:[[-1.939,-5.914],[0,0],[0.715,1.231],[2.232,4.54],[18.21,5.258]],o:[[4.856,14.809],[0,0],[-2.54,-4.375],[-27.537,-56.007],[-5.98,-1.727]],v:[[0,-203.5],[31,-168.5],[35,-170],[139.537,-221.993],[41.79,-296.758]],c:true}]}],ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[0.407843167174,0.717647058824,0.180392156863,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[0,0],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"シェイプ 1",np:3,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false}],ip:24,op:174,st:24,bm:0},{ddd:0,ind:2,ty:4,nm:"シェイプレイヤー 4",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[960,540,0],ix:2},a:{a:0,k:[0,0,0],ix:1},s:{a:0,k:[100,100,100],ix:6}},ao:0,shapes:[{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:1,k:[{i:{x:0.833,y:0.833},o:{x:0.167,y:0.167},t:24,s:[{i:[[7.197,-9.965],[20.5,-14.5],[-19.264,1.589],[-19.5,18],[12.031,9.542],[3.485,-11.948]],o:[[-12.114,16.774],[-15.781,11.162],[28.5,-23],[5.523,-14.327],[-9.751,-7.734],[-3.5,12]],v:[[-47,-208],[-78.5,-177],[-75.5,-181.5],[-20,-230],[-18,-242],[-29.5,-225.5]],c:true}]},{i:{x:0.833,y:0.833},o:{x:0.167,y:0.167},t:28,s:[{i:[[7.197,-9.965],[6.612,-16.935],[-19.264,1.589],[-19.5,18],[12.031,9.542],[7.869,-4.883]],o:[[-12.114,16.774],[-4.492,14.628],[28.5,-23],[5.523,-14.327],[-9.751,-7.734],[-7.801,4.922]],v:[[-80.5,-246],[-97.75,-199.5],[-75.5,-181.5],[-20,-230],[-29.5,-256.5],[-53.75,-250.75]],c:true}]},{t:32,s:[{i:[[7.197,-9.965],[-7.275,-19.37],[-19.264,1.589],[-19.5,18],[12.031,9.542],[12.253,2.182]],o:[[-12.114,16.774],[6.797,18.095],[28.5,-23],[5.523,-14.327],[-9.751,-7.734],[-12.102,-2.155]],v:[[-114,-284],[-117,-222],[-75.5,-181.5],[-20,-230],[-41,-271],[-78,-276]],c:true}]}],ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[0.90588241278,0.239215701234,0.211764720842,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[0,0],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"シェイプ 1",np:3,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false}],ip:24,op:174,st:24,bm:0},{ddd:0,ind:3,ty:4,nm:"シェイプレイヤー 2",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[960,540,0],ix:2},a:{a:0,k:[0,0,0],ix:1},s:{a:0,k:[100,100,100],ix:6}},ao:0,shapes:[{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:1,k:[{i:{x:0.833,y:0.833},o:{x:0.167,y:0.167},t:8,s:[{i:[[45.45,35.26],[5.456,-6.777],[-5.072,-6.645],[0,0],[0,0],[0,0]],o:[[-6.874,-5.333],[-5.243,6.511],[33.821,44.312],[0,0],[0,0],[0,0]],v:[[99.5,-103.5],[90.5,-76.5],[55,-69],[64.5,-68],[141,-38],[97,-100.5]],c:true}]},{i:{x:0.833,y:0.833},o:{x:0.167,y:0.167},t:16,s:[{i:[[45.45,35.26],[5.456,-6.777],[-5.072,-6.645],[0,0],[0,0],[0,0]],o:[[-6.874,-5.333],[-5.243,6.511],[33.821,44.312],[0,0],[0,0],[0,0]],v:[[90.5,-107],[61.5,-102.5],[55,-69],[64.5,-68],[92.5,-70.5],[97,-100.5]],c:true}]},{i:{x:0.833,y:0.833},o:{x:0.167,y:0.167},t:20,s:[{i:[[45.45,35.26],[5.456,-6.777],[-5.072,-6.645],[0,0],[0,0],[0,0]],o:[[-6.874,-5.333],[-5.243,6.511],[33.821,44.312],[0,0],[0,0],[0,0]],v:[[46.5,-154],[34.5,-124.5],[19,-116.5],[64.5,-68],[92.5,-70.5],[97,-100.5]],c:true}]},{i:{x:0.833,y:0.833},o:{x:0.167,y:0.167},t:22,s:[{i:[[45.45,35.26],[5.456,-6.777],[-5.072,-6.645],[0,0],[0,0],[0,0]],o:[[-6.874,-5.333],[-5.243,6.511],[33.821,44.312],[0,0],[0,0],[0,0]],v:[[11.5,-189.5],[-12,-175],[-10.5,-142.5],[64.5,-68],[92.5,-70.5],[97,-100.5]],c:true}]},{t:24,s:[{i:[[45.45,35.26],[5.456,-6.777],[-5.072,-6.645],[0,0],[0,0],[0,0]],o:[[-6.874,-5.333],[-5.243,6.511],[33.821,44.312],[0,0],[0,0],[0,0]],v:[[-22.5,-225],[-43.5,-209.5],[-53.5,-186.5],[64.5,-68],[92.5,-70.5],[97,-100.5]],c:true}]}],ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[0.984313785329,0.784313785329,0,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[0,0],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"シェイプ 1",np:3,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false}],ip:8,op:158,st:8,bm:0},{ddd:0,ind:4,ty:4,nm:"シェイプレイヤー 1",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[960,540,0],ix:2},a:{a:0,k:[0,0,0],ix:1},s:{a:0,k:[100,100,100],ix:6}},ao:0,shapes:[{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:1,k:[{i:{x:0.833,y:0.833},o:{x:0.167,y:0.167},t:8,s:[{i:[[0,0],[0,0],[0,0],[0,0],[6.872,6.872],[6,5.5]],o:[[0,0],[0,0],[0,0],[0,0],[-7.904,-7.904],[-6,-5.5]],v:[[-101,-122.5],[-122,-100.5],[-77,-58],[-27,-69.5],[-97.5,-55.5],[-96.5,-93.5]],c:true}]},{i:{x:0.833,y:0.833},o:{x:0.167,y:0.167},t:18,s:[{i:[[0,0],[0,0],[0,0],[0,0],[6.872,6.872],[6,5.5]],o:[[0,0],[0,0],[0,0],[0,0],[-7.904,-7.904],[-6,-5.5]],v:[[-101,-122.5],[-122,-100.5],[-77,-58],[-27,-69.5],[-56.5,-86],[-66,-116]],c:true}]},{i:{x:0.833,y:0.833},o:{x:0.167,y:0.167},t:22,s:[{i:[[0,0],[0,0],[0,0],[0,0],[6.872,6.872],[6,5.5]],o:[[0,0],[0,0],[0,0],[0,0],[-7.904,-7.904],[-6,-5.5]],v:[[-91.5,-143.5],[-122,-100.5],[-77,-58],[5.5,-111.5],[-26,-124],[-54,-134.5]],c:true}]},{t:24,s:[{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[6,5.5]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[-6,-5.5]],v:[[-34.5,-169],[-122,-100.5],[-77,-58],[3,-127],[-9.5,-140.5],[-27.5,-157.5]],c:true}]}],ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[0,0.611764705882,0.862745157878,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[0,0],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"シェイプ 1",np:3,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false}],ip:8,op:158,st:8,bm:0}]},{id:"comp_2",layers:[{ddd:0,ind:1,ty:0,nm:"Your_Text",refId:"comp_3",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[960,540,0],ix:2},a:{a:0,k:[960,540,0],ix:1},s:{a:0,k:[100,100,100],ix:6}},ao:0,w:1920,h:1080,ip:0,op:150,st:0,bm:0}]},{id:"comp_3",layers:[{ddd:0,ind:1,ty:4,nm:"Life is Tech ! KANSAI LOGO_1Layerアウトライン",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[960,540,0],ix:2},a:{a:0,k:[1003,951.373,0],ix:1},s:{a:0,k:[50.001,50.001,100],ix:6}},ao:0,shapes:[{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-128.357,-159.105],[-55.638,-159.105],[-55.638,-28.796],[-54.175,-28.796],[40.018,-159.105],[119.085,-159.105],[23.912,-32.211],[128.357,159.105],[48.804,159.105],[-18.546,24.894],[-55.638,73.696],[-55.638,159.105],[-128.357,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[165.507,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 1",np:2,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[4.225,16.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[-3.908,16.922],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-0.485,-104.443],[-2.439,-104.443],[-68.815,159.106],[-142.024,159.106],[-42.948,-159.107],[42.95,-159.107],[142.024,159.106],[65.888,159.106]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[492.009,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 2",np:2,cix:2,bm:0,ix:2,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,25.673],[-25.672,0],[0,-25.675],[25.675,0]],o:[[0,-25.675],[25.675,0],[0,25.673],[-25.672,0]],v:[[-46.485,0],[-0.001,-46.484],[46.485,0],[-0.001,46.484]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[490.399,1148.471],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 3",np:2,cix:2,bm:0,ix:3,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[2.599,20.828],[0,18.545],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-2.607,-20.172],[0,-18.867],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[-1.63,-16.917],[-2.61,-20.816],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[1.625,17.571],[2.598,20.176],[0,0],[0,0],[0,0]],v:[[-114.205,-159.105],[-40.997,-159.105],[26.354,-0.489],[53.686,69.305],[55.638,69.305],[49.295,12.688],[45.389,-46.364],[45.389,-159.105],[114.206,-159.105],[114.206,159.105],[40.997,159.105],[-26.356,0.489],[-53.684,-68.814],[-55.639,-68.814],[-49.292,-12.199],[-45.39,46.365],[-45.39,159.105],[-114.205,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[833.644,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 4",np:2,cix:2,bm:0,ix:4,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[-14.154,-6.176],[-13.995,0],[-7.649,5.538],[0,9.442],[2.272,3.585],[4.225,2.767],[6.014,2.443],[7.809,2.929],[0,0],[8.295,5.206],[6.175,7.001],[3.739,9.27],[0,11.715],[-5.694,11.549],[-10.252,8.625],[-14.323,4.882],[-17.253,0],[-18.227,-7.151],[-14.641,-13.666],[0,0],[10.737,4.392],[13.665,0],[7.642,-5.04],[0,-9.104],[-9.762,-4.879],[-15.295,-5.529],[0,0],[-12.198,-13.666],[0,-22.449],[5.525,-11.872],[10.412,-8.943],[15.288,-5.368],[19.843,0],[20.986,7.642],[17.242,15.298]],o:[[12.032,9.76],[14.155,6.184],[16.594,0],[7.641,-5.529],[0,-4.882],[-2.278,-3.576],[-4.237,-2.761],[-6.027,-2.438],[0,0],[-8.786,-3.246],[-8.299,-5.202],[-6.185,-6.992],[-3.743,-9.274],[0,-13.008],[5.693,-11.549],[10.249,-8.618],[14.312,-4.878],[19.519,0],[18.218,7.162],[0,0],[-11.066,-8.13],[-10.737,-4.391],[-13.994,0],[-7.649,5.051],[0,9.761],[9.761,4.882],[0,0],[21.145,7.812],[12.205,13.663],[0,13.345],[-5.536,11.881],[-10.415,8.955],[-15.299,5.371],[-21.476,0],[-20.989,-7.641],[0,0]],v:[[-80.773,69.793],[-41.484,93.708],[0.733,102.979],[37.093,94.682],[48.558,72.232],[45.145,59.543],[35.386,50.026],[20.012,42.216],[-0.73,34.164],[-41.728,16.594],[-67.349,3.906],[-89.071,-14.397],[-103.958,-38.799],[-109.569,-70.281],[-101.03,-107.125],[-77.111,-137.386],[-40.264,-157.642],[7.078,-164.963],[63.693,-154.225],[112.984,-122.989],[76.381,-77.6],[43.682,-96.391],[7.078,-102.979],[-25.38,-95.416],[-36.847,-74.184],[-22.207,-52.223],[15.373,-36.603],[53.931,-20.012],[103.954,12.203],[122.259,66.375],[113.963,104.199],[90.045,135.435],[51.49,156.908],[-1.219,164.962],[-64.911,153.495],[-122.259,119.085]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[1175.522,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 5",np:2,cix:2,bm:0,ix:5,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[4.228,16.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[-3.906,16.922],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-0.488,-104.445],[-2.439,-104.445],[-68.815,159.105],[-142.024,159.105],[-42.949,-159.105],[42.95,-159.105],[142.024,159.105],[65.887,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[1516.912,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 6",np:2,cix:2,bm:0,ix:6,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,25.673],[-25.672,0],[0,-25.675],[25.675,0]],o:[[0,-25.675],[25.675,0],[0,25.673],[-25.672,0]],v:[[-46.485,0],[-0.002,-46.484],[46.485,0],[-0.002,46.484]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[1515.392,1148.471],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 7",np:2,cix:2,bm:0,ix:7,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-110.302,98.587],[-36.114,98.587],[-36.114,-98.586],[-110.302,-98.586],[-110.302,-159.106],[110.302,-159.106],[110.302,-98.586],[36.114,-98.586],[36.114,98.587],[110.302,98.587],[110.302,159.106],[-110.302,159.106]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[1858.547,1035.85],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 8",np:2,cix:2,bm:0,ix:8,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[57.355,-57.356],[186.164,0],[87.328,37.703],[5.771,-3.56],[102.949,-23.11],[60.15,-1.685],[-46.317,35.985],[-10.097,12.43],[-0.672,0.864],[8.233,7.593],[38.344,80.766],[0,0],[-0.485,-1.093],[-67.267,-65.546],[47.357,-36.789],[29.182,-10.938],[-2.303,-12.892],[-26.693,-0.131],[-1.922,0],[-106.192,23.833],[-27.971,13.037],[-98.336,0],[-139.781,139.782],[-36.491,82.695]],o:[[-33.792,71.16],[-131.636,131.64],[-95.799,0],[-6.645,-2.867],[-14.291,6.832],[-85.415,19.171],[38.167,-16.665],[64.733,-50.292],[0.776,-0.736],[6.874,-8.842],[-66.186,-61.06],[0,0],[0.483,1.096],[38.354,85.675],[-18.885,21.733],[-60.335,46.873],[-24.369,9.126],[2.339,13.062],[1.869,0.008],[64.532,-0.003],[98.108,-22.023],[90.045,37.446],[197.682,0],[65.833,-65.838],[0,0]],v:[[699.185,-244.165],[561.916,-50.053],[69.092,154.083],[-206.89,97.262],[-226.629,98.701],[-438.979,173.06],[-663.949,200.583],[-525.938,121.09],[-403.097,0.952],[-400.925,-1.451],[-403.333,-30.519],[-560.752,-244.165],[-608.149,-244.165],[-606.726,-240.87],[-447.639,-13.125],[-552.385,87.042],[-716.293,175.344],[-744.317,215.657],[-703.089,244.153],[-697.418,244.164],[-429.538,215.125],[-214.721,140.767],[69.092,197.191],[592.401,-19.569],[746.62,-244.165]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[933.906,1501.123],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 9",np:2,cix:2,bm:0,ix:9,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[88.714,99.713],[0,0],[-24.312,-117.679]],o:[[-25.065,-129.23],[0,0],[80.671,91.367],[0,0]],v:[[101.674,174.406],[-71.211,-174.406],[-101.674,-143.799],[57.738,174.406]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[1627.738,641.476],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 10",np:2,cix:2,bm:0,ix:10,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[-80.115,91.131],[0,0],[24.965,-128.699]],o:[[24.209,-117.189],[0,0],[-88.113,99.468],[0,0]],v:[[-57.224,173.789],[101.164,-143.269],[70.643,-173.789],[-101.164,173.789]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[377.748,642.093],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 11",np:2,cix:2,bm:0,ix:11,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[9.204,7.889],[0,0],[-7.892,9.206],[0,0],[18.406,-17.111],[-5.731,-30.75],[3.313,-3.313],[0,0],[0,0],[0,0],[-20.284,-2.097],[-22.962,22.96],[15.613,29.695]],o:[[-7.893,9.208],[0,0],[-9.21,-7.891],[0,0],[-23.555,-1.302],[-24.802,23.061],[3.42,18.34],[0,0],[0,0],[0,0],[28.21,-28.209],[18.394,1.903],[26.542,-26.545],[0,0]],v:[[50.098,-0.672],[19.013,1.722],[-19.101,-30.946],[-21.496,-62.032],[13.849,-103.272],[-52.119,-79.663],[-83.667,-0.794],[-98.235,36.539],[-108.152,46.461],[-52.96,104.574],[-46.09,97.701],[10.475,63.906],[79.251,38.962],[92.539,-50.191]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[1121.367,499.693],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 12",np:2,cix:2,bm:0,ix:12,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[7.468,-7.469],[7.465,7.469],[-7.467,7.465],[-7.466,-7.469]],o:[[-7.466,7.469],[-7.467,-7.469],[7.465,-7.469],[7.468,7.465]],v:[[-29.151,56.554],[-56.193,56.554],[-56.193,29.512],[-29.151,29.512]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[0,0],[0,0],[-12.309,-12.31],[0,0],[-12.308,12.309],[0,0]],o:[[0,0],[-12.309,12.31],[0,0],[12.309,12.309],[0,0],[0,0]],v:[[30.959,-88.345],[-76.766,19.381],[-76.766,64.146],[-64.876,76.036],[-20.114,76.036],[89.075,-33.152]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[899.883,716.865],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 13",np:4,cix:2,bm:0,ix:13,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[5.032,-10.067],[0,0],[11.334,41.901],[-18.247,-21.133],[0.142,10.382],[-2.967,-13.408],[-1.317,7.85],[-10.106,-8.815]],o:[[0,0],[-28.542,15.876],[-7.55,-27.919],[5.049,5.845],[-0.156,-11.307],[2.013,9.083],[1.993,-11.905],[16.219,14.142]],v:[[57.096,15.182],[23.278,48.999],[-42.464,10.039],[-17.174,-10.326],[-4.912,-19.112],[11.083,-18.985],[28.27,-19.367],[52.586,-21.487]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[19.891,19.891],[19.894,3.979],[17.682,15.028],[-10.905,-44.975],[-43.868,28.842],[0,0]],o:[[-19.891,-19.891],[-19.89,-3.977],[0,0],[13.371,55.144],[0,0],[6.579,-13.162]],v:[[58.851,-38.511],[-0.822,-65.476],[-71.104,-91.554],[-69.114,-19.284],[29.235,62.711],[73.44,18.51]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[863.548,486.603],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 14",np:4,cix:2,bm:0,ix:14,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[-13.785,13.785],[0,0],[12.312,12.31],[0,0],[12.308,-12.307],[0,0],[-12.311,-12.309],[0,0]],o:[[0,0],[13.786,-13.785],[0,0],[-12.308,-12.309],[0,0],[-12.311,12.308],[0,0],[12.311,12.31]],v:[[128.534,128.501],[128.534,128.501],[131.684,80.584],[-69.427,-131.653],[-114.187,-131.653],[-131.685,-114.156],[-131.685,-69.396],[80.618,131.652]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[1046.143,662.187],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 15",np:2,cix:2,bm:0,ix:15,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[22.87,59.992],[-69.384,-44.227],[-51.572,-59.992],[26.219,27.888],[54.92,2.479],[69.384,18.818]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[518.659,426.998],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 16",np:2,cix:2,bm:0,ix:16,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-2.63,-58.411],[-14.034,-74.906],[-65.129,-39.57],[-53.724,-23.078],[-37.879,-34.035],[18.476,47.454],[2.629,58.411],[14.036,74.906],[65.129,39.571],[53.722,23.078],[37.879,34.036],[-18.473,-47.453]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[590.918,358.591],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 17",np:2,cix:2,bm:0,ix:17,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-13.757,-39.784],[3.403,-5.724],[35.357,-21.822],[44.375,-3.911],[12.596,12.096],[39.486,65.47],[18.239,76.171],[-44.375,-48.132],[11.277,-76.171],[20.829,-57.207]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[658.075,309.299],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 18",np:2,cix:2,bm:0,ix:18,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-6.342,76.056],[-54.049,-54.696],[4.496,-76.056],[11.639,-56.479],[-25.666,-42.869],[-13,-8.15],[21.536,-20.75],[28.14,-2.65],[-6.396,9.95],[7.683,48.547],[46.838,34.264],[54.049,54.023]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[759.765,272.599],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 19",np:2,cix:2,bm:0,ix:19,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[22.943,-53.782],[19.811,-73.587],[-41.547,-63.887],[-38.415,-44.081],[-19.388,-47.087],[-3.915,50.774],[-22.945,53.783],[-19.813,73.587],[41.547,63.888],[38.416,44.081],[19.388,47.089],[3.913,-50.773]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[887.641,239.73],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 20",np:2,cix:2,bm:0,ix:20,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[7.733,0],[2.096,-0.718],[1.701,-1.572],[0.984,-2.485],[0,-3.407],[-3.54,-3.209],[-5.767,-2.883],[-3.535,-2.227],[-2.887,-3.145],[-1.836,-4.325],[0,-5.899],[2.163,-5.24],[3.598,-3.605],[4.849,-1.833],[5.372,0],[6.549,3.011],[3.932,4.588],[0,0],[-4.261,-2.093],[-4.457,0],[-3.28,3.41],[0,6.164],[3.932,3.539],[6.025,3.015],[3.343,2.232],[2.556,3.082],[1.505,4.127],[0,5.769],[-2.294,5.178],[-3.733,3.411],[-4.72,1.642],[-4.851,0],[-5.576,-2.293],[-3.805,-4.454]],o:[[-5.11,-6.158],[-2.229,0],[-2.096,0.724],[-1.707,1.574],[-0.981,2.491],[0,5.9],[3.537,3.213],[3.407,1.704],[3.54,2.23],[2.88,3.144],[1.832,4.327],[0,6.816],[-2.163,5.244],[-3.61,3.605],[-4.849,1.836],[-7.735,0],[-6.556,-3.014],[0,0],[3.015,3.672],[4.256,2.099],[4.979,0],[3.272,-3.407],[0,-6.026],[-3.93,-3.537],[-3.803,-1.836],[-3.344,-2.225],[-2.553,-3.078],[-1.509,-4.128],[0,-7.203],[2.289,-5.175],[3.736,-3.407],[4.717,-1.636],[7.076,0],[5.569,2.295],[0,0]],v:[[25.949,-42.659],[6.684,-51.899],[0.196,-50.819],[-5.504,-47.377],[-9.535,-41.284],[-11.01,-32.438],[-5.7,-18.774],[8.256,-9.631],[18.673,-3.734],[28.311,4.325],[35.385,15.531],[38.138,30.864],[34.895,48.95],[26.247,62.221],[13.564,70.378],[-1.768,73.13],[-23.196,68.611],[-38.926,57.209],[-26.147,39.907],[-15.235,48.556],[-2.163,51.704],[10.224,46.591],[15.138,32.24],[9.24,17.889],[-5.7,8.061],[-16.415,1.965],[-25.263,-5.996],[-31.356,-16.807],[-33.616,-31.652],[-30.176,-50.228],[-21.134,-63.105],[-8.452,-70.674],[5.899,-73.13],[24.87,-69.689],[38.926,-59.566]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[978.889,230.589],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 21",np:2,cix:2,bm:0,ix:21,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[9.955,-45.257],[-7.997,72.515],[-30.934,69.019],[-12.981,-48.754],[-38.826,-52.693],[-35.805,-72.515],[38.827,-61.138],[35.804,-41.319]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[1121.475,236.785],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 22",np:2,cix:2,bm:0,ix:22,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-49.198,57.981],[-10.687,-75.769],[49.198,-58.528],[43.431,-38.503],[5.272,-49.49],[-4.955,-13.975],[30.371,-3.804],[25.042,14.71],[-10.285,4.54],[-21.653,44.022],[18.397,55.553],[12.576,75.769]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[1202.994,258.199],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 23",np:2,cix:2,bm:0,ix:23,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[6.622,-0.5],[7.737,3.866],[4.048,6.12],[1.028,7.765],[-1.818,9.054],[-4.745,9.496],[-6.181,6.947],[-6.888,3.814],[-7.301,0.384],[-6.92,-3.457],[-4.077,-5.334],[-0.943,-6.627],[0,0],[7.62,3.803],[4.367,-0.822],[4.162,-3.045],[3.837,-5.042],[3.16,-6.332],[1.726,-6.093],[-0.062,-5.157],[-2.025,-4.014],[-4.341,-2.167],[-4.043,0.616],[-3.519,2.054],[0,0]],o:[[-6.624,0.498],[-7.032,-3.512],[-4.051,-6.123],[-1.035,-7.765],[1.811,-9.06],[4.744,-9.498],[6.18,-6.949],[6.883,-3.813],[7.296,-0.381],[7.148,3.571],[4.076,5.332],[0,0],[-1.353,-9.319],[-4.223,-2.109],[-4.365,0.825],[-4.155,3.052],[-3.84,5.04],[-3.105,6.214],[-1.726,6.1],[0.058,5.16],[2.022,4.015],[4.103,2.048],[4.042,-0.619],[0,0],[-5.742,3.284]],v:[[-10.681,70.192],[-32.224,65.145],[-48.847,50.691],[-56.459,29.857],[-55.284,4.628],[-45.451,-23.204],[-29.065,-47.871],[-9.465,-64.015],[11.807,-70.31],[33.13,-65.704],[49.972,-52.346],[57.495,-34.413],[37.979,-25.702],[24.521,-45.388],[11.639,-47.319],[-1.152,-41.513],[-13.143,-29.371],[-23.641,-12.311],[-30.888,6.153],[-33.385,23.034],[-30.26,36.793],[-20.715,46.064],[-8.493,48.212],[2.847,44.206],[7.863,64.513]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[1309.212,298.27],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 24",np:2,cix:2,bm:0,ix:24,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-20.66,69.643],[13.135,17.989],[-21.744,-4.828],[-55.539,46.828],[-75.113,34.019],[1.085,-82.451],[20.658,-69.647],[-10.227,-22.431],[24.651,0.386],[55.537,-46.829],[75.113,-34.022],[-1.083,82.451]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[1401.918,349.723],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 25",np:2,cix:2,bm:0,ix:25,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0]],v:[[-26.722,11.584],[38.198,-56.898],[54.604,-41.343],[-10.315,27.136]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[2.614,-2.755],[3.748,-0.24],[2.759,2.614],[-0.083,3.708],[-2.797,2.948],[-3.796,0.383],[-2.852,-2.707],[0.128,-3.847]],o:[[-2.796,2.953],[-3.746,0.238],[-2.851,-2.708],[0.089,-3.713],[2.614,-2.758],[3.784,-0.379],[2.757,2.614],[-0.129,3.854]],v:[[-30.792,51.877],[-40.61,56.66],[-50.369,53.098],[-54.521,43.475],[-50.194,33.486],[-40.584,28.777],[-30.621,32.269],[-26.677,41.964]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[1503.325,427.57],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 26",np:4,cix:2,bm:0,ix:26,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[1.309,-5.228],[1.497,-5.234],[0,6.54],[-2.988,0],[-1.121,-1.311]],o:[[-0.187,1.495],[-5.045,-3.736],[0,-6.535],[0.746,0],[1.682,2.053]],v:[[165.703,-3.458],[162.153,9.622],[154.867,-6.82],[161.594,-16.721],[165.141,-15.037]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[3.737,-3.55],[6.352,0],[0,8.965],[-0.746,2.806],[-1.685,6.351],[-4.485,4.482],[-3.734,0.746],[0,-4.295],[-7.098,-7.098],[-2.988,-1.679]],o:[[-5.043,4.671],[-9.902,0],[0,-2.617],[1.682,-5.604],[2.611,-9.154],[2.986,-2.802],[-1.866,3.736],[0,10.276],[2.243,2.243],[-2.617,5.977]],v:[[147.768,40.074],[130.579,47.171],[114.889,32.228],[116.198,23.258],[121.056,6.072],[131.704,-14.29],[141.601,-19.521],[138.803,-5.326],[149.45,19.896],[157.298,25.686]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ind:2,ty:"sh",ix:3,ks:{a:0,k:{i:[[-0.373,1.307],[-14.385,0],[1.872,-8.223],[3.922,-2.241],[9.529,0],[0,0]],o:[[4.296,-14.946],[8.782,0],[-1.119,5.229],[-4.67,2.804],[0,0],[0.187,-1.123]],v:[[-175.042,5.325],[-146.833,-19.896],[-134.315,-5.883],[-142.162,4.95],[-163.274,9.063],[-175.976,9.063]],c:true},ix:2},nm:"パス 3",mn:"ADBE Vector Shape - Group",hd:false},{ind:3,ty:"sh",ix:4,ks:{a:0,k:{i:[[3.364,2.991],[2.798,-3.362],[0,0],[0,0],[7.468,12.701],[0.746,3.925],[-3.363,3.923],[3.359,2.989],[2.616,-3.173],[0,0],[0.08,-0.094],[0,0],[1.866,0],[0,2.992],[-1.125,2.615],[-7.474,17.375],[3.364,2.239],[0,0],[0,0],[3.366,2.804],[3.171,-3.73],[0,0],[0.229,-0.273],[0,0],[2.057,0.747],[-0.373,1.871],[3.365,4.294],[6.352,0],[2.804,-1.309],[4.482,0],[6.167,-3.547],[8.969,-10.46],[0,0],[0.173,-0.253],[0,0],[2.802,0],[0.933,1.122],[-0.747,2.43],[0,0],[0,0],[0,4.483],[4.484,0],[0,0],[0,0],[4.299,1.305],[1.306,-4.112],[0,0],[11.77,-14.01],[0,0],[0.188,-0.291],[0,0],[3.177,0],[-10.835,39.606],[19.801,0],[6.912,-7.285],[5.601,0],[2.611,-3.923],[2.801,-3.175],[0,0],[0.197,-0.324],[0,0],[14.76,0],[3.366,4.671],[-1.121,5.976],[0,0],[-7.288,4.108],[-2.803,9.154],[0.746,4.112],[12.705,0],[6.726,-3.551],[8.034,-9.527],[0,0],[0.232,-0.355],[0,0],[3.176,0],[0,0],[6.164,8.219],[8.966,0],[6.54,-7.47],[8.78,0],[5.419,-5.793],[6.907,0],[2.054,-2.992],[5.231,-6.165],[0,0],[-3.363,-2.807],[-1.867,0],[-1.681,1.868],[0,0],[0,0],[-6.166,0],[-0.936,3.548],[0,0],[-12.89,0],[3.175,-10.46],[0,0],[-4.485,-1.121],[-1.494,4.856],[-2.428,8.781],[-12.33,0],[3.179,-11.019],[0,0],[0,-1.684],[-7.843,0],[-7.1,7.848],[-8.228,9.788],[-5.954,-7.998],[-18.31,0],[-8.968,4.674],[-10.465,11.958],[0,0],[-0.21,0.334],[0,0],[0,0],[-4.107,-1.311],[-0.743,0],[-1.119,3.733],[0,0],[-13.263,0],[3.365,-12.326],[0,0],[0,-2.428],[-7.844,0],[-7.1,7.848],[-9.073,10.806],[-0.059,0.066],[0,0],[0,0],[-4.109,-5.605],[-6.722,0],[-4.482,5.045],[0,0],[-0.016,0.018],[0,0],[0,0],[0.167,-0.503],[-6.915,-9.524],[-10.648,0],[-7.847,7.474],[-3.363,8.217],[-5.601,0],[-1.868,2.241],[0,0],[0,0],[0,0],[6.723,-15.318],[0,-5.604],[-3.176,-3.55],[-5.606,0],[-12.327,14.756],[0,0],[-0.016,0.019],[0,0],[-4.67,-7.473],[0,-4.295],[2.803,-2.8],[6.54,0],[1.494,1.306],[2.617,-3.553],[-3.362,-2.618],[-9.34,0],[-8.782,5.231],[-12.7,14.388],[0,0]],o:[[-3.363,-2.8],[0,0],[0,0],[-0.748,-6.164],[-2.615,-4.672],[-0.189,-1.12],[2.99,-3.363],[-2.99,-2.617],[0,0],[-0.081,0.09],[0,0],[-5.417,6.353],[-2.241,0],[0,-2.052],[6.158,-14.384],[1.679,-3.922],[0,0],[0,0],[2.803,-3.362],[-3.362,-2.986],[0,0],[-0.258,0.232],[0,0],[-3.736,0],[2.057,-7.474],[3.174,-13.265],[-3.923,-4.858],[-2.988,0],[-1.121,-3.177],[-5.793,0],[-6.353,3.549],[0,0],[-0.209,0.235],[0,0],[-3.18,3.548],[-1.681,0],[-1.121,-1.495],[0,0],[0,0],[4.484,0],[0,-4.298],[0,0],[0,0],[1.308,-4.296],[-4.295,-1.125],[0,0],[-3.363,9.9],[0,0],[-0.226,0.272],[-8.471,10.064],[-3.179,3.547],[0.935,-3.739],[7.1,-22.792],[-9.529,0],[1.306,-4.669],[-2.615,0],[-2.806,4.301],[0,0],[-0.246,0.296],[0,0],[-19.058,21.856],[-9.151,0],[-2.802,-3.737],[0,0],[12.332,0],[7.469,-4.297],[1.122,-4.296],[-1.869,-13.824],[-7.474,0],[-7.096,3.55],[0,0],[-0.287,0.324],[-8.228,9.774],[-3.176,3.547],[0,0],[2.99,-10.276],[-5.793,-7.475],[-10.278,0],[-5.231,-7.656],[-8.783,0],[0.56,-2.616],[-2.247,0],[-2.055,2.987],[-11.773,14.013],[-2.799,3.366],[1.495,1.305],[2.242,0],[0,0],[0,0],[-1.309,5.234],[3.549,0],[0,0],[7.289,-25.221],[10.465,0],[0,0],[-1.306,5.045],[5.231,1.307],[0.561,-2.057],[3.179,-11.957],[11.77,0],[0,0],[-0.935,3.553],[0,7.472],[7.847,0],[0,0],[-2.938,11.341],[4.669,6.167],[11.024,0],[9.9,-5.04],[0,0],[0.259,-0.31],[0,0],[0,0],[-1.119,4.116],[0.751,0.186],[3.553,0],[0,0],[6.728,-23.726],[11.025,0],[0,0],[-0.746,2.804],[0,7.475],[7.848,0],[0,0],[0.06,-0.063],[0,0],[0,0],[-2.055,7.283],[3.925,5.23],[10.461,0],[0,0],[0.015,-0.017],[0,0],[0,0],[-0.002,0.139],[-3.176,10.648],[5.604,7.479],[10.465,0],[5.604,-5.229],[7.098,1.866],[4.111,0],[0,0],[0,0],[0,0],[-5.796,13.823],[-1.868,4.298],[0,5.229],[3.549,3.735],[11.019,0],[0,0],[0.016,-0.018],[0,0],[1.309,2.803],[8.034,13.641],[0,3.737],[-2.055,2.055],[-5.977,0],[-3.547,-2.803],[-2.803,3.546],[3.55,2.802],[7.474,0],[7.844,-5.048],[0,0],[2.799,-3.363]],v:[[379.977,-4.391],[368.585,-3.458],[350.276,18.217],[342.054,27.557],[331.221,1.963],[322.626,-14.106],[325.427,-21.203],[324.495,-32.599],[313.47,-31.853],[284.949,2.071],[284.703,2.336],[252.943,40.074],[243.604,46.984],[238.932,42.126],[240.616,35.029],[263.034,-14.666],[260.976,-24.378],[250.328,-30.919],[252.757,-33.721],[252.194,-44.932],[240.616,-43.999],[206.979,-4.209],[206.242,-3.458],[188.682,17.47],[177.099,16.161],[181.396,0.281],[177.658,-25.126],[161.594,-32.787],[153,-30.732],[144.969,-35.961],[127.219,-31.479],[105.173,-11.303],[79.579,19.151],[79.01,19.885],[60.903,41.382],[52.308,46.984],[48.384,45.118],[47.636,38.952],[63.701,-19.896],[82.011,-19.896],[90.045,-27.93],[82.011,-35.961],[68.188,-35.961],[72.668,-52.217],[67.063,-62.117],[57.167,-56.513],[51.747,-36.896],[32.876,-8.312],[11.021,17.654],[10.407,18.503],[-8.215,40.636],[-16.997,46.613],[-5.417,4.204],[-30.076,-35.961],[-55.667,-25.502],[-63.703,-34.467],[-71.359,-29.427],[-78.273,-19.896],[-108.164,15.6],[-108.82,16.535],[-112.269,20.645],[-158.789,47.173],[-178.032,40.074],[-180.459,25.129],[-163.274,25.129],[-134.125,18.963],[-118.808,-1.4],[-118.062,-14.106],[-146.084,-35.961],[-167.57,-31.292],[-189.802,-12.049],[-215.768,18.776],[-216.539,19.799],[-234.071,40.636],[-242.852,46.613],[-231.271,4.204],[-234.445,-25.126],[-257.424,-35.961],[-283.953,-24.756],[-305.438,-35.961],[-328.044,-26.248],[-336.073,-34.467],[-342.987,-30.544],[-351.579,-18.777],[-380.729,15.783],[-379.792,27.184],[-374.562,29.049],[-368.582,26.062],[-351.956,6.445],[-364.472,51.469],[-356.625,61.744],[-348.964,55.768],[-338.32,18.03],[-306.372,-20.27],[-297.216,-0.28],[-308.054,39.885],[-302.823,49.789],[-292.359,43.623],[-281.151,2.52],[-258.547,-20.27],[-246.776,-0.094],[-258.357,41.755],[-259.481,49.977],[-244.162,63.053],[-223.422,52.777],[-195.623,19.668],[-190.92,49.787],[-158.789,63.242],[-129.643,56.324],[-100.873,31.852],[-87.051,15.413],[-86.354,14.441],[-79.953,6.82],[-92.289,51.652],[-86.685,61.558],[-84.442,61.744],[-76.783,55.768],[-65.945,17.654],[-32.878,-20.27],[-20.922,-0.094],[-32.505,41.755],[-33.625,49.601],[-18.307,63.053],[2.432,52.777],[22.98,28.299],[23.163,28.116],[39.042,9.249],[32.13,34.658],[35.493,54.835],[52.308,63.053],[73.603,51.096],[91.298,30.036],[91.347,29.986],[92.689,28.381],[100.875,18.639],[100.689,19.338],[104.987,51.652],[130.579,63.242],[158.606,51.842],[172.245,31.481],[189.429,33.718],[199.517,29.611],[215.266,10.617],[240.237,-18.962],[245.658,-15.783],[225.856,28.489],[222.117,43.81],[226.975,57.263],[241.362,63.239],[271.435,42.877],[283.157,28.917],[283.205,28.865],[309.918,-2.897],[317.393,10.182],[326.177,31.852],[321.693,42.128],[309.547,47.173],[297.031,43.063],[285.821,44.559],[287.13,55.768],[309.547,63.242],[333.089,56.7],[362.043,29.049],[380.729,6.82]],c:true},ix:2},nm:"パス 4",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"fl",c:{a:0,k:[1,1,1,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[1006.165,1378.575],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 27",np:6,cix:2,bm:0,ix:27,mn:"ADBE Vector Group",hd:false},{ty:"st",c:{a:0,k:[1,1,1,1],ix:3},o:{a:0,k:100,ix:4},w:{a:0,k:4,ix:5},lc:1,lj:1,ml:4,bm:0,nm:"線 1",mn:"ADBE Vector Graphic - Stroke",hd:false}],ip:0,op:300.3003003003,st:0,bm:0}]}],fonts:{list:[{fName:"SourceCodePro-Bold",fFamily:"Source Code Pro",fStyle:"Bold",ascent:74.098876953125}]},layers:[{ddd:0,ind:1,ty:0,nm:"Liquid",td:1,refId:"comp_0",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[542,540,0],ix:2},a:{a:0,k:[960,540,0],ix:1},s:{a:0,k:[100,100,100],ix:6}},ao:0,w:1920,h:1080,ip:16,op:166,st:16,bm:0},{ddd:0,ind:2,ty:5,nm:"NOTFOUND 2",tt:2,sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[536.045,560,0],ix:2},a:{a:0,k:[-549.163,-152.209,0],ix:1},s:{a:0,k:[100,100,100],ix:6}},ao:0,t:{d:{k:[{s:{sz:[2158,390],ps:[-1628,-195],s:220,f:"SourceCodePro-Bold",t:"NOTFOUND",j:2,tr:-10,lh:264,ls:22,sc:[0,0,0],sw:4},t:0}]},p:{},m:{g:1,a:{a:0,k:[0,0],ix:2}},a:[]},ip:93,op:180,st:0,bm:0},{ddd:0,ind:3,ty:4,nm:"シェイプレイヤー 12",td:1,sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:1,k:[{i:{x:0.728,y:0.796},o:{x:0.194,y:0.143},t:111,s:[754.913,-287.428,0],to:[-0.667,0,0],ti:[-372.128,210.83,0]},{i:{x:0.667,y:1},o:{x:0.194,y:0.204},t:118,s:[754.913,-287.428,0],to:[232.964,-131.986,0],ti:[-390.667,221.333,0]},{t:176,s:[-1056.329,738.737,0]}],ix:2},a:{a:0,k:[0,0,0],ix:1},s:{a:0,k:[100,100,100],ix:6}},ao:0,shapes:[{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[228,0],[156,0],[236,0],[228,0],[192,0],[180,0],[155.534,0],[413.719,0],[223.962,0],[0,0],[0,0],[0,0],[0,0]],o:[[-228,0],[-156,0],[-236,0],[-228,0],[-192,0],[-156,0],[-252.466,0],[-158.427,0],[-896.816,0],[0,0],[0,0],[0,0],[0,0]],v:[[3241.921,362.28],[2753.921,530.28],[2329.921,370.28],[1853.921,518.28],[1433.922,370.28],[1033.921,530.28],[650.387,375.096],[64.203,539.678],[-386.041,410.687],[-2430.079,882.28],[177.921,1762.28],[3521.921,1674.28],[3921.921,682.28]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"st",c:{a:0,k:[0,0,0,1],ix:3},o:{a:0,k:100,ix:4},w:{a:0,k:6,ix:5},lc:1,lj:1,ml:4,bm:0,nm:"線 1",mn:"ADBE Vector Graphic - Stroke",hd:false},{ty:"fl",c:{a:0,k:[0,0,0,1],ix:4},o:{a:0,k:100,ix:5},r:1,bm:0,nm:"塗り 1",mn:"ADBE Vector Graphic - Fill",hd:false},{ty:"tr",p:{a:0,k:[-827.094,2.969],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"シェイプ 2",np:3,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false}],ip:105,op:180,st:36,bm:0},{ddd:0,ind:4,ty:5,nm:"NOTFOUND 3",tt:2,sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[536.045,560,0],ix:2},a:{a:0,k:[-549.163,-152.209,0],ix:1},s:{a:0,k:[100,100,100],ix:6}},ao:0,t:{d:{k:[{s:{sz:[2158,390],ps:[-1628,-195],s:220,f:"SourceCodePro-Bold",t:"NOTFOUND",j:2,tr:-10,lh:264,ls:22,fc:[0,0,0],sc:[0,0,0],sw:4,of:true},t:0}]},p:{},m:{g:1,a:{a:0,k:[0,0],ix:2}},a:[]},ip:118,op:180,st:25,bm:0},{ddd:0,ind:5,ty:0,nm:"Text_Mask",td:1,refId:"comp_2",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[542,540,0],ix:2},a:{a:0,k:[960,540,0],ix:1},s:{a:0,k:[100,100,100],ix:6}},ao:0,w:1920,h:1080,ip:16,op:166,st:16,bm:0},{ddd:0,ind:6,ty:0,nm:"Liquid",tt:1,refId:"comp_0",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[542,540,0],ix:2},a:{a:0,k:[960,540,0],ix:1},s:{a:0,k:[100,100,100],ix:6}},ao:0,w:1920,h:1080,ip:16,op:166,st:16,bm:0},{ddd:0,ind:7,ty:4,nm:"Life is Tech ! KANSAI LOGO_1Layerアウトライン 5",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[542,540,0],ix:2},a:{a:0,k:[1003,951.373,0],ix:1},s:{a:0,k:[50,50,100],ix:6}},ao:0,shapes:[{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[57.355,-57.356],[186.164,0],[87.328,37.703],[5.771,-3.56],[102.949,-23.11],[60.15,-1.685],[-46.317,35.985],[-10.097,12.43],[-0.672,0.864],[8.233,7.593],[38.344,80.766],[0,0],[-0.485,-1.093],[-67.267,-65.546],[47.357,-36.789],[29.182,-10.938],[-2.303,-12.892],[-26.693,-0.131],[-1.922,0],[-106.192,23.833],[-27.971,13.037],[-98.336,0],[-139.781,139.782],[-36.491,82.695]],o:[[-33.792,71.16],[-131.636,131.64],[-95.799,0],[-6.645,-2.867],[-14.291,6.832],[-85.415,19.171],[38.167,-16.665],[64.733,-50.292],[0.776,-0.736],[6.874,-8.842],[-66.186,-61.06],[0,0],[0.483,1.096],[38.354,85.675],[-18.885,21.733],[-60.335,46.873],[-24.369,9.126],[2.339,13.062],[1.869,0.008],[64.532,-0.003],[98.108,-22.023],[90.045,37.446],[197.682,0],[65.833,-65.838],[0,0]],v:[[699.185,-244.165],[561.916,-50.053],[69.092,154.083],[-206.89,97.262],[-226.629,98.701],[-438.979,173.06],[-663.949,200.583],[-525.938,121.09],[-403.097,0.952],[-400.925,-1.451],[-403.333,-30.519],[-560.752,-244.165],[-608.149,-244.165],[-606.726,-240.87],[-447.639,-13.125],[-552.385,87.042],[-716.293,175.344],[-744.317,215.657],[-703.089,244.153],[-697.418,244.164],[-429.538,215.125],[-214.721,140.767],[69.092,197.191],[592.401,-19.569],[746.62,-244.165]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[933.906,1501.123],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 9",np:2,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[88.714,99.713],[0,0],[-24.312,-117.679]],o:[[-25.065,-129.23],[0,0],[80.671,91.367],[0,0]],v:[[101.674,174.406],[-71.211,-174.406],[-101.674,-143.799],[57.738,174.406]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1627.738,641.476],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 10",np:2,cix:2,bm:0,ix:2,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[-80.115,91.131],[0,0],[24.965,-128.699]],o:[[24.209,-117.189],[0,0],[-88.113,99.468],[0,0]],v:[[-57.224,173.789],[101.164,-143.269],[70.643,-173.789],[-101.164,173.789]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[377.748,642.093],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 11",np:2,cix:2,bm:0,ix:3,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[9.204,7.889],[0,0],[-7.892,9.206],[0,0],[18.406,-17.111],[-5.731,-30.75],[3.313,-3.313],[0,0],[0,0],[0,0],[-20.284,-2.097],[-22.962,22.96],[15.613,29.695]],o:[[-7.893,9.208],[0,0],[-9.21,-7.891],[0,0],[-23.555,-1.302],[-24.802,23.061],[3.42,18.34],[0,0],[0,0],[0,0],[28.21,-28.209],[18.394,1.903],[26.542,-26.545],[0,0]],v:[[50.098,-0.672],[19.013,1.722],[-19.101,-30.946],[-21.496,-62.032],[13.849,-103.272],[-52.119,-79.663],[-83.667,-0.794],[-98.235,36.539],[-108.152,46.461],[-52.96,104.574],[-46.09,97.701],[10.475,63.906],[79.251,38.962],[92.539,-50.191]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1121.367,499.693],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 12",np:2,cix:2,bm:0,ix:4,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[7.468,-7.469],[7.465,7.469],[-7.467,7.465],[-7.466,-7.469]],o:[[-7.466,7.469],[-7.467,-7.469],[7.465,-7.469],[7.468,7.465]],v:[[-29.151,56.554],[-56.193,56.554],[-56.193,29.512],[-29.151,29.512]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[0,0],[0,0],[-12.309,-12.31],[0,0],[-12.308,12.309],[0,0]],o:[[0,0],[-12.309,12.31],[0,0],[12.309,12.309],[0,0],[0,0]],v:[[30.959,-88.345],[-76.766,19.381],[-76.766,64.146],[-64.876,76.036],[-20.114,76.036],[89.075,-33.152]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[899.883,716.865],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 13",np:4,cix:2,bm:0,ix:5,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[5.032,-10.067],[0,0],[11.334,41.901],[-18.247,-21.133],[0.142,10.382],[-2.967,-13.408],[-1.317,7.85],[-10.106,-8.815]],o:[[0,0],[-28.542,15.876],[-7.55,-27.919],[5.049,5.845],[-0.156,-11.307],[2.013,9.083],[1.993,-11.905],[16.219,14.142]],v:[[57.096,15.182],[23.278,48.999],[-42.464,10.039],[-17.174,-10.326],[-4.912,-19.112],[11.083,-18.985],[28.27,-19.367],[52.586,-21.487]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[19.891,19.891],[19.894,3.979],[17.682,15.028],[-10.905,-44.975],[-43.868,28.842],[0,0]],o:[[-19.891,-19.891],[-19.89,-3.977],[0,0],[13.371,55.144],[0,0],[6.579,-13.162]],v:[[58.851,-38.511],[-0.822,-65.476],[-71.104,-91.554],[-69.114,-19.284],[29.235,62.711],[73.44,18.51]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[863.548,486.603],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 14",np:4,cix:2,bm:0,ix:6,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[-13.785,13.785],[0,0],[12.312,12.31],[0,0],[12.308,-12.307],[0,0],[-12.311,-12.309],[0,0]],o:[[0,0],[13.786,-13.785],[0,0],[-12.308,-12.309],[0,0],[-12.311,12.308],[0,0],[12.311,12.31]],v:[[128.534,128.501],[128.534,128.501],[131.684,80.584],[-69.427,-131.653],[-114.187,-131.653],[-131.685,-114.156],[-131.685,-69.396],[80.618,131.652]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1046.143,662.187],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 15",np:2,cix:2,bm:0,ix:7,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[22.87,59.992],[-69.384,-44.227],[-51.572,-59.992],[26.219,27.888],[54.92,2.479],[69.384,18.818]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[518.659,426.998],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 16",np:2,cix:2,bm:0,ix:8,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-2.63,-58.411],[-14.034,-74.906],[-65.129,-39.57],[-53.724,-23.078],[-37.879,-34.035],[18.476,47.454],[2.629,58.411],[14.036,74.906],[65.129,39.571],[53.722,23.078],[37.879,34.036],[-18.473,-47.453]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[590.918,358.591],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 17",np:2,cix:2,bm:0,ix:9,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-13.757,-39.784],[3.403,-5.724],[35.357,-21.822],[44.375,-3.911],[12.596,12.096],[39.486,65.47],[18.239,76.171],[-44.375,-48.132],[11.277,-76.171],[20.829,-57.207]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[658.075,309.299],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 18",np:2,cix:2,bm:0,ix:10,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-6.342,76.056],[-54.049,-54.696],[4.496,-76.056],[11.639,-56.479],[-25.666,-42.869],[-13,-8.15],[21.536,-20.75],[28.14,-2.65],[-6.396,9.95],[7.683,48.547],[46.838,34.264],[54.049,54.023]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[759.765,272.599],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 19",np:2,cix:2,bm:0,ix:11,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[22.943,-53.782],[19.811,-73.587],[-41.547,-63.887],[-38.415,-44.081],[-19.388,-47.087],[-3.915,50.774],[-22.945,53.783],[-19.813,73.587],[41.547,63.888],[38.416,44.081],[19.388,47.089],[3.913,-50.773]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[887.641,239.73],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 20",np:2,cix:2,bm:0,ix:12,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[7.733,0],[2.096,-0.718],[1.701,-1.572],[0.984,-2.485],[0,-3.407],[-3.54,-3.209],[-5.767,-2.883],[-3.535,-2.227],[-2.887,-3.145],[-1.836,-4.325],[0,-5.899],[2.163,-5.24],[3.598,-3.605],[4.849,-1.833],[5.372,0],[6.549,3.011],[3.932,4.588],[0,0],[-4.261,-2.093],[-4.457,0],[-3.28,3.41],[0,6.164],[3.932,3.539],[6.025,3.015],[3.343,2.232],[2.556,3.082],[1.505,4.127],[0,5.769],[-2.294,5.178],[-3.733,3.411],[-4.72,1.642],[-4.851,0],[-5.576,-2.293],[-3.805,-4.454]],o:[[-5.11,-6.158],[-2.229,0],[-2.096,0.724],[-1.707,1.574],[-0.981,2.491],[0,5.9],[3.537,3.213],[3.407,1.704],[3.54,2.23],[2.88,3.144],[1.832,4.327],[0,6.816],[-2.163,5.244],[-3.61,3.605],[-4.849,1.836],[-7.735,0],[-6.556,-3.014],[0,0],[3.015,3.672],[4.256,2.099],[4.979,0],[3.272,-3.407],[0,-6.026],[-3.93,-3.537],[-3.803,-1.836],[-3.344,-2.225],[-2.553,-3.078],[-1.509,-4.128],[0,-7.203],[2.289,-5.175],[3.736,-3.407],[4.717,-1.636],[7.076,0],[5.569,2.295],[0,0]],v:[[25.949,-42.659],[6.684,-51.899],[0.196,-50.819],[-5.504,-47.377],[-9.535,-41.284],[-11.01,-32.438],[-5.7,-18.774],[8.256,-9.631],[18.673,-3.734],[28.311,4.325],[35.385,15.531],[38.138,30.864],[34.895,48.95],[26.247,62.221],[13.564,70.378],[-1.768,73.13],[-23.196,68.611],[-38.926,57.209],[-26.147,39.907],[-15.235,48.556],[-2.163,51.704],[10.224,46.591],[15.138,32.24],[9.24,17.889],[-5.7,8.061],[-16.415,1.965],[-25.263,-5.996],[-31.356,-16.807],[-33.616,-31.652],[-30.176,-50.228],[-21.134,-63.105],[-8.452,-70.674],[5.899,-73.13],[24.87,-69.689],[38.926,-59.566]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[978.889,230.589],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 21",np:2,cix:2,bm:0,ix:13,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[9.955,-45.257],[-7.997,72.515],[-30.934,69.019],[-12.981,-48.754],[-38.826,-52.693],[-35.805,-72.515],[38.827,-61.138],[35.804,-41.319]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1121.475,236.785],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 22",np:2,cix:2,bm:0,ix:14,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-49.198,57.981],[-10.687,-75.769],[49.198,-58.528],[43.431,-38.503],[5.272,-49.49],[-4.955,-13.975],[30.371,-3.804],[25.042,14.71],[-10.285,4.54],[-21.653,44.022],[18.397,55.553],[12.576,75.769]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1202.994,258.199],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 23",np:2,cix:2,bm:0,ix:15,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[6.622,-0.5],[7.737,3.866],[4.048,6.12],[1.028,7.765],[-1.818,9.054],[-4.745,9.496],[-6.181,6.947],[-6.888,3.814],[-7.301,0.384],[-6.92,-3.457],[-4.077,-5.334],[-0.943,-6.627],[0,0],[7.62,3.803],[4.367,-0.822],[4.162,-3.045],[3.837,-5.042],[3.16,-6.332],[1.726,-6.093],[-0.062,-5.157],[-2.025,-4.014],[-4.341,-2.167],[-4.043,0.616],[-3.519,2.054],[0,0]],o:[[-6.624,0.498],[-7.032,-3.512],[-4.051,-6.123],[-1.035,-7.765],[1.811,-9.06],[4.744,-9.498],[6.18,-6.949],[6.883,-3.813],[7.296,-0.381],[7.148,3.571],[4.076,5.332],[0,0],[-1.353,-9.319],[-4.223,-2.109],[-4.365,0.825],[-4.155,3.052],[-3.84,5.04],[-3.105,6.214],[-1.726,6.1],[0.058,5.16],[2.022,4.015],[4.103,2.048],[4.042,-0.619],[0,0],[-5.742,3.284]],v:[[-10.681,70.192],[-32.224,65.145],[-48.847,50.691],[-56.459,29.857],[-55.284,4.628],[-45.451,-23.204],[-29.065,-47.871],[-9.465,-64.015],[11.807,-70.31],[33.13,-65.704],[49.972,-52.346],[57.495,-34.413],[37.979,-25.702],[24.521,-45.388],[11.639,-47.319],[-1.152,-41.513],[-13.143,-29.371],[-23.641,-12.311],[-30.888,6.153],[-33.385,23.034],[-30.26,36.793],[-20.715,46.064],[-8.493,48.212],[2.847,44.206],[7.863,64.513]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1309.212,298.27],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 24",np:2,cix:2,bm:0,ix:16,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-20.66,69.643],[13.135,17.989],[-21.744,-4.828],[-55.539,46.828],[-75.113,34.019],[1.085,-82.451],[20.658,-69.647],[-10.227,-22.431],[24.651,0.386],[55.537,-46.829],[75.113,-34.022],[-1.083,82.451]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1401.918,349.723],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 25",np:2,cix:2,bm:0,ix:17,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0]],v:[[-26.722,11.584],[38.198,-56.898],[54.604,-41.343],[-10.315,27.136]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[2.614,-2.755],[3.748,-0.24],[2.759,2.614],[-0.083,3.708],[-2.797,2.948],[-3.796,0.383],[-2.852,-2.707],[0.128,-3.847]],o:[[-2.796,2.953],[-3.746,0.238],[-2.851,-2.708],[0.089,-3.713],[2.614,-2.758],[3.784,-0.379],[2.757,2.614],[-0.129,3.854]],v:[[-30.792,51.877],[-40.61,56.66],[-50.369,53.098],[-54.521,43.475],[-50.194,33.486],[-40.584,28.777],[-30.621,32.269],[-26.677,41.964]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[1503.325,427.57],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 26",np:4,cix:2,bm:0,ix:18,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[1.309,-5.228],[1.497,-5.234],[0,6.54],[-2.988,0],[-1.121,-1.311]],o:[[-0.187,1.495],[-5.045,-3.736],[0,-6.535],[0.746,0],[1.682,2.053]],v:[[165.703,-3.458],[162.153,9.622],[154.867,-6.82],[161.594,-16.721],[165.141,-15.037]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[3.737,-3.55],[6.352,0],[0,8.965],[-0.746,2.806],[-1.685,6.351],[-4.485,4.482],[-3.734,0.746],[0,-4.295],[-7.098,-7.098],[-2.988,-1.679]],o:[[-5.043,4.671],[-9.902,0],[0,-2.617],[1.682,-5.604],[2.611,-9.154],[2.986,-2.802],[-1.866,3.736],[0,10.276],[2.243,2.243],[-2.617,5.977]],v:[[147.768,40.074],[130.579,47.171],[114.889,32.228],[116.198,23.258],[121.056,6.072],[131.704,-14.29],[141.601,-19.521],[138.803,-5.326],[149.45,19.896],[157.298,25.686]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ind:2,ty:"sh",ix:3,ks:{a:0,k:{i:[[-0.373,1.307],[-14.385,0],[1.872,-8.223],[3.922,-2.241],[9.529,0],[0,0]],o:[[4.296,-14.946],[8.782,0],[-1.119,5.229],[-4.67,2.804],[0,0],[0.187,-1.123]],v:[[-175.042,5.325],[-146.833,-19.896],[-134.315,-5.883],[-142.162,4.95],[-163.274,9.063],[-175.976,9.063]],c:true},ix:2},nm:"パス 3",mn:"ADBE Vector Shape - Group",hd:false},{ind:3,ty:"sh",ix:4,ks:{a:0,k:{i:[[3.364,2.991],[2.798,-3.362],[0,0],[0,0],[7.468,12.701],[0.746,3.925],[-3.363,3.923],[3.359,2.989],[2.616,-3.173],[0,0],[0.08,-0.094],[0,0],[1.866,0],[0,2.992],[-1.125,2.615],[-7.474,17.375],[3.364,2.239],[0,0],[0,0],[3.366,2.804],[3.171,-3.73],[0,0],[0.229,-0.273],[0,0],[2.057,0.747],[-0.373,1.871],[3.365,4.294],[6.352,0],[2.804,-1.309],[4.482,0],[6.167,-3.547],[8.969,-10.46],[0,0],[0.173,-0.253],[0,0],[2.802,0],[0.933,1.122],[-0.747,2.43],[0,0],[0,0],[0,4.483],[4.484,0],[0,0],[0,0],[4.299,1.305],[1.306,-4.112],[0,0],[11.77,-14.01],[0,0],[0.188,-0.291],[0,0],[3.177,0],[-10.835,39.606],[19.801,0],[6.912,-7.285],[5.601,0],[2.611,-3.923],[2.801,-3.175],[0,0],[0.197,-0.324],[0,0],[14.76,0],[3.366,4.671],[-1.121,5.976],[0,0],[-7.288,4.108],[-2.803,9.154],[0.746,4.112],[12.705,0],[6.726,-3.551],[8.034,-9.527],[0,0],[0.232,-0.355],[0,0],[3.176,0],[0,0],[6.164,8.219],[8.966,0],[6.54,-7.47],[8.78,0],[5.419,-5.793],[6.907,0],[2.054,-2.992],[5.231,-6.165],[0,0],[-3.363,-2.807],[-1.867,0],[-1.681,1.868],[0,0],[0,0],[-6.166,0],[-0.936,3.548],[0,0],[-12.89,0],[3.175,-10.46],[0,0],[-4.485,-1.121],[-1.494,4.856],[-2.428,8.781],[-12.33,0],[3.179,-11.019],[0,0],[0,-1.684],[-7.843,0],[-7.1,7.848],[-8.228,9.788],[-5.954,-7.998],[-18.31,0],[-8.968,4.674],[-10.465,11.958],[0,0],[-0.21,0.334],[0,0],[0,0],[-4.107,-1.311],[-0.743,0],[-1.119,3.733],[0,0],[-13.263,0],[3.365,-12.326],[0,0],[0,-2.428],[-7.844,0],[-7.1,7.848],[-9.073,10.806],[-0.059,0.066],[0,0],[0,0],[-4.109,-5.605],[-6.722,0],[-4.482,5.045],[0,0],[-0.016,0.018],[0,0],[0,0],[0.167,-0.503],[-6.915,-9.524],[-10.648,0],[-7.847,7.474],[-3.363,8.217],[-5.601,0],[-1.868,2.241],[0,0],[0,0],[0,0],[6.723,-15.318],[0,-5.604],[-3.176,-3.55],[-5.606,0],[-12.327,14.756],[0,0],[-0.016,0.019],[0,0],[-4.67,-7.473],[0,-4.295],[2.803,-2.8],[6.54,0],[1.494,1.306],[2.617,-3.553],[-3.362,-2.618],[-9.34,0],[-8.782,5.231],[-12.7,14.388],[0,0]],o:[[-3.363,-2.8],[0,0],[0,0],[-0.748,-6.164],[-2.615,-4.672],[-0.189,-1.12],[2.99,-3.363],[-2.99,-2.617],[0,0],[-0.081,0.09],[0,0],[-5.417,6.353],[-2.241,0],[0,-2.052],[6.158,-14.384],[1.679,-3.922],[0,0],[0,0],[2.803,-3.362],[-3.362,-2.986],[0,0],[-0.258,0.232],[0,0],[-3.736,0],[2.057,-7.474],[3.174,-13.265],[-3.923,-4.858],[-2.988,0],[-1.121,-3.177],[-5.793,0],[-6.353,3.549],[0,0],[-0.209,0.235],[0,0],[-3.18,3.548],[-1.681,0],[-1.121,-1.495],[0,0],[0,0],[4.484,0],[0,-4.298],[0,0],[0,0],[1.308,-4.296],[-4.295,-1.125],[0,0],[-3.363,9.9],[0,0],[-0.226,0.272],[-8.471,10.064],[-3.179,3.547],[0.935,-3.739],[7.1,-22.792],[-9.529,0],[1.306,-4.669],[-2.615,0],[-2.806,4.301],[0,0],[-0.246,0.296],[0,0],[-19.058,21.856],[-9.151,0],[-2.802,-3.737],[0,0],[12.332,0],[7.469,-4.297],[1.122,-4.296],[-1.869,-13.824],[-7.474,0],[-7.096,3.55],[0,0],[-0.287,0.324],[-8.228,9.774],[-3.176,3.547],[0,0],[2.99,-10.276],[-5.793,-7.475],[-10.278,0],[-5.231,-7.656],[-8.783,0],[0.56,-2.616],[-2.247,0],[-2.055,2.987],[-11.773,14.013],[-2.799,3.366],[1.495,1.305],[2.242,0],[0,0],[0,0],[-1.309,5.234],[3.549,0],[0,0],[7.289,-25.221],[10.465,0],[0,0],[-1.306,5.045],[5.231,1.307],[0.561,-2.057],[3.179,-11.957],[11.77,0],[0,0],[-0.935,3.553],[0,7.472],[7.847,0],[0,0],[-2.938,11.341],[4.669,6.167],[11.024,0],[9.9,-5.04],[0,0],[0.259,-0.31],[0,0],[0,0],[-1.119,4.116],[0.751,0.186],[3.553,0],[0,0],[6.728,-23.726],[11.025,0],[0,0],[-0.746,2.804],[0,7.475],[7.848,0],[0,0],[0.06,-0.063],[0,0],[0,0],[-2.055,7.283],[3.925,5.23],[10.461,0],[0,0],[0.015,-0.017],[0,0],[0,0],[-0.002,0.139],[-3.176,10.648],[5.604,7.479],[10.465,0],[5.604,-5.229],[7.098,1.866],[4.111,0],[0,0],[0,0],[0,0],[-5.796,13.823],[-1.868,4.298],[0,5.229],[3.549,3.735],[11.019,0],[0,0],[0.016,-0.018],[0,0],[1.309,2.803],[8.034,13.641],[0,3.737],[-2.055,2.055],[-5.977,0],[-3.547,-2.803],[-2.803,3.546],[3.55,2.802],[7.474,0],[7.844,-5.048],[0,0],[2.799,-3.363]],v:[[379.977,-4.391],[368.585,-3.458],[350.276,18.217],[342.054,27.557],[331.221,1.963],[322.626,-14.106],[325.427,-21.203],[324.495,-32.599],[313.47,-31.853],[284.949,2.071],[284.703,2.336],[252.943,40.074],[243.604,46.984],[238.932,42.126],[240.616,35.029],[263.034,-14.666],[260.976,-24.378],[250.328,-30.919],[252.757,-33.721],[252.194,-44.932],[240.616,-43.999],[206.979,-4.209],[206.242,-3.458],[188.682,17.47],[177.099,16.161],[181.396,0.281],[177.658,-25.126],[161.594,-32.787],[153,-30.732],[144.969,-35.961],[127.219,-31.479],[105.173,-11.303],[79.579,19.151],[79.01,19.885],[60.903,41.382],[52.308,46.984],[48.384,45.118],[47.636,38.952],[63.701,-19.896],[82.011,-19.896],[90.045,-27.93],[82.011,-35.961],[68.188,-35.961],[72.668,-52.217],[67.063,-62.117],[57.167,-56.513],[51.747,-36.896],[32.876,-8.312],[11.021,17.654],[10.407,18.503],[-8.215,40.636],[-16.997,46.613],[-5.417,4.204],[-30.076,-35.961],[-55.667,-25.502],[-63.703,-34.467],[-71.359,-29.427],[-78.273,-19.896],[-108.164,15.6],[-108.82,16.535],[-112.269,20.645],[-158.789,47.173],[-178.032,40.074],[-180.459,25.129],[-163.274,25.129],[-134.125,18.963],[-118.808,-1.4],[-118.062,-14.106],[-146.084,-35.961],[-167.57,-31.292],[-189.802,-12.049],[-215.768,18.776],[-216.539,19.799],[-234.071,40.636],[-242.852,46.613],[-231.271,4.204],[-234.445,-25.126],[-257.424,-35.961],[-283.953,-24.756],[-305.438,-35.961],[-328.044,-26.248],[-336.073,-34.467],[-342.987,-30.544],[-351.579,-18.777],[-380.729,15.783],[-379.792,27.184],[-374.562,29.049],[-368.582,26.062],[-351.956,6.445],[-364.472,51.469],[-356.625,61.744],[-348.964,55.768],[-338.32,18.03],[-306.372,-20.27],[-297.216,-0.28],[-308.054,39.885],[-302.823,49.789],[-292.359,43.623],[-281.151,2.52],[-258.547,-20.27],[-246.776,-0.094],[-258.357,41.755],[-259.481,49.977],[-244.162,63.053],[-223.422,52.777],[-195.623,19.668],[-190.92,49.787],[-158.789,63.242],[-129.643,56.324],[-100.873,31.852],[-87.051,15.413],[-86.354,14.441],[-79.953,6.82],[-92.289,51.652],[-86.685,61.558],[-84.442,61.744],[-76.783,55.768],[-65.945,17.654],[-32.878,-20.27],[-20.922,-0.094],[-32.505,41.755],[-33.625,49.601],[-18.307,63.053],[2.432,52.777],[22.98,28.299],[23.163,28.116],[39.042,9.249],[32.13,34.658],[35.493,54.835],[52.308,63.053],[73.603,51.096],[91.298,30.036],[91.347,29.986],[92.689,28.381],[100.875,18.639],[100.689,19.338],[104.987,51.652],[130.579,63.242],[158.606,51.842],[172.245,31.481],[189.429,33.718],[199.517,29.611],[215.266,10.617],[240.237,-18.962],[245.658,-15.783],[225.856,28.489],[222.117,43.81],[226.975,57.263],[241.362,63.239],[271.435,42.877],[283.157,28.917],[283.205,28.865],[309.918,-2.897],[317.393,10.182],[326.177,31.852],[321.693,42.128],[309.547,47.173],[297.031,43.063],[285.821,44.559],[287.13,55.768],[309.547,63.242],[333.089,56.7],[362.043,29.049],[380.729,6.82]],c:true},ix:2},nm:"パス 4",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[1006.165,1378.575],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 27",np:6,cix:2,bm:0,ix:19,mn:"ADBE Vector Group",hd:false},{ty:"tm",s:{a:0,k:0,ix:1},e:{a:1,k:[{i:{x:[0.282],y:[1]},o:{x:[0.333],y:[0]},t:9,s:[0]},{t:35,s:[100]}],ix:2},o:{a:0,k:0,ix:3},m:1,ix:20,nm:"パスのトリミング 1",mn:"ADBE Vector Filter - Trim",hd:false},{ty:"st",c:{a:0,k:[0,0,0,1],ix:3},o:{a:0,k:100,ix:4},w:{a:0,k:6,ix:5},lc:1,lj:1,ml:4,bm:0,nm:"線 1",mn:"ADBE Vector Graphic - Stroke",hd:false}],ip:114,op:180,st:9,bm:0},{ddd:0,ind:8,ty:4,nm:"Life is Tech ! KANSAI LOGO_1Layerアウトライン",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[542,540,0],ix:2},a:{a:0,k:[1003,951.373,0],ix:1},s:{a:0,k:[50,50,100],ix:6}},ao:0,shapes:[{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-128.357,-159.105],[-55.638,-159.105],[-55.638,-28.796],[-54.175,-28.796],[40.018,-159.105],[119.085,-159.105],[23.912,-32.211],[128.357,159.105],[48.804,159.105],[-18.546,24.894],[-55.638,73.696],[-55.638,159.105],[-128.357,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[165.507,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 1",np:2,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[4.225,16.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[-3.908,16.922],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-0.485,-104.443],[-2.439,-104.443],[-68.815,159.106],[-142.024,159.106],[-42.948,-159.107],[42.95,-159.107],[142.024,159.106],[65.888,159.106]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[492.009,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 2",np:2,cix:2,bm:0,ix:2,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,25.673],[-25.672,0],[0,-25.675],[25.675,0]],o:[[0,-25.675],[25.675,0],[0,25.673],[-25.672,0]],v:[[-46.485,0],[-0.001,-46.484],[46.485,0],[-0.001,46.484]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[490.399,1148.471],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 3",np:2,cix:2,bm:0,ix:3,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[2.599,20.828],[0,18.545],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-2.607,-20.172],[0,-18.867],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[-1.63,-16.917],[-2.61,-20.816],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[1.625,17.571],[2.598,20.176],[0,0],[0,0],[0,0]],v:[[-114.205,-159.105],[-40.997,-159.105],[26.354,-0.489],[53.686,69.305],[55.638,69.305],[49.295,12.688],[45.389,-46.364],[45.389,-159.105],[114.206,-159.105],[114.206,159.105],[40.997,159.105],[-26.356,0.489],[-53.684,-68.814],[-55.639,-68.814],[-49.292,-12.199],[-45.39,46.365],[-45.39,159.105],[-114.205,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[833.644,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 4",np:2,cix:2,bm:0,ix:4,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[-14.154,-6.176],[-13.995,0],[-7.649,5.538],[0,9.442],[2.272,3.585],[4.225,2.767],[6.014,2.443],[7.809,2.929],[0,0],[8.295,5.206],[6.175,7.001],[3.739,9.27],[0,11.715],[-5.694,11.549],[-10.252,8.625],[-14.323,4.882],[-17.253,0],[-18.227,-7.151],[-14.641,-13.666],[0,0],[10.737,4.392],[13.665,0],[7.642,-5.04],[0,-9.104],[-9.762,-4.879],[-15.295,-5.529],[0,0],[-12.198,-13.666],[0,-22.449],[5.525,-11.872],[10.412,-8.943],[15.288,-5.368],[19.843,0],[20.986,7.642],[17.242,15.298]],o:[[12.032,9.76],[14.155,6.184],[16.594,0],[7.641,-5.529],[0,-4.882],[-2.278,-3.576],[-4.237,-2.761],[-6.027,-2.438],[0,0],[-8.786,-3.246],[-8.299,-5.202],[-6.185,-6.992],[-3.743,-9.274],[0,-13.008],[5.693,-11.549],[10.249,-8.618],[14.312,-4.878],[19.519,0],[18.218,7.162],[0,0],[-11.066,-8.13],[-10.737,-4.391],[-13.994,0],[-7.649,5.051],[0,9.761],[9.761,4.882],[0,0],[21.145,7.812],[12.205,13.663],[0,13.345],[-5.536,11.881],[-10.415,8.955],[-15.299,5.371],[-21.476,0],[-20.989,-7.641],[0,0]],v:[[-80.773,69.793],[-41.484,93.708],[0.733,102.979],[37.093,94.682],[48.558,72.232],[45.145,59.543],[35.386,50.026],[20.012,42.216],[-0.73,34.164],[-41.728,16.594],[-67.349,3.906],[-89.071,-14.397],[-103.958,-38.799],[-109.569,-70.281],[-101.03,-107.125],[-77.111,-137.386],[-40.264,-157.642],[7.078,-164.963],[63.693,-154.225],[112.984,-122.989],[76.381,-77.6],[43.682,-96.391],[7.078,-102.979],[-25.38,-95.416],[-36.847,-74.184],[-22.207,-52.223],[15.373,-36.603],[53.931,-20.012],[103.954,12.203],[122.259,66.375],[113.963,104.199],[90.045,135.435],[51.49,156.908],[-1.219,164.962],[-64.911,153.495],[-122.259,119.085]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1175.522,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 5",np:2,cix:2,bm:0,ix:5,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[4.228,16.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[-3.906,16.922],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-0.488,-104.445],[-2.439,-104.445],[-68.815,159.105],[-142.024,159.105],[-42.949,-159.105],[42.95,-159.105],[142.024,159.105],[65.887,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1516.912,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 6",np:2,cix:2,bm:0,ix:6,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,25.673],[-25.672,0],[0,-25.675],[25.675,0]],o:[[0,-25.675],[25.675,0],[0,25.673],[-25.672,0]],v:[[-46.485,0],[-0.002,-46.484],[46.485,0],[-0.002,46.484]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1515.392,1148.471],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 7",np:2,cix:2,bm:0,ix:7,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-110.302,98.587],[-36.114,98.587],[-36.114,-98.586],[-110.302,-98.586],[-110.302,-159.106],[110.302,-159.106],[110.302,-98.586],[36.114,-98.586],[36.114,98.587],[110.302,98.587],[110.302,159.106],[-110.302,159.106]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1858.547,1035.85],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 8",np:2,cix:2,bm:0,ix:8,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[57.355,-57.356],[186.164,0],[87.328,37.703],[5.771,-3.56],[102.949,-23.11],[60.15,-1.685],[-46.317,35.985],[-10.097,12.43],[-0.672,0.864],[8.233,7.593],[38.344,80.766],[0,0],[-0.485,-1.093],[-67.267,-65.546],[47.357,-36.789],[29.182,-10.938],[-2.303,-12.892],[-26.693,-0.131],[-1.922,0],[-106.192,23.833],[-27.971,13.037],[-98.336,0],[-139.781,139.782],[-36.491,82.695]],o:[[-33.792,71.16],[-131.636,131.64],[-95.799,0],[-6.645,-2.867],[-14.291,6.832],[-85.415,19.171],[38.167,-16.665],[64.733,-50.292],[0.776,-0.736],[6.874,-8.842],[-66.186,-61.06],[0,0],[0.483,1.096],[38.354,85.675],[-18.885,21.733],[-60.335,46.873],[-24.369,9.126],[2.339,13.062],[1.869,0.008],[64.532,-0.003],[98.108,-22.023],[90.045,37.446],[197.682,0],[65.833,-65.838],[0,0]],v:[[699.185,-244.165],[561.916,-50.053],[69.092,154.083],[-206.89,97.262],[-226.629,98.701],[-438.979,173.06],[-663.949,200.583],[-525.938,121.09],[-403.097,0.952],[-400.925,-1.451],[-403.333,-30.519],[-560.752,-244.165],[-608.149,-244.165],[-606.726,-240.87],[-447.639,-13.125],[-552.385,87.042],[-716.293,175.344],[-744.317,215.657],[-703.089,244.153],[-697.418,244.164],[-429.538,215.125],[-214.721,140.767],[69.092,197.191],[592.401,-19.569],[746.62,-244.165]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[933.906,1501.123],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 9",np:2,cix:2,bm:0,ix:9,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[88.714,99.713],[0,0],[-24.312,-117.679]],o:[[-25.065,-129.23],[0,0],[80.671,91.367],[0,0]],v:[[101.674,174.406],[-71.211,-174.406],[-101.674,-143.799],[57.738,174.406]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1627.738,641.476],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 10",np:2,cix:2,bm:0,ix:10,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[-80.115,91.131],[0,0],[24.965,-128.699]],o:[[24.209,-117.189],[0,0],[-88.113,99.468],[0,0]],v:[[-57.224,173.789],[101.164,-143.269],[70.643,-173.789],[-101.164,173.789]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[377.748,642.093],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 11",np:2,cix:2,bm:0,ix:11,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[9.204,7.889],[0,0],[-7.892,9.206],[0,0],[18.406,-17.111],[-5.731,-30.75],[3.313,-3.313],[0,0],[0,0],[0,0],[-20.284,-2.097],[-22.962,22.96],[15.613,29.695]],o:[[-7.893,9.208],[0,0],[-9.21,-7.891],[0,0],[-23.555,-1.302],[-24.802,23.061],[3.42,18.34],[0,0],[0,0],[0,0],[28.21,-28.209],[18.394,1.903],[26.542,-26.545],[0,0]],v:[[50.098,-0.672],[19.013,1.722],[-19.101,-30.946],[-21.496,-62.032],[13.849,-103.272],[-52.119,-79.663],[-83.667,-0.794],[-98.235,36.539],[-108.152,46.461],[-52.96,104.574],[-46.09,97.701],[10.475,63.906],[79.251,38.962],[92.539,-50.191]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1121.367,499.693],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 12",np:2,cix:2,bm:0,ix:12,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[7.468,-7.469],[7.465,7.469],[-7.467,7.465],[-7.466,-7.469]],o:[[-7.466,7.469],[-7.467,-7.469],[7.465,-7.469],[7.468,7.465]],v:[[-29.151,56.554],[-56.193,56.554],[-56.193,29.512],[-29.151,29.512]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[0,0],[0,0],[-12.309,-12.31],[0,0],[-12.308,12.309],[0,0]],o:[[0,0],[-12.309,12.31],[0,0],[12.309,12.309],[0,0],[0,0]],v:[[30.959,-88.345],[-76.766,19.381],[-76.766,64.146],[-64.876,76.036],[-20.114,76.036],[89.075,-33.152]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[899.883,716.865],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 13",np:4,cix:2,bm:0,ix:13,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[5.032,-10.067],[0,0],[11.334,41.901],[-18.247,-21.133],[0.142,10.382],[-2.967,-13.408],[-1.317,7.85],[-10.106,-8.815]],o:[[0,0],[-28.542,15.876],[-7.55,-27.919],[5.049,5.845],[-0.156,-11.307],[2.013,9.083],[1.993,-11.905],[16.219,14.142]],v:[[57.096,15.182],[23.278,48.999],[-42.464,10.039],[-17.174,-10.326],[-4.912,-19.112],[11.083,-18.985],[28.27,-19.367],[52.586,-21.487]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[19.891,19.891],[19.894,3.979],[17.682,15.028],[-10.905,-44.975],[-43.868,28.842],[0,0]],o:[[-19.891,-19.891],[-19.89,-3.977],[0,0],[13.371,55.144],[0,0],[6.579,-13.162]],v:[[58.851,-38.511],[-0.822,-65.476],[-71.104,-91.554],[-69.114,-19.284],[29.235,62.711],[73.44,18.51]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[863.548,486.603],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 14",np:4,cix:2,bm:0,ix:14,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[-13.785,13.785],[0,0],[12.312,12.31],[0,0],[12.308,-12.307],[0,0],[-12.311,-12.309],[0,0]],o:[[0,0],[13.786,-13.785],[0,0],[-12.308,-12.309],[0,0],[-12.311,12.308],[0,0],[12.311,12.31]],v:[[128.534,128.501],[128.534,128.501],[131.684,80.584],[-69.427,-131.653],[-114.187,-131.653],[-131.685,-114.156],[-131.685,-69.396],[80.618,131.652]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1046.143,662.187],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 15",np:2,cix:2,bm:0,ix:15,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[22.87,59.992],[-69.384,-44.227],[-51.572,-59.992],[26.219,27.888],[54.92,2.479],[69.384,18.818]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[518.659,426.998],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 16",np:2,cix:2,bm:0,ix:16,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-2.63,-58.411],[-14.034,-74.906],[-65.129,-39.57],[-53.724,-23.078],[-37.879,-34.035],[18.476,47.454],[2.629,58.411],[14.036,74.906],[65.129,39.571],[53.722,23.078],[37.879,34.036],[-18.473,-47.453]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[590.918,358.591],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 17",np:2,cix:2,bm:0,ix:17,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-13.757,-39.784],[3.403,-5.724],[35.357,-21.822],[44.375,-3.911],[12.596,12.096],[39.486,65.47],[18.239,76.171],[-44.375,-48.132],[11.277,-76.171],[20.829,-57.207]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[658.075,309.299],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 18",np:2,cix:2,bm:0,ix:18,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-6.342,76.056],[-54.049,-54.696],[4.496,-76.056],[11.639,-56.479],[-25.666,-42.869],[-13,-8.15],[21.536,-20.75],[28.14,-2.65],[-6.396,9.95],[7.683,48.547],[46.838,34.264],[54.049,54.023]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[759.765,272.599],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 19",np:2,cix:2,bm:0,ix:19,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[22.943,-53.782],[19.811,-73.587],[-41.547,-63.887],[-38.415,-44.081],[-19.388,-47.087],[-3.915,50.774],[-22.945,53.783],[-19.813,73.587],[41.547,63.888],[38.416,44.081],[19.388,47.089],[3.913,-50.773]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[887.641,239.73],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 20",np:2,cix:2,bm:0,ix:20,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[7.733,0],[2.096,-0.718],[1.701,-1.572],[0.984,-2.485],[0,-3.407],[-3.54,-3.209],[-5.767,-2.883],[-3.535,-2.227],[-2.887,-3.145],[-1.836,-4.325],[0,-5.899],[2.163,-5.24],[3.598,-3.605],[4.849,-1.833],[5.372,0],[6.549,3.011],[3.932,4.588],[0,0],[-4.261,-2.093],[-4.457,0],[-3.28,3.41],[0,6.164],[3.932,3.539],[6.025,3.015],[3.343,2.232],[2.556,3.082],[1.505,4.127],[0,5.769],[-2.294,5.178],[-3.733,3.411],[-4.72,1.642],[-4.851,0],[-5.576,-2.293],[-3.805,-4.454]],o:[[-5.11,-6.158],[-2.229,0],[-2.096,0.724],[-1.707,1.574],[-0.981,2.491],[0,5.9],[3.537,3.213],[3.407,1.704],[3.54,2.23],[2.88,3.144],[1.832,4.327],[0,6.816],[-2.163,5.244],[-3.61,3.605],[-4.849,1.836],[-7.735,0],[-6.556,-3.014],[0,0],[3.015,3.672],[4.256,2.099],[4.979,0],[3.272,-3.407],[0,-6.026],[-3.93,-3.537],[-3.803,-1.836],[-3.344,-2.225],[-2.553,-3.078],[-1.509,-4.128],[0,-7.203],[2.289,-5.175],[3.736,-3.407],[4.717,-1.636],[7.076,0],[5.569,2.295],[0,0]],v:[[25.949,-42.659],[6.684,-51.899],[0.196,-50.819],[-5.504,-47.377],[-9.535,-41.284],[-11.01,-32.438],[-5.7,-18.774],[8.256,-9.631],[18.673,-3.734],[28.311,4.325],[35.385,15.531],[38.138,30.864],[34.895,48.95],[26.247,62.221],[13.564,70.378],[-1.768,73.13],[-23.196,68.611],[-38.926,57.209],[-26.147,39.907],[-15.235,48.556],[-2.163,51.704],[10.224,46.591],[15.138,32.24],[9.24,17.889],[-5.7,8.061],[-16.415,1.965],[-25.263,-5.996],[-31.356,-16.807],[-33.616,-31.652],[-30.176,-50.228],[-21.134,-63.105],[-8.452,-70.674],[5.899,-73.13],[24.87,-69.689],[38.926,-59.566]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[978.889,230.589],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 21",np:2,cix:2,bm:0,ix:21,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[9.955,-45.257],[-7.997,72.515],[-30.934,69.019],[-12.981,-48.754],[-38.826,-52.693],[-35.805,-72.515],[38.827,-61.138],[35.804,-41.319]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1121.475,236.785],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 22",np:2,cix:2,bm:0,ix:22,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-49.198,57.981],[-10.687,-75.769],[49.198,-58.528],[43.431,-38.503],[5.272,-49.49],[-4.955,-13.975],[30.371,-3.804],[25.042,14.71],[-10.285,4.54],[-21.653,44.022],[18.397,55.553],[12.576,75.769]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1202.994,258.199],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 23",np:2,cix:2,bm:0,ix:23,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[6.622,-0.5],[7.737,3.866],[4.048,6.12],[1.028,7.765],[-1.818,9.054],[-4.745,9.496],[-6.181,6.947],[-6.888,3.814],[-7.301,0.384],[-6.92,-3.457],[-4.077,-5.334],[-0.943,-6.627],[0,0],[7.62,3.803],[4.367,-0.822],[4.162,-3.045],[3.837,-5.042],[3.16,-6.332],[1.726,-6.093],[-0.062,-5.157],[-2.025,-4.014],[-4.341,-2.167],[-4.043,0.616],[-3.519,2.054],[0,0]],o:[[-6.624,0.498],[-7.032,-3.512],[-4.051,-6.123],[-1.035,-7.765],[1.811,-9.06],[4.744,-9.498],[6.18,-6.949],[6.883,-3.813],[7.296,-0.381],[7.148,3.571],[4.076,5.332],[0,0],[-1.353,-9.319],[-4.223,-2.109],[-4.365,0.825],[-4.155,3.052],[-3.84,5.04],[-3.105,6.214],[-1.726,6.1],[0.058,5.16],[2.022,4.015],[4.103,2.048],[4.042,-0.619],[0,0],[-5.742,3.284]],v:[[-10.681,70.192],[-32.224,65.145],[-48.847,50.691],[-56.459,29.857],[-55.284,4.628],[-45.451,-23.204],[-29.065,-47.871],[-9.465,-64.015],[11.807,-70.31],[33.13,-65.704],[49.972,-52.346],[57.495,-34.413],[37.979,-25.702],[24.521,-45.388],[11.639,-47.319],[-1.152,-41.513],[-13.143,-29.371],[-23.641,-12.311],[-30.888,6.153],[-33.385,23.034],[-30.26,36.793],[-20.715,46.064],[-8.493,48.212],[2.847,44.206],[7.863,64.513]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1309.212,298.27],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 24",np:2,cix:2,bm:0,ix:24,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-20.66,69.643],[13.135,17.989],[-21.744,-4.828],[-55.539,46.828],[-75.113,34.019],[1.085,-82.451],[20.658,-69.647],[-10.227,-22.431],[24.651,0.386],[55.537,-46.829],[75.113,-34.022],[-1.083,82.451]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1401.918,349.723],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 25",np:2,cix:2,bm:0,ix:25,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0]],v:[[-26.722,11.584],[38.198,-56.898],[54.604,-41.343],[-10.315,27.136]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[2.614,-2.755],[3.748,-0.24],[2.759,2.614],[-0.083,3.708],[-2.797,2.948],[-3.796,0.383],[-2.852,-2.707],[0.128,-3.847]],o:[[-2.796,2.953],[-3.746,0.238],[-2.851,-2.708],[0.089,-3.713],[2.614,-2.758],[3.784,-0.379],[2.757,2.614],[-0.129,3.854]],v:[[-30.792,51.877],[-40.61,56.66],[-50.369,53.098],[-54.521,43.475],[-50.194,33.486],[-40.584,28.777],[-30.621,32.269],[-26.677,41.964]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[1503.325,427.57],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 26",np:4,cix:2,bm:0,ix:26,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[1.309,-5.228],[1.497,-5.234],[0,6.54],[-2.988,0],[-1.121,-1.311]],o:[[-0.187,1.495],[-5.045,-3.736],[0,-6.535],[0.746,0],[1.682,2.053]],v:[[165.703,-3.458],[162.153,9.622],[154.867,-6.82],[161.594,-16.721],[165.141,-15.037]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[3.737,-3.55],[6.352,0],[0,8.965],[-0.746,2.806],[-1.685,6.351],[-4.485,4.482],[-3.734,0.746],[0,-4.295],[-7.098,-7.098],[-2.988,-1.679]],o:[[-5.043,4.671],[-9.902,0],[0,-2.617],[1.682,-5.604],[2.611,-9.154],[2.986,-2.802],[-1.866,3.736],[0,10.276],[2.243,2.243],[-2.617,5.977]],v:[[147.768,40.074],[130.579,47.171],[114.889,32.228],[116.198,23.258],[121.056,6.072],[131.704,-14.29],[141.601,-19.521],[138.803,-5.326],[149.45,19.896],[157.298,25.686]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ind:2,ty:"sh",ix:3,ks:{a:0,k:{i:[[-0.373,1.307],[-14.385,0],[1.872,-8.223],[3.922,-2.241],[9.529,0],[0,0]],o:[[4.296,-14.946],[8.782,0],[-1.119,5.229],[-4.67,2.804],[0,0],[0.187,-1.123]],v:[[-175.042,5.325],[-146.833,-19.896],[-134.315,-5.883],[-142.162,4.95],[-163.274,9.063],[-175.976,9.063]],c:true},ix:2},nm:"パス 3",mn:"ADBE Vector Shape - Group",hd:false},{ind:3,ty:"sh",ix:4,ks:{a:0,k:{i:[[3.364,2.991],[2.798,-3.362],[0,0],[0,0],[7.468,12.701],[0.746,3.925],[-3.363,3.923],[3.359,2.989],[2.616,-3.173],[0,0],[0.08,-0.094],[0,0],[1.866,0],[0,2.992],[-1.125,2.615],[-7.474,17.375],[3.364,2.239],[0,0],[0,0],[3.366,2.804],[3.171,-3.73],[0,0],[0.229,-0.273],[0,0],[2.057,0.747],[-0.373,1.871],[3.365,4.294],[6.352,0],[2.804,-1.309],[4.482,0],[6.167,-3.547],[8.969,-10.46],[0,0],[0.173,-0.253],[0,0],[2.802,0],[0.933,1.122],[-0.747,2.43],[0,0],[0,0],[0,4.483],[4.484,0],[0,0],[0,0],[4.299,1.305],[1.306,-4.112],[0,0],[11.77,-14.01],[0,0],[0.188,-0.291],[0,0],[3.177,0],[-10.835,39.606],[19.801,0],[6.912,-7.285],[5.601,0],[2.611,-3.923],[2.801,-3.175],[0,0],[0.197,-0.324],[0,0],[14.76,0],[3.366,4.671],[-1.121,5.976],[0,0],[-7.288,4.108],[-2.803,9.154],[0.746,4.112],[12.705,0],[6.726,-3.551],[8.034,-9.527],[0,0],[0.232,-0.355],[0,0],[3.176,0],[0,0],[6.164,8.219],[8.966,0],[6.54,-7.47],[8.78,0],[5.419,-5.793],[6.907,0],[2.054,-2.992],[5.231,-6.165],[0,0],[-3.363,-2.807],[-1.867,0],[-1.681,1.868],[0,0],[0,0],[-6.166,0],[-0.936,3.548],[0,0],[-12.89,0],[3.175,-10.46],[0,0],[-4.485,-1.121],[-1.494,4.856],[-2.428,8.781],[-12.33,0],[3.179,-11.019],[0,0],[0,-1.684],[-7.843,0],[-7.1,7.848],[-8.228,9.788],[-5.954,-7.998],[-18.31,0],[-8.968,4.674],[-10.465,11.958],[0,0],[-0.21,0.334],[0,0],[0,0],[-4.107,-1.311],[-0.743,0],[-1.119,3.733],[0,0],[-13.263,0],[3.365,-12.326],[0,0],[0,-2.428],[-7.844,0],[-7.1,7.848],[-9.073,10.806],[-0.059,0.066],[0,0],[0,0],[-4.109,-5.605],[-6.722,0],[-4.482,5.045],[0,0],[-0.016,0.018],[0,0],[0,0],[0.167,-0.503],[-6.915,-9.524],[-10.648,0],[-7.847,7.474],[-3.363,8.217],[-5.601,0],[-1.868,2.241],[0,0],[0,0],[0,0],[6.723,-15.318],[0,-5.604],[-3.176,-3.55],[-5.606,0],[-12.327,14.756],[0,0],[-0.016,0.019],[0,0],[-4.67,-7.473],[0,-4.295],[2.803,-2.8],[6.54,0],[1.494,1.306],[2.617,-3.553],[-3.362,-2.618],[-9.34,0],[-8.782,5.231],[-12.7,14.388],[0,0]],o:[[-3.363,-2.8],[0,0],[0,0],[-0.748,-6.164],[-2.615,-4.672],[-0.189,-1.12],[2.99,-3.363],[-2.99,-2.617],[0,0],[-0.081,0.09],[0,0],[-5.417,6.353],[-2.241,0],[0,-2.052],[6.158,-14.384],[1.679,-3.922],[0,0],[0,0],[2.803,-3.362],[-3.362,-2.986],[0,0],[-0.258,0.232],[0,0],[-3.736,0],[2.057,-7.474],[3.174,-13.265],[-3.923,-4.858],[-2.988,0],[-1.121,-3.177],[-5.793,0],[-6.353,3.549],[0,0],[-0.209,0.235],[0,0],[-3.18,3.548],[-1.681,0],[-1.121,-1.495],[0,0],[0,0],[4.484,0],[0,-4.298],[0,0],[0,0],[1.308,-4.296],[-4.295,-1.125],[0,0],[-3.363,9.9],[0,0],[-0.226,0.272],[-8.471,10.064],[-3.179,3.547],[0.935,-3.739],[7.1,-22.792],[-9.529,0],[1.306,-4.669],[-2.615,0],[-2.806,4.301],[0,0],[-0.246,0.296],[0,0],[-19.058,21.856],[-9.151,0],[-2.802,-3.737],[0,0],[12.332,0],[7.469,-4.297],[1.122,-4.296],[-1.869,-13.824],[-7.474,0],[-7.096,3.55],[0,0],[-0.287,0.324],[-8.228,9.774],[-3.176,3.547],[0,0],[2.99,-10.276],[-5.793,-7.475],[-10.278,0],[-5.231,-7.656],[-8.783,0],[0.56,-2.616],[-2.247,0],[-2.055,2.987],[-11.773,14.013],[-2.799,3.366],[1.495,1.305],[2.242,0],[0,0],[0,0],[-1.309,5.234],[3.549,0],[0,0],[7.289,-25.221],[10.465,0],[0,0],[-1.306,5.045],[5.231,1.307],[0.561,-2.057],[3.179,-11.957],[11.77,0],[0,0],[-0.935,3.553],[0,7.472],[7.847,0],[0,0],[-2.938,11.341],[4.669,6.167],[11.024,0],[9.9,-5.04],[0,0],[0.259,-0.31],[0,0],[0,0],[-1.119,4.116],[0.751,0.186],[3.553,0],[0,0],[6.728,-23.726],[11.025,0],[0,0],[-0.746,2.804],[0,7.475],[7.848,0],[0,0],[0.06,-0.063],[0,0],[0,0],[-2.055,7.283],[3.925,5.23],[10.461,0],[0,0],[0.015,-0.017],[0,0],[0,0],[-0.002,0.139],[-3.176,10.648],[5.604,7.479],[10.465,0],[5.604,-5.229],[7.098,1.866],[4.111,0],[0,0],[0,0],[0,0],[-5.796,13.823],[-1.868,4.298],[0,5.229],[3.549,3.735],[11.019,0],[0,0],[0.016,-0.018],[0,0],[1.309,2.803],[8.034,13.641],[0,3.737],[-2.055,2.055],[-5.977,0],[-3.547,-2.803],[-2.803,3.546],[3.55,2.802],[7.474,0],[7.844,-5.048],[0,0],[2.799,-3.363]],v:[[379.977,-4.391],[368.585,-3.458],[350.276,18.217],[342.054,27.557],[331.221,1.963],[322.626,-14.106],[325.427,-21.203],[324.495,-32.599],[313.47,-31.853],[284.949,2.071],[284.703,2.336],[252.943,40.074],[243.604,46.984],[238.932,42.126],[240.616,35.029],[263.034,-14.666],[260.976,-24.378],[250.328,-30.919],[252.757,-33.721],[252.194,-44.932],[240.616,-43.999],[206.979,-4.209],[206.242,-3.458],[188.682,17.47],[177.099,16.161],[181.396,0.281],[177.658,-25.126],[161.594,-32.787],[153,-30.732],[144.969,-35.961],[127.219,-31.479],[105.173,-11.303],[79.579,19.151],[79.01,19.885],[60.903,41.382],[52.308,46.984],[48.384,45.118],[47.636,38.952],[63.701,-19.896],[82.011,-19.896],[90.045,-27.93],[82.011,-35.961],[68.188,-35.961],[72.668,-52.217],[67.063,-62.117],[57.167,-56.513],[51.747,-36.896],[32.876,-8.312],[11.021,17.654],[10.407,18.503],[-8.215,40.636],[-16.997,46.613],[-5.417,4.204],[-30.076,-35.961],[-55.667,-25.502],[-63.703,-34.467],[-71.359,-29.427],[-78.273,-19.896],[-108.164,15.6],[-108.82,16.535],[-112.269,20.645],[-158.789,47.173],[-178.032,40.074],[-180.459,25.129],[-163.274,25.129],[-134.125,18.963],[-118.808,-1.4],[-118.062,-14.106],[-146.084,-35.961],[-167.57,-31.292],[-189.802,-12.049],[-215.768,18.776],[-216.539,19.799],[-234.071,40.636],[-242.852,46.613],[-231.271,4.204],[-234.445,-25.126],[-257.424,-35.961],[-283.953,-24.756],[-305.438,-35.961],[-328.044,-26.248],[-336.073,-34.467],[-342.987,-30.544],[-351.579,-18.777],[-380.729,15.783],[-379.792,27.184],[-374.562,29.049],[-368.582,26.062],[-351.956,6.445],[-364.472,51.469],[-356.625,61.744],[-348.964,55.768],[-338.32,18.03],[-306.372,-20.27],[-297.216,-0.28],[-308.054,39.885],[-302.823,49.789],[-292.359,43.623],[-281.151,2.52],[-258.547,-20.27],[-246.776,-0.094],[-258.357,41.755],[-259.481,49.977],[-244.162,63.053],[-223.422,52.777],[-195.623,19.668],[-190.92,49.787],[-158.789,63.242],[-129.643,56.324],[-100.873,31.852],[-87.051,15.413],[-86.354,14.441],[-79.953,6.82],[-92.289,51.652],[-86.685,61.558],[-84.442,61.744],[-76.783,55.768],[-65.945,17.654],[-32.878,-20.27],[-20.922,-0.094],[-32.505,41.755],[-33.625,49.601],[-18.307,63.053],[2.432,52.777],[22.98,28.299],[23.163,28.116],[39.042,9.249],[32.13,34.658],[35.493,54.835],[52.308,63.053],[73.603,51.096],[91.298,30.036],[91.347,29.986],[92.689,28.381],[100.875,18.639],[100.689,19.338],[104.987,51.652],[130.579,63.242],[158.606,51.842],[172.245,31.481],[189.429,33.718],[199.517,29.611],[215.266,10.617],[240.237,-18.962],[245.658,-15.783],[225.856,28.489],[222.117,43.81],[226.975,57.263],[241.362,63.239],[271.435,42.877],[283.157,28.917],[283.205,28.865],[309.918,-2.897],[317.393,10.182],[326.177,31.852],[321.693,42.128],[309.547,47.173],[297.031,43.063],[285.821,44.559],[287.13,55.768],[309.547,63.242],[333.089,56.7],[362.043,29.049],[380.729,6.82]],c:true},ix:2},nm:"パス 4",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[1006.165,1378.575],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 27",np:6,cix:2,bm:0,ix:27,mn:"ADBE Vector Group",hd:false},{ty:"tm",s:{a:0,k:0,ix:1},e:{a:1,k:[{i:{x:[0.282],y:[1]},o:{x:[0.333],y:[0]},t:9,s:[0]},{t:35,s:[100]}],ix:2},o:{a:0,k:0,ix:3},m:1,ix:28,nm:"パスのトリミング 1",mn:"ADBE Vector Filter - Trim",hd:false},{ty:"st",c:{a:0,k:[0,0,0,1],ix:3},o:{a:0,k:100,ix:4},w:{a:0,k:6,ix:5},lc:1,lj:1,ml:4,bm:0,nm:"線 1",mn:"ADBE Vector Graphic - Stroke",hd:false}],ip:9,op:114,st:9,bm:0},{ddd:0,ind:9,ty:4,nm:"Life is Tech ! KANSAI LOGO_1Layerアウトライン 4",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[542,540,0],ix:2},a:{a:0,k:[1003,951.373,0],ix:1},s:{a:0,k:[50,50,100],ix:6}},ao:0,shapes:[{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-128.357,-159.105],[-55.638,-159.105],[-55.638,-28.796],[-54.175,-28.796],[40.018,-159.105],[119.085,-159.105],[23.912,-32.211],[128.357,159.105],[48.804,159.105],[-18.546,24.894],[-55.638,73.696],[-55.638,159.105],[-128.357,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[165.507,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 1",np:2,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[4.225,16.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[-3.908,16.922],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-0.485,-104.443],[-2.439,-104.443],[-68.815,159.106],[-142.024,159.106],[-42.948,-159.107],[42.95,-159.107],[142.024,159.106],[65.888,159.106]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[492.009,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 2",np:2,cix:2,bm:0,ix:2,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,25.673],[-25.672,0],[0,-25.675],[25.675,0]],o:[[0,-25.675],[25.675,0],[0,25.673],[-25.672,0]],v:[[-46.485,0],[-0.001,-46.484],[46.485,0],[-0.001,46.484]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[490.399,1148.471],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 3",np:2,cix:2,bm:0,ix:3,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[2.599,20.828],[0,18.545],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-2.607,-20.172],[0,-18.867],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[-1.63,-16.917],[-2.61,-20.816],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[1.625,17.571],[2.598,20.176],[0,0],[0,0],[0,0]],v:[[-114.205,-159.105],[-40.997,-159.105],[26.354,-0.489],[53.686,69.305],[55.638,69.305],[49.295,12.688],[45.389,-46.364],[45.389,-159.105],[114.206,-159.105],[114.206,159.105],[40.997,159.105],[-26.356,0.489],[-53.684,-68.814],[-55.639,-68.814],[-49.292,-12.199],[-45.39,46.365],[-45.39,159.105],[-114.205,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[833.644,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 4",np:2,cix:2,bm:0,ix:4,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[-14.154,-6.176],[-13.995,0],[-7.649,5.538],[0,9.442],[2.272,3.585],[4.225,2.767],[6.014,2.443],[7.809,2.929],[0,0],[8.295,5.206],[6.175,7.001],[3.739,9.27],[0,11.715],[-5.694,11.549],[-10.252,8.625],[-14.323,4.882],[-17.253,0],[-18.227,-7.151],[-14.641,-13.666],[0,0],[10.737,4.392],[13.665,0],[7.642,-5.04],[0,-9.104],[-9.762,-4.879],[-15.295,-5.529],[0,0],[-12.198,-13.666],[0,-22.449],[5.525,-11.872],[10.412,-8.943],[15.288,-5.368],[19.843,0],[20.986,7.642],[17.242,15.298]],o:[[12.032,9.76],[14.155,6.184],[16.594,0],[7.641,-5.529],[0,-4.882],[-2.278,-3.576],[-4.237,-2.761],[-6.027,-2.438],[0,0],[-8.786,-3.246],[-8.299,-5.202],[-6.185,-6.992],[-3.743,-9.274],[0,-13.008],[5.693,-11.549],[10.249,-8.618],[14.312,-4.878],[19.519,0],[18.218,7.162],[0,0],[-11.066,-8.13],[-10.737,-4.391],[-13.994,0],[-7.649,5.051],[0,9.761],[9.761,4.882],[0,0],[21.145,7.812],[12.205,13.663],[0,13.345],[-5.536,11.881],[-10.415,8.955],[-15.299,5.371],[-21.476,0],[-20.989,-7.641],[0,0]],v:[[-80.773,69.793],[-41.484,93.708],[0.733,102.979],[37.093,94.682],[48.558,72.232],[45.145,59.543],[35.386,50.026],[20.012,42.216],[-0.73,34.164],[-41.728,16.594],[-67.349,3.906],[-89.071,-14.397],[-103.958,-38.799],[-109.569,-70.281],[-101.03,-107.125],[-77.111,-137.386],[-40.264,-157.642],[7.078,-164.963],[63.693,-154.225],[112.984,-122.989],[76.381,-77.6],[43.682,-96.391],[7.078,-102.979],[-25.38,-95.416],[-36.847,-74.184],[-22.207,-52.223],[15.373,-36.603],[53.931,-20.012],[103.954,12.203],[122.259,66.375],[113.963,104.199],[90.045,135.435],[51.49,156.908],[-1.219,164.962],[-64.911,153.495],[-122.259,119.085]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1175.522,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 5",np:2,cix:2,bm:0,ix:5,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[4.228,16.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[-3.906,16.922],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-0.488,-104.445],[-2.439,-104.445],[-68.815,159.105],[-142.024,159.105],[-42.949,-159.105],[42.95,-159.105],[142.024,159.105],[65.887,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1516.912,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 6",np:2,cix:2,bm:0,ix:6,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,25.673],[-25.672,0],[0,-25.675],[25.675,0]],o:[[0,-25.675],[25.675,0],[0,25.673],[-25.672,0]],v:[[-46.485,0],[-0.002,-46.484],[46.485,0],[-0.002,46.484]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1515.392,1148.471],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 7",np:2,cix:2,bm:0,ix:7,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-110.302,98.587],[-36.114,98.587],[-36.114,-98.586],[-110.302,-98.586],[-110.302,-159.106],[110.302,-159.106],[110.302,-98.586],[36.114,-98.586],[36.114,98.587],[110.302,98.587],[110.302,159.106],[-110.302,159.106]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1858.547,1035.85],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 8",np:2,cix:2,bm:0,ix:8,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[57.355,-57.356],[186.164,0],[87.328,37.703],[5.771,-3.56],[102.949,-23.11],[60.15,-1.685],[-46.317,35.985],[-10.097,12.43],[-0.672,0.864],[8.233,7.593],[38.344,80.766],[0,0],[-0.485,-1.093],[-67.267,-65.546],[47.357,-36.789],[29.182,-10.938],[-2.303,-12.892],[-26.693,-0.131],[-1.922,0],[-106.192,23.833],[-27.971,13.037],[-98.336,0],[-139.781,139.782],[-36.491,82.695]],o:[[-33.792,71.16],[-131.636,131.64],[-95.799,0],[-6.645,-2.867],[-14.291,6.832],[-85.415,19.171],[38.167,-16.665],[64.733,-50.292],[0.776,-0.736],[6.874,-8.842],[-66.186,-61.06],[0,0],[0.483,1.096],[38.354,85.675],[-18.885,21.733],[-60.335,46.873],[-24.369,9.126],[2.339,13.062],[1.869,0.008],[64.532,-0.003],[98.108,-22.023],[90.045,37.446],[197.682,0],[65.833,-65.838],[0,0]],v:[[699.185,-244.165],[561.916,-50.053],[69.092,154.083],[-206.89,97.262],[-226.629,98.701],[-438.979,173.06],[-663.949,200.583],[-525.938,121.09],[-403.097,0.952],[-400.925,-1.451],[-403.333,-30.519],[-560.752,-244.165],[-608.149,-244.165],[-606.726,-240.87],[-447.639,-13.125],[-552.385,87.042],[-716.293,175.344],[-744.317,215.657],[-703.089,244.153],[-697.418,244.164],[-429.538,215.125],[-214.721,140.767],[69.092,197.191],[592.401,-19.569],[746.62,-244.165]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[933.906,1501.123],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 9",np:2,cix:2,bm:0,ix:9,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[88.714,99.713],[0,0],[-24.312,-117.679]],o:[[-25.065,-129.23],[0,0],[80.671,91.367],[0,0]],v:[[101.674,174.406],[-71.211,-174.406],[-101.674,-143.799],[57.738,174.406]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1627.738,641.476],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 10",np:2,cix:2,bm:0,ix:10,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[-80.115,91.131],[0,0],[24.965,-128.699]],o:[[24.209,-117.189],[0,0],[-88.113,99.468],[0,0]],v:[[-57.224,173.789],[101.164,-143.269],[70.643,-173.789],[-101.164,173.789]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[377.748,642.093],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 11",np:2,cix:2,bm:0,ix:11,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[9.204,7.889],[0,0],[-7.892,9.206],[0,0],[18.406,-17.111],[-5.731,-30.75],[3.313,-3.313],[0,0],[0,0],[0,0],[-20.284,-2.097],[-22.962,22.96],[15.613,29.695]],o:[[-7.893,9.208],[0,0],[-9.21,-7.891],[0,0],[-23.555,-1.302],[-24.802,23.061],[3.42,18.34],[0,0],[0,0],[0,0],[28.21,-28.209],[18.394,1.903],[26.542,-26.545],[0,0]],v:[[50.098,-0.672],[19.013,1.722],[-19.101,-30.946],[-21.496,-62.032],[13.849,-103.272],[-52.119,-79.663],[-83.667,-0.794],[-98.235,36.539],[-108.152,46.461],[-52.96,104.574],[-46.09,97.701],[10.475,63.906],[79.251,38.962],[92.539,-50.191]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1121.367,499.693],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 12",np:2,cix:2,bm:0,ix:12,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[7.468,-7.469],[7.465,7.469],[-7.467,7.465],[-7.466,-7.469]],o:[[-7.466,7.469],[-7.467,-7.469],[7.465,-7.469],[7.468,7.465]],v:[[-29.151,56.554],[-56.193,56.554],[-56.193,29.512],[-29.151,29.512]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[0,0],[0,0],[-12.309,-12.31],[0,0],[-12.308,12.309],[0,0]],o:[[0,0],[-12.309,12.31],[0,0],[12.309,12.309],[0,0],[0,0]],v:[[30.959,-88.345],[-76.766,19.381],[-76.766,64.146],[-64.876,76.036],[-20.114,76.036],[89.075,-33.152]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[899.883,716.865],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 13",np:4,cix:2,bm:0,ix:13,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[5.032,-10.067],[0,0],[11.334,41.901],[-18.247,-21.133],[0.142,10.382],[-2.967,-13.408],[-1.317,7.85],[-10.106,-8.815]],o:[[0,0],[-28.542,15.876],[-7.55,-27.919],[5.049,5.845],[-0.156,-11.307],[2.013,9.083],[1.993,-11.905],[16.219,14.142]],v:[[57.096,15.182],[23.278,48.999],[-42.464,10.039],[-17.174,-10.326],[-4.912,-19.112],[11.083,-18.985],[28.27,-19.367],[52.586,-21.487]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[19.891,19.891],[19.894,3.979],[17.682,15.028],[-10.905,-44.975],[-43.868,28.842],[0,0]],o:[[-19.891,-19.891],[-19.89,-3.977],[0,0],[13.371,55.144],[0,0],[6.579,-13.162]],v:[[58.851,-38.511],[-0.822,-65.476],[-71.104,-91.554],[-69.114,-19.284],[29.235,62.711],[73.44,18.51]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[863.548,486.603],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 14",np:4,cix:2,bm:0,ix:14,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[-13.785,13.785],[0,0],[12.312,12.31],[0,0],[12.308,-12.307],[0,0],[-12.311,-12.309],[0,0]],o:[[0,0],[13.786,-13.785],[0,0],[-12.308,-12.309],[0,0],[-12.311,12.308],[0,0],[12.311,12.31]],v:[[128.534,128.501],[128.534,128.501],[131.684,80.584],[-69.427,-131.653],[-114.187,-131.653],[-131.685,-114.156],[-131.685,-69.396],[80.618,131.652]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1046.143,662.187],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 15",np:2,cix:2,bm:0,ix:15,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[22.87,59.992],[-69.384,-44.227],[-51.572,-59.992],[26.219,27.888],[54.92,2.479],[69.384,18.818]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[518.659,426.998],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 16",np:2,cix:2,bm:0,ix:16,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-2.63,-58.411],[-14.034,-74.906],[-65.129,-39.57],[-53.724,-23.078],[-37.879,-34.035],[18.476,47.454],[2.629,58.411],[14.036,74.906],[65.129,39.571],[53.722,23.078],[37.879,34.036],[-18.473,-47.453]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[590.918,358.591],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 17",np:2,cix:2,bm:0,ix:17,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-13.757,-39.784],[3.403,-5.724],[35.357,-21.822],[44.375,-3.911],[12.596,12.096],[39.486,65.47],[18.239,76.171],[-44.375,-48.132],[11.277,-76.171],[20.829,-57.207]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[658.075,309.299],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 18",np:2,cix:2,bm:0,ix:18,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-6.342,76.056],[-54.049,-54.696],[4.496,-76.056],[11.639,-56.479],[-25.666,-42.869],[-13,-8.15],[21.536,-20.75],[28.14,-2.65],[-6.396,9.95],[7.683,48.547],[46.838,34.264],[54.049,54.023]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[759.765,272.599],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 19",np:2,cix:2,bm:0,ix:19,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[22.943,-53.782],[19.811,-73.587],[-41.547,-63.887],[-38.415,-44.081],[-19.388,-47.087],[-3.915,50.774],[-22.945,53.783],[-19.813,73.587],[41.547,63.888],[38.416,44.081],[19.388,47.089],[3.913,-50.773]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[887.641,239.73],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 20",np:2,cix:2,bm:0,ix:20,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[7.733,0],[2.096,-0.718],[1.701,-1.572],[0.984,-2.485],[0,-3.407],[-3.54,-3.209],[-5.767,-2.883],[-3.535,-2.227],[-2.887,-3.145],[-1.836,-4.325],[0,-5.899],[2.163,-5.24],[3.598,-3.605],[4.849,-1.833],[5.372,0],[6.549,3.011],[3.932,4.588],[0,0],[-4.261,-2.093],[-4.457,0],[-3.28,3.41],[0,6.164],[3.932,3.539],[6.025,3.015],[3.343,2.232],[2.556,3.082],[1.505,4.127],[0,5.769],[-2.294,5.178],[-3.733,3.411],[-4.72,1.642],[-4.851,0],[-5.576,-2.293],[-3.805,-4.454]],o:[[-5.11,-6.158],[-2.229,0],[-2.096,0.724],[-1.707,1.574],[-0.981,2.491],[0,5.9],[3.537,3.213],[3.407,1.704],[3.54,2.23],[2.88,3.144],[1.832,4.327],[0,6.816],[-2.163,5.244],[-3.61,3.605],[-4.849,1.836],[-7.735,0],[-6.556,-3.014],[0,0],[3.015,3.672],[4.256,2.099],[4.979,0],[3.272,-3.407],[0,-6.026],[-3.93,-3.537],[-3.803,-1.836],[-3.344,-2.225],[-2.553,-3.078],[-1.509,-4.128],[0,-7.203],[2.289,-5.175],[3.736,-3.407],[4.717,-1.636],[7.076,0],[5.569,2.295],[0,0]],v:[[25.949,-42.659],[6.684,-51.899],[0.196,-50.819],[-5.504,-47.377],[-9.535,-41.284],[-11.01,-32.438],[-5.7,-18.774],[8.256,-9.631],[18.673,-3.734],[28.311,4.325],[35.385,15.531],[38.138,30.864],[34.895,48.95],[26.247,62.221],[13.564,70.378],[-1.768,73.13],[-23.196,68.611],[-38.926,57.209],[-26.147,39.907],[-15.235,48.556],[-2.163,51.704],[10.224,46.591],[15.138,32.24],[9.24,17.889],[-5.7,8.061],[-16.415,1.965],[-25.263,-5.996],[-31.356,-16.807],[-33.616,-31.652],[-30.176,-50.228],[-21.134,-63.105],[-8.452,-70.674],[5.899,-73.13],[24.87,-69.689],[38.926,-59.566]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[978.889,230.589],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 21",np:2,cix:2,bm:0,ix:21,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[9.955,-45.257],[-7.997,72.515],[-30.934,69.019],[-12.981,-48.754],[-38.826,-52.693],[-35.805,-72.515],[38.827,-61.138],[35.804,-41.319]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1121.475,236.785],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 22",np:2,cix:2,bm:0,ix:22,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-49.198,57.981],[-10.687,-75.769],[49.198,-58.528],[43.431,-38.503],[5.272,-49.49],[-4.955,-13.975],[30.371,-3.804],[25.042,14.71],[-10.285,4.54],[-21.653,44.022],[18.397,55.553],[12.576,75.769]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1202.994,258.199],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 23",np:2,cix:2,bm:0,ix:23,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[6.622,-0.5],[7.737,3.866],[4.048,6.12],[1.028,7.765],[-1.818,9.054],[-4.745,9.496],[-6.181,6.947],[-6.888,3.814],[-7.301,0.384],[-6.92,-3.457],[-4.077,-5.334],[-0.943,-6.627],[0,0],[7.62,3.803],[4.367,-0.822],[4.162,-3.045],[3.837,-5.042],[3.16,-6.332],[1.726,-6.093],[-0.062,-5.157],[-2.025,-4.014],[-4.341,-2.167],[-4.043,0.616],[-3.519,2.054],[0,0]],o:[[-6.624,0.498],[-7.032,-3.512],[-4.051,-6.123],[-1.035,-7.765],[1.811,-9.06],[4.744,-9.498],[6.18,-6.949],[6.883,-3.813],[7.296,-0.381],[7.148,3.571],[4.076,5.332],[0,0],[-1.353,-9.319],[-4.223,-2.109],[-4.365,0.825],[-4.155,3.052],[-3.84,5.04],[-3.105,6.214],[-1.726,6.1],[0.058,5.16],[2.022,4.015],[4.103,2.048],[4.042,-0.619],[0,0],[-5.742,3.284]],v:[[-10.681,70.192],[-32.224,65.145],[-48.847,50.691],[-56.459,29.857],[-55.284,4.628],[-45.451,-23.204],[-29.065,-47.871],[-9.465,-64.015],[11.807,-70.31],[33.13,-65.704],[49.972,-52.346],[57.495,-34.413],[37.979,-25.702],[24.521,-45.388],[11.639,-47.319],[-1.152,-41.513],[-13.143,-29.371],[-23.641,-12.311],[-30.888,6.153],[-33.385,23.034],[-30.26,36.793],[-20.715,46.064],[-8.493,48.212],[2.847,44.206],[7.863,64.513]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1309.212,298.27],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 24",np:2,cix:2,bm:0,ix:24,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-20.66,69.643],[13.135,17.989],[-21.744,-4.828],[-55.539,46.828],[-75.113,34.019],[1.085,-82.451],[20.658,-69.647],[-10.227,-22.431],[24.651,0.386],[55.537,-46.829],[75.113,-34.022],[-1.083,82.451]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1401.918,349.723],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 25",np:2,cix:2,bm:0,ix:25,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0]],v:[[-26.722,11.584],[38.198,-56.898],[54.604,-41.343],[-10.315,27.136]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[2.614,-2.755],[3.748,-0.24],[2.759,2.614],[-0.083,3.708],[-2.797,2.948],[-3.796,0.383],[-2.852,-2.707],[0.128,-3.847]],o:[[-2.796,2.953],[-3.746,0.238],[-2.851,-2.708],[0.089,-3.713],[2.614,-2.758],[3.784,-0.379],[2.757,2.614],[-0.129,3.854]],v:[[-30.792,51.877],[-40.61,56.66],[-50.369,53.098],[-54.521,43.475],[-50.194,33.486],[-40.584,28.777],[-30.621,32.269],[-26.677,41.964]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[1503.325,427.57],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 26",np:4,cix:2,bm:0,ix:26,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[1.309,-5.228],[1.497,-5.234],[0,6.54],[-2.988,0],[-1.121,-1.311]],o:[[-0.187,1.495],[-5.045,-3.736],[0,-6.535],[0.746,0],[1.682,2.053]],v:[[165.703,-3.458],[162.153,9.622],[154.867,-6.82],[161.594,-16.721],[165.141,-15.037]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[3.737,-3.55],[6.352,0],[0,8.965],[-0.746,2.806],[-1.685,6.351],[-4.485,4.482],[-3.734,0.746],[0,-4.295],[-7.098,-7.098],[-2.988,-1.679]],o:[[-5.043,4.671],[-9.902,0],[0,-2.617],[1.682,-5.604],[2.611,-9.154],[2.986,-2.802],[-1.866,3.736],[0,10.276],[2.243,2.243],[-2.617,5.977]],v:[[147.768,40.074],[130.579,47.171],[114.889,32.228],[116.198,23.258],[121.056,6.072],[131.704,-14.29],[141.601,-19.521],[138.803,-5.326],[149.45,19.896],[157.298,25.686]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ind:2,ty:"sh",ix:3,ks:{a:0,k:{i:[[-0.373,1.307],[-14.385,0],[1.872,-8.223],[3.922,-2.241],[9.529,0],[0,0]],o:[[4.296,-14.946],[8.782,0],[-1.119,5.229],[-4.67,2.804],[0,0],[0.187,-1.123]],v:[[-175.042,5.325],[-146.833,-19.896],[-134.315,-5.883],[-142.162,4.95],[-163.274,9.063],[-175.976,9.063]],c:true},ix:2},nm:"パス 3",mn:"ADBE Vector Shape - Group",hd:false},{ind:3,ty:"sh",ix:4,ks:{a:0,k:{i:[[3.364,2.991],[2.798,-3.362],[0,0],[0,0],[7.468,12.701],[0.746,3.925],[-3.363,3.923],[3.359,2.989],[2.616,-3.173],[0,0],[0.08,-0.094],[0,0],[1.866,0],[0,2.992],[-1.125,2.615],[-7.474,17.375],[3.364,2.239],[0,0],[0,0],[3.366,2.804],[3.171,-3.73],[0,0],[0.229,-0.273],[0,0],[2.057,0.747],[-0.373,1.871],[3.365,4.294],[6.352,0],[2.804,-1.309],[4.482,0],[6.167,-3.547],[8.969,-10.46],[0,0],[0.173,-0.253],[0,0],[2.802,0],[0.933,1.122],[-0.747,2.43],[0,0],[0,0],[0,4.483],[4.484,0],[0,0],[0,0],[4.299,1.305],[1.306,-4.112],[0,0],[11.77,-14.01],[0,0],[0.188,-0.291],[0,0],[3.177,0],[-10.835,39.606],[19.801,0],[6.912,-7.285],[5.601,0],[2.611,-3.923],[2.801,-3.175],[0,0],[0.197,-0.324],[0,0],[14.76,0],[3.366,4.671],[-1.121,5.976],[0,0],[-7.288,4.108],[-2.803,9.154],[0.746,4.112],[12.705,0],[6.726,-3.551],[8.034,-9.527],[0,0],[0.232,-0.355],[0,0],[3.176,0],[0,0],[6.164,8.219],[8.966,0],[6.54,-7.47],[8.78,0],[5.419,-5.793],[6.907,0],[2.054,-2.992],[5.231,-6.165],[0,0],[-3.363,-2.807],[-1.867,0],[-1.681,1.868],[0,0],[0,0],[-6.166,0],[-0.936,3.548],[0,0],[-12.89,0],[3.175,-10.46],[0,0],[-4.485,-1.121],[-1.494,4.856],[-2.428,8.781],[-12.33,0],[3.179,-11.019],[0,0],[0,-1.684],[-7.843,0],[-7.1,7.848],[-8.228,9.788],[-5.954,-7.998],[-18.31,0],[-8.968,4.674],[-10.465,11.958],[0,0],[-0.21,0.334],[0,0],[0,0],[-4.107,-1.311],[-0.743,0],[-1.119,3.733],[0,0],[-13.263,0],[3.365,-12.326],[0,0],[0,-2.428],[-7.844,0],[-7.1,7.848],[-9.073,10.806],[-0.059,0.066],[0,0],[0,0],[-4.109,-5.605],[-6.722,0],[-4.482,5.045],[0,0],[-0.016,0.018],[0,0],[0,0],[0.167,-0.503],[-6.915,-9.524],[-10.648,0],[-7.847,7.474],[-3.363,8.217],[-5.601,0],[-1.868,2.241],[0,0],[0,0],[0,0],[6.723,-15.318],[0,-5.604],[-3.176,-3.55],[-5.606,0],[-12.327,14.756],[0,0],[-0.016,0.019],[0,0],[-4.67,-7.473],[0,-4.295],[2.803,-2.8],[6.54,0],[1.494,1.306],[2.617,-3.553],[-3.362,-2.618],[-9.34,0],[-8.782,5.231],[-12.7,14.388],[0,0]],o:[[-3.363,-2.8],[0,0],[0,0],[-0.748,-6.164],[-2.615,-4.672],[-0.189,-1.12],[2.99,-3.363],[-2.99,-2.617],[0,0],[-0.081,0.09],[0,0],[-5.417,6.353],[-2.241,0],[0,-2.052],[6.158,-14.384],[1.679,-3.922],[0,0],[0,0],[2.803,-3.362],[-3.362,-2.986],[0,0],[-0.258,0.232],[0,0],[-3.736,0],[2.057,-7.474],[3.174,-13.265],[-3.923,-4.858],[-2.988,0],[-1.121,-3.177],[-5.793,0],[-6.353,3.549],[0,0],[-0.209,0.235],[0,0],[-3.18,3.548],[-1.681,0],[-1.121,-1.495],[0,0],[0,0],[4.484,0],[0,-4.298],[0,0],[0,0],[1.308,-4.296],[-4.295,-1.125],[0,0],[-3.363,9.9],[0,0],[-0.226,0.272],[-8.471,10.064],[-3.179,3.547],[0.935,-3.739],[7.1,-22.792],[-9.529,0],[1.306,-4.669],[-2.615,0],[-2.806,4.301],[0,0],[-0.246,0.296],[0,0],[-19.058,21.856],[-9.151,0],[-2.802,-3.737],[0,0],[12.332,0],[7.469,-4.297],[1.122,-4.296],[-1.869,-13.824],[-7.474,0],[-7.096,3.55],[0,0],[-0.287,0.324],[-8.228,9.774],[-3.176,3.547],[0,0],[2.99,-10.276],[-5.793,-7.475],[-10.278,0],[-5.231,-7.656],[-8.783,0],[0.56,-2.616],[-2.247,0],[-2.055,2.987],[-11.773,14.013],[-2.799,3.366],[1.495,1.305],[2.242,0],[0,0],[0,0],[-1.309,5.234],[3.549,0],[0,0],[7.289,-25.221],[10.465,0],[0,0],[-1.306,5.045],[5.231,1.307],[0.561,-2.057],[3.179,-11.957],[11.77,0],[0,0],[-0.935,3.553],[0,7.472],[7.847,0],[0,0],[-2.938,11.341],[4.669,6.167],[11.024,0],[9.9,-5.04],[0,0],[0.259,-0.31],[0,0],[0,0],[-1.119,4.116],[0.751,0.186],[3.553,0],[0,0],[6.728,-23.726],[11.025,0],[0,0],[-0.746,2.804],[0,7.475],[7.848,0],[0,0],[0.06,-0.063],[0,0],[0,0],[-2.055,7.283],[3.925,5.23],[10.461,0],[0,0],[0.015,-0.017],[0,0],[0,0],[-0.002,0.139],[-3.176,10.648],[5.604,7.479],[10.465,0],[5.604,-5.229],[7.098,1.866],[4.111,0],[0,0],[0,0],[0,0],[-5.796,13.823],[-1.868,4.298],[0,5.229],[3.549,3.735],[11.019,0],[0,0],[0.016,-0.018],[0,0],[1.309,2.803],[8.034,13.641],[0,3.737],[-2.055,2.055],[-5.977,0],[-3.547,-2.803],[-2.803,3.546],[3.55,2.802],[7.474,0],[7.844,-5.048],[0,0],[2.799,-3.363]],v:[[379.977,-4.391],[368.585,-3.458],[350.276,18.217],[342.054,27.557],[331.221,1.963],[322.626,-14.106],[325.427,-21.203],[324.495,-32.599],[313.47,-31.853],[284.949,2.071],[284.703,2.336],[252.943,40.074],[243.604,46.984],[238.932,42.126],[240.616,35.029],[263.034,-14.666],[260.976,-24.378],[250.328,-30.919],[252.757,-33.721],[252.194,-44.932],[240.616,-43.999],[206.979,-4.209],[206.242,-3.458],[188.682,17.47],[177.099,16.161],[181.396,0.281],[177.658,-25.126],[161.594,-32.787],[153,-30.732],[144.969,-35.961],[127.219,-31.479],[105.173,-11.303],[79.579,19.151],[79.01,19.885],[60.903,41.382],[52.308,46.984],[48.384,45.118],[47.636,38.952],[63.701,-19.896],[82.011,-19.896],[90.045,-27.93],[82.011,-35.961],[68.188,-35.961],[72.668,-52.217],[67.063,-62.117],[57.167,-56.513],[51.747,-36.896],[32.876,-8.312],[11.021,17.654],[10.407,18.503],[-8.215,40.636],[-16.997,46.613],[-5.417,4.204],[-30.076,-35.961],[-55.667,-25.502],[-63.703,-34.467],[-71.359,-29.427],[-78.273,-19.896],[-108.164,15.6],[-108.82,16.535],[-112.269,20.645],[-158.789,47.173],[-178.032,40.074],[-180.459,25.129],[-163.274,25.129],[-134.125,18.963],[-118.808,-1.4],[-118.062,-14.106],[-146.084,-35.961],[-167.57,-31.292],[-189.802,-12.049],[-215.768,18.776],[-216.539,19.799],[-234.071,40.636],[-242.852,46.613],[-231.271,4.204],[-234.445,-25.126],[-257.424,-35.961],[-283.953,-24.756],[-305.438,-35.961],[-328.044,-26.248],[-336.073,-34.467],[-342.987,-30.544],[-351.579,-18.777],[-380.729,15.783],[-379.792,27.184],[-374.562,29.049],[-368.582,26.062],[-351.956,6.445],[-364.472,51.469],[-356.625,61.744],[-348.964,55.768],[-338.32,18.03],[-306.372,-20.27],[-297.216,-0.28],[-308.054,39.885],[-302.823,49.789],[-292.359,43.623],[-281.151,2.52],[-258.547,-20.27],[-246.776,-0.094],[-258.357,41.755],[-259.481,49.977],[-244.162,63.053],[-223.422,52.777],[-195.623,19.668],[-190.92,49.787],[-158.789,63.242],[-129.643,56.324],[-100.873,31.852],[-87.051,15.413],[-86.354,14.441],[-79.953,6.82],[-92.289,51.652],[-86.685,61.558],[-84.442,61.744],[-76.783,55.768],[-65.945,17.654],[-32.878,-20.27],[-20.922,-0.094],[-32.505,41.755],[-33.625,49.601],[-18.307,63.053],[2.432,52.777],[22.98,28.299],[23.163,28.116],[39.042,9.249],[32.13,34.658],[35.493,54.835],[52.308,63.053],[73.603,51.096],[91.298,30.036],[91.347,29.986],[92.689,28.381],[100.875,18.639],[100.689,19.338],[104.987,51.652],[130.579,63.242],[158.606,51.842],[172.245,31.481],[189.429,33.718],[199.517,29.611],[215.266,10.617],[240.237,-18.962],[245.658,-15.783],[225.856,28.489],[222.117,43.81],[226.975,57.263],[241.362,63.239],[271.435,42.877],[283.157,28.917],[283.205,28.865],[309.918,-2.897],[317.393,10.182],[326.177,31.852],[321.693,42.128],[309.547,47.173],[297.031,43.063],[285.821,44.559],[287.13,55.768],[309.547,63.242],[333.089,56.7],[362.043,29.049],[380.729,6.82]],c:true},ix:2},nm:"パス 4",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[1006.165,1378.575],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 27",np:6,cix:2,bm:0,ix:27,mn:"ADBE Vector Group",hd:false},{ty:"tm",s:{a:0,k:0,ix:1},e:{a:1,k:[{i:{x:[0.282],y:[1]},o:{x:[0.333],y:[0]},t:6,s:[0]},{t:32,s:[100]}],ix:2},o:{a:0,k:0,ix:3},m:1,ix:28,nm:"パスのトリミング 1",mn:"ADBE Vector Filter - Trim",hd:false},{ty:"st",c:{a:0,k:[0.901960784314,0.235294117647,0.207843137255,1],ix:3},o:{a:0,k:100,ix:4},w:{a:0,k:6,ix:5},lc:1,lj:1,ml:4,bm:0,nm:"線 1",mn:"ADBE Vector Graphic - Stroke",hd:false}],ip:6,op:32,st:6,bm:0},{ddd:0,ind:10,ty:4,nm:"Life is Tech ! KANSAI LOGO_1Layerアウトライン 3",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[542,540,0],ix:2},a:{a:0,k:[1003,951.373,0],ix:1},s:{a:0,k:[50,50,100],ix:6}},ao:0,shapes:[{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-128.357,-159.105],[-55.638,-159.105],[-55.638,-28.796],[-54.175,-28.796],[40.018,-159.105],[119.085,-159.105],[23.912,-32.211],[128.357,159.105],[48.804,159.105],[-18.546,24.894],[-55.638,73.696],[-55.638,159.105],[-128.357,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[165.507,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 1",np:2,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[4.225,16.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[-3.908,16.922],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-0.485,-104.443],[-2.439,-104.443],[-68.815,159.106],[-142.024,159.106],[-42.948,-159.107],[42.95,-159.107],[142.024,159.106],[65.888,159.106]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[492.009,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 2",np:2,cix:2,bm:0,ix:2,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,25.673],[-25.672,0],[0,-25.675],[25.675,0]],o:[[0,-25.675],[25.675,0],[0,25.673],[-25.672,0]],v:[[-46.485,0],[-0.001,-46.484],[46.485,0],[-0.001,46.484]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[490.399,1148.471],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 3",np:2,cix:2,bm:0,ix:3,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[2.599,20.828],[0,18.545],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-2.607,-20.172],[0,-18.867],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[-1.63,-16.917],[-2.61,-20.816],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[1.625,17.571],[2.598,20.176],[0,0],[0,0],[0,0]],v:[[-114.205,-159.105],[-40.997,-159.105],[26.354,-0.489],[53.686,69.305],[55.638,69.305],[49.295,12.688],[45.389,-46.364],[45.389,-159.105],[114.206,-159.105],[114.206,159.105],[40.997,159.105],[-26.356,0.489],[-53.684,-68.814],[-55.639,-68.814],[-49.292,-12.199],[-45.39,46.365],[-45.39,159.105],[-114.205,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[833.644,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 4",np:2,cix:2,bm:0,ix:4,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[-14.154,-6.176],[-13.995,0],[-7.649,5.538],[0,9.442],[2.272,3.585],[4.225,2.767],[6.014,2.443],[7.809,2.929],[0,0],[8.295,5.206],[6.175,7.001],[3.739,9.27],[0,11.715],[-5.694,11.549],[-10.252,8.625],[-14.323,4.882],[-17.253,0],[-18.227,-7.151],[-14.641,-13.666],[0,0],[10.737,4.392],[13.665,0],[7.642,-5.04],[0,-9.104],[-9.762,-4.879],[-15.295,-5.529],[0,0],[-12.198,-13.666],[0,-22.449],[5.525,-11.872],[10.412,-8.943],[15.288,-5.368],[19.843,0],[20.986,7.642],[17.242,15.298]],o:[[12.032,9.76],[14.155,6.184],[16.594,0],[7.641,-5.529],[0,-4.882],[-2.278,-3.576],[-4.237,-2.761],[-6.027,-2.438],[0,0],[-8.786,-3.246],[-8.299,-5.202],[-6.185,-6.992],[-3.743,-9.274],[0,-13.008],[5.693,-11.549],[10.249,-8.618],[14.312,-4.878],[19.519,0],[18.218,7.162],[0,0],[-11.066,-8.13],[-10.737,-4.391],[-13.994,0],[-7.649,5.051],[0,9.761],[9.761,4.882],[0,0],[21.145,7.812],[12.205,13.663],[0,13.345],[-5.536,11.881],[-10.415,8.955],[-15.299,5.371],[-21.476,0],[-20.989,-7.641],[0,0]],v:[[-80.773,69.793],[-41.484,93.708],[0.733,102.979],[37.093,94.682],[48.558,72.232],[45.145,59.543],[35.386,50.026],[20.012,42.216],[-0.73,34.164],[-41.728,16.594],[-67.349,3.906],[-89.071,-14.397],[-103.958,-38.799],[-109.569,-70.281],[-101.03,-107.125],[-77.111,-137.386],[-40.264,-157.642],[7.078,-164.963],[63.693,-154.225],[112.984,-122.989],[76.381,-77.6],[43.682,-96.391],[7.078,-102.979],[-25.38,-95.416],[-36.847,-74.184],[-22.207,-52.223],[15.373,-36.603],[53.931,-20.012],[103.954,12.203],[122.259,66.375],[113.963,104.199],[90.045,135.435],[51.49,156.908],[-1.219,164.962],[-64.911,153.495],[-122.259,119.085]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1175.522,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 5",np:2,cix:2,bm:0,ix:5,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[4.228,16.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[-3.906,16.922],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-0.488,-104.445],[-2.439,-104.445],[-68.815,159.105],[-142.024,159.105],[-42.949,-159.105],[42.95,-159.105],[142.024,159.105],[65.887,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1516.912,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 6",np:2,cix:2,bm:0,ix:6,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,25.673],[-25.672,0],[0,-25.675],[25.675,0]],o:[[0,-25.675],[25.675,0],[0,25.673],[-25.672,0]],v:[[-46.485,0],[-0.002,-46.484],[46.485,0],[-0.002,46.484]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1515.392,1148.471],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 7",np:2,cix:2,bm:0,ix:7,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-110.302,98.587],[-36.114,98.587],[-36.114,-98.586],[-110.302,-98.586],[-110.302,-159.106],[110.302,-159.106],[110.302,-98.586],[36.114,-98.586],[36.114,98.587],[110.302,98.587],[110.302,159.106],[-110.302,159.106]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1858.547,1035.85],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 8",np:2,cix:2,bm:0,ix:8,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[57.355,-57.356],[186.164,0],[87.328,37.703],[5.771,-3.56],[102.949,-23.11],[60.15,-1.685],[-46.317,35.985],[-10.097,12.43],[-0.672,0.864],[8.233,7.593],[38.344,80.766],[0,0],[-0.485,-1.093],[-67.267,-65.546],[47.357,-36.789],[29.182,-10.938],[-2.303,-12.892],[-26.693,-0.131],[-1.922,0],[-106.192,23.833],[-27.971,13.037],[-98.336,0],[-139.781,139.782],[-36.491,82.695]],o:[[-33.792,71.16],[-131.636,131.64],[-95.799,0],[-6.645,-2.867],[-14.291,6.832],[-85.415,19.171],[38.167,-16.665],[64.733,-50.292],[0.776,-0.736],[6.874,-8.842],[-66.186,-61.06],[0,0],[0.483,1.096],[38.354,85.675],[-18.885,21.733],[-60.335,46.873],[-24.369,9.126],[2.339,13.062],[1.869,0.008],[64.532,-0.003],[98.108,-22.023],[90.045,37.446],[197.682,0],[65.833,-65.838],[0,0]],v:[[699.185,-244.165],[561.916,-50.053],[69.092,154.083],[-206.89,97.262],[-226.629,98.701],[-438.979,173.06],[-663.949,200.583],[-525.938,121.09],[-403.097,0.952],[-400.925,-1.451],[-403.333,-30.519],[-560.752,-244.165],[-608.149,-244.165],[-606.726,-240.87],[-447.639,-13.125],[-552.385,87.042],[-716.293,175.344],[-744.317,215.657],[-703.089,244.153],[-697.418,244.164],[-429.538,215.125],[-214.721,140.767],[69.092,197.191],[592.401,-19.569],[746.62,-244.165]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[933.906,1501.123],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 9",np:2,cix:2,bm:0,ix:9,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[88.714,99.713],[0,0],[-24.312,-117.679]],o:[[-25.065,-129.23],[0,0],[80.671,91.367],[0,0]],v:[[101.674,174.406],[-71.211,-174.406],[-101.674,-143.799],[57.738,174.406]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1627.738,641.476],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 10",np:2,cix:2,bm:0,ix:10,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[-80.115,91.131],[0,0],[24.965,-128.699]],o:[[24.209,-117.189],[0,0],[-88.113,99.468],[0,0]],v:[[-57.224,173.789],[101.164,-143.269],[70.643,-173.789],[-101.164,173.789]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[377.748,642.093],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 11",np:2,cix:2,bm:0,ix:11,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[9.204,7.889],[0,0],[-7.892,9.206],[0,0],[18.406,-17.111],[-5.731,-30.75],[3.313,-3.313],[0,0],[0,0],[0,0],[-20.284,-2.097],[-22.962,22.96],[15.613,29.695]],o:[[-7.893,9.208],[0,0],[-9.21,-7.891],[0,0],[-23.555,-1.302],[-24.802,23.061],[3.42,18.34],[0,0],[0,0],[0,0],[28.21,-28.209],[18.394,1.903],[26.542,-26.545],[0,0]],v:[[50.098,-0.672],[19.013,1.722],[-19.101,-30.946],[-21.496,-62.032],[13.849,-103.272],[-52.119,-79.663],[-83.667,-0.794],[-98.235,36.539],[-108.152,46.461],[-52.96,104.574],[-46.09,97.701],[10.475,63.906],[79.251,38.962],[92.539,-50.191]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1121.367,499.693],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 12",np:2,cix:2,bm:0,ix:12,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[7.468,-7.469],[7.465,7.469],[-7.467,7.465],[-7.466,-7.469]],o:[[-7.466,7.469],[-7.467,-7.469],[7.465,-7.469],[7.468,7.465]],v:[[-29.151,56.554],[-56.193,56.554],[-56.193,29.512],[-29.151,29.512]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[0,0],[0,0],[-12.309,-12.31],[0,0],[-12.308,12.309],[0,0]],o:[[0,0],[-12.309,12.31],[0,0],[12.309,12.309],[0,0],[0,0]],v:[[30.959,-88.345],[-76.766,19.381],[-76.766,64.146],[-64.876,76.036],[-20.114,76.036],[89.075,-33.152]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[899.883,716.865],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 13",np:4,cix:2,bm:0,ix:13,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[5.032,-10.067],[0,0],[11.334,41.901],[-18.247,-21.133],[0.142,10.382],[-2.967,-13.408],[-1.317,7.85],[-10.106,-8.815]],o:[[0,0],[-28.542,15.876],[-7.55,-27.919],[5.049,5.845],[-0.156,-11.307],[2.013,9.083],[1.993,-11.905],[16.219,14.142]],v:[[57.096,15.182],[23.278,48.999],[-42.464,10.039],[-17.174,-10.326],[-4.912,-19.112],[11.083,-18.985],[28.27,-19.367],[52.586,-21.487]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[19.891,19.891],[19.894,3.979],[17.682,15.028],[-10.905,-44.975],[-43.868,28.842],[0,0]],o:[[-19.891,-19.891],[-19.89,-3.977],[0,0],[13.371,55.144],[0,0],[6.579,-13.162]],v:[[58.851,-38.511],[-0.822,-65.476],[-71.104,-91.554],[-69.114,-19.284],[29.235,62.711],[73.44,18.51]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[863.548,486.603],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 14",np:4,cix:2,bm:0,ix:14,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[-13.785,13.785],[0,0],[12.312,12.31],[0,0],[12.308,-12.307],[0,0],[-12.311,-12.309],[0,0]],o:[[0,0],[13.786,-13.785],[0,0],[-12.308,-12.309],[0,0],[-12.311,12.308],[0,0],[12.311,12.31]],v:[[128.534,128.501],[128.534,128.501],[131.684,80.584],[-69.427,-131.653],[-114.187,-131.653],[-131.685,-114.156],[-131.685,-69.396],[80.618,131.652]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1046.143,662.187],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 15",np:2,cix:2,bm:0,ix:15,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[22.87,59.992],[-69.384,-44.227],[-51.572,-59.992],[26.219,27.888],[54.92,2.479],[69.384,18.818]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[518.659,426.998],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 16",np:2,cix:2,bm:0,ix:16,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-2.63,-58.411],[-14.034,-74.906],[-65.129,-39.57],[-53.724,-23.078],[-37.879,-34.035],[18.476,47.454],[2.629,58.411],[14.036,74.906],[65.129,39.571],[53.722,23.078],[37.879,34.036],[-18.473,-47.453]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[590.918,358.591],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 17",np:2,cix:2,bm:0,ix:17,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-13.757,-39.784],[3.403,-5.724],[35.357,-21.822],[44.375,-3.911],[12.596,12.096],[39.486,65.47],[18.239,76.171],[-44.375,-48.132],[11.277,-76.171],[20.829,-57.207]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[658.075,309.299],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 18",np:2,cix:2,bm:0,ix:18,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-6.342,76.056],[-54.049,-54.696],[4.496,-76.056],[11.639,-56.479],[-25.666,-42.869],[-13,-8.15],[21.536,-20.75],[28.14,-2.65],[-6.396,9.95],[7.683,48.547],[46.838,34.264],[54.049,54.023]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[759.765,272.599],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 19",np:2,cix:2,bm:0,ix:19,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[22.943,-53.782],[19.811,-73.587],[-41.547,-63.887],[-38.415,-44.081],[-19.388,-47.087],[-3.915,50.774],[-22.945,53.783],[-19.813,73.587],[41.547,63.888],[38.416,44.081],[19.388,47.089],[3.913,-50.773]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[887.641,239.73],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 20",np:2,cix:2,bm:0,ix:20,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[7.733,0],[2.096,-0.718],[1.701,-1.572],[0.984,-2.485],[0,-3.407],[-3.54,-3.209],[-5.767,-2.883],[-3.535,-2.227],[-2.887,-3.145],[-1.836,-4.325],[0,-5.899],[2.163,-5.24],[3.598,-3.605],[4.849,-1.833],[5.372,0],[6.549,3.011],[3.932,4.588],[0,0],[-4.261,-2.093],[-4.457,0],[-3.28,3.41],[0,6.164],[3.932,3.539],[6.025,3.015],[3.343,2.232],[2.556,3.082],[1.505,4.127],[0,5.769],[-2.294,5.178],[-3.733,3.411],[-4.72,1.642],[-4.851,0],[-5.576,-2.293],[-3.805,-4.454]],o:[[-5.11,-6.158],[-2.229,0],[-2.096,0.724],[-1.707,1.574],[-0.981,2.491],[0,5.9],[3.537,3.213],[3.407,1.704],[3.54,2.23],[2.88,3.144],[1.832,4.327],[0,6.816],[-2.163,5.244],[-3.61,3.605],[-4.849,1.836],[-7.735,0],[-6.556,-3.014],[0,0],[3.015,3.672],[4.256,2.099],[4.979,0],[3.272,-3.407],[0,-6.026],[-3.93,-3.537],[-3.803,-1.836],[-3.344,-2.225],[-2.553,-3.078],[-1.509,-4.128],[0,-7.203],[2.289,-5.175],[3.736,-3.407],[4.717,-1.636],[7.076,0],[5.569,2.295],[0,0]],v:[[25.949,-42.659],[6.684,-51.899],[0.196,-50.819],[-5.504,-47.377],[-9.535,-41.284],[-11.01,-32.438],[-5.7,-18.774],[8.256,-9.631],[18.673,-3.734],[28.311,4.325],[35.385,15.531],[38.138,30.864],[34.895,48.95],[26.247,62.221],[13.564,70.378],[-1.768,73.13],[-23.196,68.611],[-38.926,57.209],[-26.147,39.907],[-15.235,48.556],[-2.163,51.704],[10.224,46.591],[15.138,32.24],[9.24,17.889],[-5.7,8.061],[-16.415,1.965],[-25.263,-5.996],[-31.356,-16.807],[-33.616,-31.652],[-30.176,-50.228],[-21.134,-63.105],[-8.452,-70.674],[5.899,-73.13],[24.87,-69.689],[38.926,-59.566]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[978.889,230.589],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 21",np:2,cix:2,bm:0,ix:21,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[9.955,-45.257],[-7.997,72.515],[-30.934,69.019],[-12.981,-48.754],[-38.826,-52.693],[-35.805,-72.515],[38.827,-61.138],[35.804,-41.319]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1121.475,236.785],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 22",np:2,cix:2,bm:0,ix:22,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-49.198,57.981],[-10.687,-75.769],[49.198,-58.528],[43.431,-38.503],[5.272,-49.49],[-4.955,-13.975],[30.371,-3.804],[25.042,14.71],[-10.285,4.54],[-21.653,44.022],[18.397,55.553],[12.576,75.769]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1202.994,258.199],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 23",np:2,cix:2,bm:0,ix:23,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[6.622,-0.5],[7.737,3.866],[4.048,6.12],[1.028,7.765],[-1.818,9.054],[-4.745,9.496],[-6.181,6.947],[-6.888,3.814],[-7.301,0.384],[-6.92,-3.457],[-4.077,-5.334],[-0.943,-6.627],[0,0],[7.62,3.803],[4.367,-0.822],[4.162,-3.045],[3.837,-5.042],[3.16,-6.332],[1.726,-6.093],[-0.062,-5.157],[-2.025,-4.014],[-4.341,-2.167],[-4.043,0.616],[-3.519,2.054],[0,0]],o:[[-6.624,0.498],[-7.032,-3.512],[-4.051,-6.123],[-1.035,-7.765],[1.811,-9.06],[4.744,-9.498],[6.18,-6.949],[6.883,-3.813],[7.296,-0.381],[7.148,3.571],[4.076,5.332],[0,0],[-1.353,-9.319],[-4.223,-2.109],[-4.365,0.825],[-4.155,3.052],[-3.84,5.04],[-3.105,6.214],[-1.726,6.1],[0.058,5.16],[2.022,4.015],[4.103,2.048],[4.042,-0.619],[0,0],[-5.742,3.284]],v:[[-10.681,70.192],[-32.224,65.145],[-48.847,50.691],[-56.459,29.857],[-55.284,4.628],[-45.451,-23.204],[-29.065,-47.871],[-9.465,-64.015],[11.807,-70.31],[33.13,-65.704],[49.972,-52.346],[57.495,-34.413],[37.979,-25.702],[24.521,-45.388],[11.639,-47.319],[-1.152,-41.513],[-13.143,-29.371],[-23.641,-12.311],[-30.888,6.153],[-33.385,23.034],[-30.26,36.793],[-20.715,46.064],[-8.493,48.212],[2.847,44.206],[7.863,64.513]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1309.212,298.27],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 24",np:2,cix:2,bm:0,ix:24,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-20.66,69.643],[13.135,17.989],[-21.744,-4.828],[-55.539,46.828],[-75.113,34.019],[1.085,-82.451],[20.658,-69.647],[-10.227,-22.431],[24.651,0.386],[55.537,-46.829],[75.113,-34.022],[-1.083,82.451]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1401.918,349.723],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 25",np:2,cix:2,bm:0,ix:25,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0]],v:[[-26.722,11.584],[38.198,-56.898],[54.604,-41.343],[-10.315,27.136]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[2.614,-2.755],[3.748,-0.24],[2.759,2.614],[-0.083,3.708],[-2.797,2.948],[-3.796,0.383],[-2.852,-2.707],[0.128,-3.847]],o:[[-2.796,2.953],[-3.746,0.238],[-2.851,-2.708],[0.089,-3.713],[2.614,-2.758],[3.784,-0.379],[2.757,2.614],[-0.129,3.854]],v:[[-30.792,51.877],[-40.61,56.66],[-50.369,53.098],[-54.521,43.475],[-50.194,33.486],[-40.584,28.777],[-30.621,32.269],[-26.677,41.964]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[1503.325,427.57],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 26",np:4,cix:2,bm:0,ix:26,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[1.309,-5.228],[1.497,-5.234],[0,6.54],[-2.988,0],[-1.121,-1.311]],o:[[-0.187,1.495],[-5.045,-3.736],[0,-6.535],[0.746,0],[1.682,2.053]],v:[[165.703,-3.458],[162.153,9.622],[154.867,-6.82],[161.594,-16.721],[165.141,-15.037]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[3.737,-3.55],[6.352,0],[0,8.965],[-0.746,2.806],[-1.685,6.351],[-4.485,4.482],[-3.734,0.746],[0,-4.295],[-7.098,-7.098],[-2.988,-1.679]],o:[[-5.043,4.671],[-9.902,0],[0,-2.617],[1.682,-5.604],[2.611,-9.154],[2.986,-2.802],[-1.866,3.736],[0,10.276],[2.243,2.243],[-2.617,5.977]],v:[[147.768,40.074],[130.579,47.171],[114.889,32.228],[116.198,23.258],[121.056,6.072],[131.704,-14.29],[141.601,-19.521],[138.803,-5.326],[149.45,19.896],[157.298,25.686]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ind:2,ty:"sh",ix:3,ks:{a:0,k:{i:[[-0.373,1.307],[-14.385,0],[1.872,-8.223],[3.922,-2.241],[9.529,0],[0,0]],o:[[4.296,-14.946],[8.782,0],[-1.119,5.229],[-4.67,2.804],[0,0],[0.187,-1.123]],v:[[-175.042,5.325],[-146.833,-19.896],[-134.315,-5.883],[-142.162,4.95],[-163.274,9.063],[-175.976,9.063]],c:true},ix:2},nm:"パス 3",mn:"ADBE Vector Shape - Group",hd:false},{ind:3,ty:"sh",ix:4,ks:{a:0,k:{i:[[3.364,2.991],[2.798,-3.362],[0,0],[0,0],[7.468,12.701],[0.746,3.925],[-3.363,3.923],[3.359,2.989],[2.616,-3.173],[0,0],[0.08,-0.094],[0,0],[1.866,0],[0,2.992],[-1.125,2.615],[-7.474,17.375],[3.364,2.239],[0,0],[0,0],[3.366,2.804],[3.171,-3.73],[0,0],[0.229,-0.273],[0,0],[2.057,0.747],[-0.373,1.871],[3.365,4.294],[6.352,0],[2.804,-1.309],[4.482,0],[6.167,-3.547],[8.969,-10.46],[0,0],[0.173,-0.253],[0,0],[2.802,0],[0.933,1.122],[-0.747,2.43],[0,0],[0,0],[0,4.483],[4.484,0],[0,0],[0,0],[4.299,1.305],[1.306,-4.112],[0,0],[11.77,-14.01],[0,0],[0.188,-0.291],[0,0],[3.177,0],[-10.835,39.606],[19.801,0],[6.912,-7.285],[5.601,0],[2.611,-3.923],[2.801,-3.175],[0,0],[0.197,-0.324],[0,0],[14.76,0],[3.366,4.671],[-1.121,5.976],[0,0],[-7.288,4.108],[-2.803,9.154],[0.746,4.112],[12.705,0],[6.726,-3.551],[8.034,-9.527],[0,0],[0.232,-0.355],[0,0],[3.176,0],[0,0],[6.164,8.219],[8.966,0],[6.54,-7.47],[8.78,0],[5.419,-5.793],[6.907,0],[2.054,-2.992],[5.231,-6.165],[0,0],[-3.363,-2.807],[-1.867,0],[-1.681,1.868],[0,0],[0,0],[-6.166,0],[-0.936,3.548],[0,0],[-12.89,0],[3.175,-10.46],[0,0],[-4.485,-1.121],[-1.494,4.856],[-2.428,8.781],[-12.33,0],[3.179,-11.019],[0,0],[0,-1.684],[-7.843,0],[-7.1,7.848],[-8.228,9.788],[-5.954,-7.998],[-18.31,0],[-8.968,4.674],[-10.465,11.958],[0,0],[-0.21,0.334],[0,0],[0,0],[-4.107,-1.311],[-0.743,0],[-1.119,3.733],[0,0],[-13.263,0],[3.365,-12.326],[0,0],[0,-2.428],[-7.844,0],[-7.1,7.848],[-9.073,10.806],[-0.059,0.066],[0,0],[0,0],[-4.109,-5.605],[-6.722,0],[-4.482,5.045],[0,0],[-0.016,0.018],[0,0],[0,0],[0.167,-0.503],[-6.915,-9.524],[-10.648,0],[-7.847,7.474],[-3.363,8.217],[-5.601,0],[-1.868,2.241],[0,0],[0,0],[0,0],[6.723,-15.318],[0,-5.604],[-3.176,-3.55],[-5.606,0],[-12.327,14.756],[0,0],[-0.016,0.019],[0,0],[-4.67,-7.473],[0,-4.295],[2.803,-2.8],[6.54,0],[1.494,1.306],[2.617,-3.553],[-3.362,-2.618],[-9.34,0],[-8.782,5.231],[-12.7,14.388],[0,0]],o:[[-3.363,-2.8],[0,0],[0,0],[-0.748,-6.164],[-2.615,-4.672],[-0.189,-1.12],[2.99,-3.363],[-2.99,-2.617],[0,0],[-0.081,0.09],[0,0],[-5.417,6.353],[-2.241,0],[0,-2.052],[6.158,-14.384],[1.679,-3.922],[0,0],[0,0],[2.803,-3.362],[-3.362,-2.986],[0,0],[-0.258,0.232],[0,0],[-3.736,0],[2.057,-7.474],[3.174,-13.265],[-3.923,-4.858],[-2.988,0],[-1.121,-3.177],[-5.793,0],[-6.353,3.549],[0,0],[-0.209,0.235],[0,0],[-3.18,3.548],[-1.681,0],[-1.121,-1.495],[0,0],[0,0],[4.484,0],[0,-4.298],[0,0],[0,0],[1.308,-4.296],[-4.295,-1.125],[0,0],[-3.363,9.9],[0,0],[-0.226,0.272],[-8.471,10.064],[-3.179,3.547],[0.935,-3.739],[7.1,-22.792],[-9.529,0],[1.306,-4.669],[-2.615,0],[-2.806,4.301],[0,0],[-0.246,0.296],[0,0],[-19.058,21.856],[-9.151,0],[-2.802,-3.737],[0,0],[12.332,0],[7.469,-4.297],[1.122,-4.296],[-1.869,-13.824],[-7.474,0],[-7.096,3.55],[0,0],[-0.287,0.324],[-8.228,9.774],[-3.176,3.547],[0,0],[2.99,-10.276],[-5.793,-7.475],[-10.278,0],[-5.231,-7.656],[-8.783,0],[0.56,-2.616],[-2.247,0],[-2.055,2.987],[-11.773,14.013],[-2.799,3.366],[1.495,1.305],[2.242,0],[0,0],[0,0],[-1.309,5.234],[3.549,0],[0,0],[7.289,-25.221],[10.465,0],[0,0],[-1.306,5.045],[5.231,1.307],[0.561,-2.057],[3.179,-11.957],[11.77,0],[0,0],[-0.935,3.553],[0,7.472],[7.847,0],[0,0],[-2.938,11.341],[4.669,6.167],[11.024,0],[9.9,-5.04],[0,0],[0.259,-0.31],[0,0],[0,0],[-1.119,4.116],[0.751,0.186],[3.553,0],[0,0],[6.728,-23.726],[11.025,0],[0,0],[-0.746,2.804],[0,7.475],[7.848,0],[0,0],[0.06,-0.063],[0,0],[0,0],[-2.055,7.283],[3.925,5.23],[10.461,0],[0,0],[0.015,-0.017],[0,0],[0,0],[-0.002,0.139],[-3.176,10.648],[5.604,7.479],[10.465,0],[5.604,-5.229],[7.098,1.866],[4.111,0],[0,0],[0,0],[0,0],[-5.796,13.823],[-1.868,4.298],[0,5.229],[3.549,3.735],[11.019,0],[0,0],[0.016,-0.018],[0,0],[1.309,2.803],[8.034,13.641],[0,3.737],[-2.055,2.055],[-5.977,0],[-3.547,-2.803],[-2.803,3.546],[3.55,2.802],[7.474,0],[7.844,-5.048],[0,0],[2.799,-3.363]],v:[[379.977,-4.391],[368.585,-3.458],[350.276,18.217],[342.054,27.557],[331.221,1.963],[322.626,-14.106],[325.427,-21.203],[324.495,-32.599],[313.47,-31.853],[284.949,2.071],[284.703,2.336],[252.943,40.074],[243.604,46.984],[238.932,42.126],[240.616,35.029],[263.034,-14.666],[260.976,-24.378],[250.328,-30.919],[252.757,-33.721],[252.194,-44.932],[240.616,-43.999],[206.979,-4.209],[206.242,-3.458],[188.682,17.47],[177.099,16.161],[181.396,0.281],[177.658,-25.126],[161.594,-32.787],[153,-30.732],[144.969,-35.961],[127.219,-31.479],[105.173,-11.303],[79.579,19.151],[79.01,19.885],[60.903,41.382],[52.308,46.984],[48.384,45.118],[47.636,38.952],[63.701,-19.896],[82.011,-19.896],[90.045,-27.93],[82.011,-35.961],[68.188,-35.961],[72.668,-52.217],[67.063,-62.117],[57.167,-56.513],[51.747,-36.896],[32.876,-8.312],[11.021,17.654],[10.407,18.503],[-8.215,40.636],[-16.997,46.613],[-5.417,4.204],[-30.076,-35.961],[-55.667,-25.502],[-63.703,-34.467],[-71.359,-29.427],[-78.273,-19.896],[-108.164,15.6],[-108.82,16.535],[-112.269,20.645],[-158.789,47.173],[-178.032,40.074],[-180.459,25.129],[-163.274,25.129],[-134.125,18.963],[-118.808,-1.4],[-118.062,-14.106],[-146.084,-35.961],[-167.57,-31.292],[-189.802,-12.049],[-215.768,18.776],[-216.539,19.799],[-234.071,40.636],[-242.852,46.613],[-231.271,4.204],[-234.445,-25.126],[-257.424,-35.961],[-283.953,-24.756],[-305.438,-35.961],[-328.044,-26.248],[-336.073,-34.467],[-342.987,-30.544],[-351.579,-18.777],[-380.729,15.783],[-379.792,27.184],[-374.562,29.049],[-368.582,26.062],[-351.956,6.445],[-364.472,51.469],[-356.625,61.744],[-348.964,55.768],[-338.32,18.03],[-306.372,-20.27],[-297.216,-0.28],[-308.054,39.885],[-302.823,49.789],[-292.359,43.623],[-281.151,2.52],[-258.547,-20.27],[-246.776,-0.094],[-258.357,41.755],[-259.481,49.977],[-244.162,63.053],[-223.422,52.777],[-195.623,19.668],[-190.92,49.787],[-158.789,63.242],[-129.643,56.324],[-100.873,31.852],[-87.051,15.413],[-86.354,14.441],[-79.953,6.82],[-92.289,51.652],[-86.685,61.558],[-84.442,61.744],[-76.783,55.768],[-65.945,17.654],[-32.878,-20.27],[-20.922,-0.094],[-32.505,41.755],[-33.625,49.601],[-18.307,63.053],[2.432,52.777],[22.98,28.299],[23.163,28.116],[39.042,9.249],[32.13,34.658],[35.493,54.835],[52.308,63.053],[73.603,51.096],[91.298,30.036],[91.347,29.986],[92.689,28.381],[100.875,18.639],[100.689,19.338],[104.987,51.652],[130.579,63.242],[158.606,51.842],[172.245,31.481],[189.429,33.718],[199.517,29.611],[215.266,10.617],[240.237,-18.962],[245.658,-15.783],[225.856,28.489],[222.117,43.81],[226.975,57.263],[241.362,63.239],[271.435,42.877],[283.157,28.917],[283.205,28.865],[309.918,-2.897],[317.393,10.182],[326.177,31.852],[321.693,42.128],[309.547,47.173],[297.031,43.063],[285.821,44.559],[287.13,55.768],[309.547,63.242],[333.089,56.7],[362.043,29.049],[380.729,6.82]],c:true},ix:2},nm:"パス 4",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[1006.165,1378.575],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 27",np:6,cix:2,bm:0,ix:27,mn:"ADBE Vector Group",hd:false},{ty:"tm",s:{a:0,k:0,ix:1},e:{a:1,k:[{i:{x:[0.282],y:[1]},o:{x:[0.333],y:[0]},t:3,s:[0]},{t:29,s:[100]}],ix:2},o:{a:0,k:0,ix:3},m:1,ix:28,nm:"パスのトリミング 1",mn:"ADBE Vector Filter - Trim",hd:false},{ty:"st",c:{a:0,k:[0,0.607843137255,0.858823529412,1],ix:3},o:{a:0,k:100,ix:4},w:{a:0,k:6,ix:5},lc:1,lj:1,ml:4,bm:0,nm:"線 1",mn:"ADBE Vector Graphic - Stroke",hd:false}],ip:3,op:29,st:3,bm:0},{ddd:0,ind:11,ty:4,nm:"Life is Tech ! KANSAI LOGO_1Layerアウトライン 2",sr:1,ks:{o:{a:0,k:100,ix:11},r:{a:0,k:0,ix:10},p:{a:0,k:[542,540,0],ix:2},a:{a:0,k:[1003,951.373,0],ix:1},s:{a:0,k:[50,50,100],ix:6}},ao:0,shapes:[{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-128.357,-159.105],[-55.638,-159.105],[-55.638,-28.796],[-54.175,-28.796],[40.018,-159.105],[119.085,-159.105],[23.912,-32.211],[128.357,159.105],[48.804,159.105],[-18.546,24.894],[-55.638,73.696],[-55.638,159.105],[-128.357,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[165.507,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 1",np:2,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[4.225,16.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[-3.908,16.922],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-0.485,-104.443],[-2.439,-104.443],[-68.815,159.106],[-142.024,159.106],[-42.948,-159.107],[42.95,-159.107],[142.024,159.106],[65.888,159.106]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[492.009,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 2",np:2,cix:2,bm:0,ix:2,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,25.673],[-25.672,0],[0,-25.675],[25.675,0]],o:[[0,-25.675],[25.675,0],[0,25.673],[-25.672,0]],v:[[-46.485,0],[-0.001,-46.484],[46.485,0],[-0.001,46.484]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[490.399,1148.471],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 3",np:2,cix:2,bm:0,ix:3,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[2.599,20.828],[0,18.545],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-2.607,-20.172],[0,-18.867],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[-1.63,-16.917],[-2.61,-20.816],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[1.625,17.571],[2.598,20.176],[0,0],[0,0],[0,0]],v:[[-114.205,-159.105],[-40.997,-159.105],[26.354,-0.489],[53.686,69.305],[55.638,69.305],[49.295,12.688],[45.389,-46.364],[45.389,-159.105],[114.206,-159.105],[114.206,159.105],[40.997,159.105],[-26.356,0.489],[-53.684,-68.814],[-55.639,-68.814],[-49.292,-12.199],[-45.39,46.365],[-45.39,159.105],[-114.205,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[833.644,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 4",np:2,cix:2,bm:0,ix:4,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[-14.154,-6.176],[-13.995,0],[-7.649,5.538],[0,9.442],[2.272,3.585],[4.225,2.767],[6.014,2.443],[7.809,2.929],[0,0],[8.295,5.206],[6.175,7.001],[3.739,9.27],[0,11.715],[-5.694,11.549],[-10.252,8.625],[-14.323,4.882],[-17.253,0],[-18.227,-7.151],[-14.641,-13.666],[0,0],[10.737,4.392],[13.665,0],[7.642,-5.04],[0,-9.104],[-9.762,-4.879],[-15.295,-5.529],[0,0],[-12.198,-13.666],[0,-22.449],[5.525,-11.872],[10.412,-8.943],[15.288,-5.368],[19.843,0],[20.986,7.642],[17.242,15.298]],o:[[12.032,9.76],[14.155,6.184],[16.594,0],[7.641,-5.529],[0,-4.882],[-2.278,-3.576],[-4.237,-2.761],[-6.027,-2.438],[0,0],[-8.786,-3.246],[-8.299,-5.202],[-6.185,-6.992],[-3.743,-9.274],[0,-13.008],[5.693,-11.549],[10.249,-8.618],[14.312,-4.878],[19.519,0],[18.218,7.162],[0,0],[-11.066,-8.13],[-10.737,-4.391],[-13.994,0],[-7.649,5.051],[0,9.761],[9.761,4.882],[0,0],[21.145,7.812],[12.205,13.663],[0,13.345],[-5.536,11.881],[-10.415,8.955],[-15.299,5.371],[-21.476,0],[-20.989,-7.641],[0,0]],v:[[-80.773,69.793],[-41.484,93.708],[0.733,102.979],[37.093,94.682],[48.558,72.232],[45.145,59.543],[35.386,50.026],[20.012,42.216],[-0.73,34.164],[-41.728,16.594],[-67.349,3.906],[-89.071,-14.397],[-103.958,-38.799],[-109.569,-70.281],[-101.03,-107.125],[-77.111,-137.386],[-40.264,-157.642],[7.078,-164.963],[63.693,-154.225],[112.984,-122.989],[76.381,-77.6],[43.682,-96.391],[7.078,-102.979],[-25.38,-95.416],[-36.847,-74.184],[-22.207,-52.223],[15.373,-36.603],[53.931,-20.012],[103.954,12.203],[122.259,66.375],[113.963,104.199],[90.045,135.435],[51.49,156.908],[-1.219,164.962],[-64.911,153.495],[-122.259,119.085]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1175.522,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 5",np:2,cix:2,bm:0,ix:5,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[4.228,16.593],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[-3.906,16.922],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-0.488,-104.445],[-2.439,-104.445],[-68.815,159.105],[-142.024,159.105],[-42.949,-159.105],[42.95,-159.105],[142.024,159.105],[65.887,159.105]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1516.912,1035.849],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 6",np:2,cix:2,bm:0,ix:6,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,25.673],[-25.672,0],[0,-25.675],[25.675,0]],o:[[0,-25.675],[25.675,0],[0,25.673],[-25.672,0]],v:[[-46.485,0],[-0.002,-46.484],[46.485,0],[-0.002,46.484]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1515.392,1148.471],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 7",np:2,cix:2,bm:0,ix:7,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-110.302,98.587],[-36.114,98.587],[-36.114,-98.586],[-110.302,-98.586],[-110.302,-159.106],[110.302,-159.106],[110.302,-98.586],[36.114,-98.586],[36.114,98.587],[110.302,98.587],[110.302,159.106],[-110.302,159.106]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1858.547,1035.85],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 8",np:2,cix:2,bm:0,ix:8,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[57.355,-57.356],[186.164,0],[87.328,37.703],[5.771,-3.56],[102.949,-23.11],[60.15,-1.685],[-46.317,35.985],[-10.097,12.43],[-0.672,0.864],[8.233,7.593],[38.344,80.766],[0,0],[-0.485,-1.093],[-67.267,-65.546],[47.357,-36.789],[29.182,-10.938],[-2.303,-12.892],[-26.693,-0.131],[-1.922,0],[-106.192,23.833],[-27.971,13.037],[-98.336,0],[-139.781,139.782],[-36.491,82.695]],o:[[-33.792,71.16],[-131.636,131.64],[-95.799,0],[-6.645,-2.867],[-14.291,6.832],[-85.415,19.171],[38.167,-16.665],[64.733,-50.292],[0.776,-0.736],[6.874,-8.842],[-66.186,-61.06],[0,0],[0.483,1.096],[38.354,85.675],[-18.885,21.733],[-60.335,46.873],[-24.369,9.126],[2.339,13.062],[1.869,0.008],[64.532,-0.003],[98.108,-22.023],[90.045,37.446],[197.682,0],[65.833,-65.838],[0,0]],v:[[699.185,-244.165],[561.916,-50.053],[69.092,154.083],[-206.89,97.262],[-226.629,98.701],[-438.979,173.06],[-663.949,200.583],[-525.938,121.09],[-403.097,0.952],[-400.925,-1.451],[-403.333,-30.519],[-560.752,-244.165],[-608.149,-244.165],[-606.726,-240.87],[-447.639,-13.125],[-552.385,87.042],[-716.293,175.344],[-744.317,215.657],[-703.089,244.153],[-697.418,244.164],[-429.538,215.125],[-214.721,140.767],[69.092,197.191],[592.401,-19.569],[746.62,-244.165]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[933.906,1501.123],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 9",np:2,cix:2,bm:0,ix:9,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[88.714,99.713],[0,0],[-24.312,-117.679]],o:[[-25.065,-129.23],[0,0],[80.671,91.367],[0,0]],v:[[101.674,174.406],[-71.211,-174.406],[-101.674,-143.799],[57.738,174.406]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1627.738,641.476],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 10",np:2,cix:2,bm:0,ix:10,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[-80.115,91.131],[0,0],[24.965,-128.699]],o:[[24.209,-117.189],[0,0],[-88.113,99.468],[0,0]],v:[[-57.224,173.789],[101.164,-143.269],[70.643,-173.789],[-101.164,173.789]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[377.748,642.093],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 11",np:2,cix:2,bm:0,ix:11,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[9.204,7.889],[0,0],[-7.892,9.206],[0,0],[18.406,-17.111],[-5.731,-30.75],[3.313,-3.313],[0,0],[0,0],[0,0],[-20.284,-2.097],[-22.962,22.96],[15.613,29.695]],o:[[-7.893,9.208],[0,0],[-9.21,-7.891],[0,0],[-23.555,-1.302],[-24.802,23.061],[3.42,18.34],[0,0],[0,0],[0,0],[28.21,-28.209],[18.394,1.903],[26.542,-26.545],[0,0]],v:[[50.098,-0.672],[19.013,1.722],[-19.101,-30.946],[-21.496,-62.032],[13.849,-103.272],[-52.119,-79.663],[-83.667,-0.794],[-98.235,36.539],[-108.152,46.461],[-52.96,104.574],[-46.09,97.701],[10.475,63.906],[79.251,38.962],[92.539,-50.191]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1121.367,499.693],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 12",np:2,cix:2,bm:0,ix:12,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[7.468,-7.469],[7.465,7.469],[-7.467,7.465],[-7.466,-7.469]],o:[[-7.466,7.469],[-7.467,-7.469],[7.465,-7.469],[7.468,7.465]],v:[[-29.151,56.554],[-56.193,56.554],[-56.193,29.512],[-29.151,29.512]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[0,0],[0,0],[-12.309,-12.31],[0,0],[-12.308,12.309],[0,0]],o:[[0,0],[-12.309,12.31],[0,0],[12.309,12.309],[0,0],[0,0]],v:[[30.959,-88.345],[-76.766,19.381],[-76.766,64.146],[-64.876,76.036],[-20.114,76.036],[89.075,-33.152]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[899.883,716.865],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 13",np:4,cix:2,bm:0,ix:13,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[5.032,-10.067],[0,0],[11.334,41.901],[-18.247,-21.133],[0.142,10.382],[-2.967,-13.408],[-1.317,7.85],[-10.106,-8.815]],o:[[0,0],[-28.542,15.876],[-7.55,-27.919],[5.049,5.845],[-0.156,-11.307],[2.013,9.083],[1.993,-11.905],[16.219,14.142]],v:[[57.096,15.182],[23.278,48.999],[-42.464,10.039],[-17.174,-10.326],[-4.912,-19.112],[11.083,-18.985],[28.27,-19.367],[52.586,-21.487]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[19.891,19.891],[19.894,3.979],[17.682,15.028],[-10.905,-44.975],[-43.868,28.842],[0,0]],o:[[-19.891,-19.891],[-19.89,-3.977],[0,0],[13.371,55.144],[0,0],[6.579,-13.162]],v:[[58.851,-38.511],[-0.822,-65.476],[-71.104,-91.554],[-69.114,-19.284],[29.235,62.711],[73.44,18.51]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[863.548,486.603],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 14",np:4,cix:2,bm:0,ix:14,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[-13.785,13.785],[0,0],[12.312,12.31],[0,0],[12.308,-12.307],[0,0],[-12.311,-12.309],[0,0]],o:[[0,0],[13.786,-13.785],[0,0],[-12.308,-12.309],[0,0],[-12.311,12.308],[0,0],[12.311,12.31]],v:[[128.534,128.501],[128.534,128.501],[131.684,80.584],[-69.427,-131.653],[-114.187,-131.653],[-131.685,-114.156],[-131.685,-69.396],[80.618,131.652]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1046.143,662.187],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 15",np:2,cix:2,bm:0,ix:15,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[22.87,59.992],[-69.384,-44.227],[-51.572,-59.992],[26.219,27.888],[54.92,2.479],[69.384,18.818]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[518.659,426.998],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 16",np:2,cix:2,bm:0,ix:16,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-2.63,-58.411],[-14.034,-74.906],[-65.129,-39.57],[-53.724,-23.078],[-37.879,-34.035],[18.476,47.454],[2.629,58.411],[14.036,74.906],[65.129,39.571],[53.722,23.078],[37.879,34.036],[-18.473,-47.453]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[590.918,358.591],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 17",np:2,cix:2,bm:0,ix:17,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-13.757,-39.784],[3.403,-5.724],[35.357,-21.822],[44.375,-3.911],[12.596,12.096],[39.486,65.47],[18.239,76.171],[-44.375,-48.132],[11.277,-76.171],[20.829,-57.207]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[658.075,309.299],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 18",np:2,cix:2,bm:0,ix:18,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-6.342,76.056],[-54.049,-54.696],[4.496,-76.056],[11.639,-56.479],[-25.666,-42.869],[-13,-8.15],[21.536,-20.75],[28.14,-2.65],[-6.396,9.95],[7.683,48.547],[46.838,34.264],[54.049,54.023]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[759.765,272.599],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 19",np:2,cix:2,bm:0,ix:19,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[22.943,-53.782],[19.811,-73.587],[-41.547,-63.887],[-38.415,-44.081],[-19.388,-47.087],[-3.915,50.774],[-22.945,53.783],[-19.813,73.587],[41.547,63.888],[38.416,44.081],[19.388,47.089],[3.913,-50.773]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[887.641,239.73],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 20",np:2,cix:2,bm:0,ix:20,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[7.733,0],[2.096,-0.718],[1.701,-1.572],[0.984,-2.485],[0,-3.407],[-3.54,-3.209],[-5.767,-2.883],[-3.535,-2.227],[-2.887,-3.145],[-1.836,-4.325],[0,-5.899],[2.163,-5.24],[3.598,-3.605],[4.849,-1.833],[5.372,0],[6.549,3.011],[3.932,4.588],[0,0],[-4.261,-2.093],[-4.457,0],[-3.28,3.41],[0,6.164],[3.932,3.539],[6.025,3.015],[3.343,2.232],[2.556,3.082],[1.505,4.127],[0,5.769],[-2.294,5.178],[-3.733,3.411],[-4.72,1.642],[-4.851,0],[-5.576,-2.293],[-3.805,-4.454]],o:[[-5.11,-6.158],[-2.229,0],[-2.096,0.724],[-1.707,1.574],[-0.981,2.491],[0,5.9],[3.537,3.213],[3.407,1.704],[3.54,2.23],[2.88,3.144],[1.832,4.327],[0,6.816],[-2.163,5.244],[-3.61,3.605],[-4.849,1.836],[-7.735,0],[-6.556,-3.014],[0,0],[3.015,3.672],[4.256,2.099],[4.979,0],[3.272,-3.407],[0,-6.026],[-3.93,-3.537],[-3.803,-1.836],[-3.344,-2.225],[-2.553,-3.078],[-1.509,-4.128],[0,-7.203],[2.289,-5.175],[3.736,-3.407],[4.717,-1.636],[7.076,0],[5.569,2.295],[0,0]],v:[[25.949,-42.659],[6.684,-51.899],[0.196,-50.819],[-5.504,-47.377],[-9.535,-41.284],[-11.01,-32.438],[-5.7,-18.774],[8.256,-9.631],[18.673,-3.734],[28.311,4.325],[35.385,15.531],[38.138,30.864],[34.895,48.95],[26.247,62.221],[13.564,70.378],[-1.768,73.13],[-23.196,68.611],[-38.926,57.209],[-26.147,39.907],[-15.235,48.556],[-2.163,51.704],[10.224,46.591],[15.138,32.24],[9.24,17.889],[-5.7,8.061],[-16.415,1.965],[-25.263,-5.996],[-31.356,-16.807],[-33.616,-31.652],[-30.176,-50.228],[-21.134,-63.105],[-8.452,-70.674],[5.899,-73.13],[24.87,-69.689],[38.926,-59.566]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[978.889,230.589],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 21",np:2,cix:2,bm:0,ix:21,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[9.955,-45.257],[-7.997,72.515],[-30.934,69.019],[-12.981,-48.754],[-38.826,-52.693],[-35.805,-72.515],[38.827,-61.138],[35.804,-41.319]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1121.475,236.785],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 22",np:2,cix:2,bm:0,ix:22,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-49.198,57.981],[-10.687,-75.769],[49.198,-58.528],[43.431,-38.503],[5.272,-49.49],[-4.955,-13.975],[30.371,-3.804],[25.042,14.71],[-10.285,4.54],[-21.653,44.022],[18.397,55.553],[12.576,75.769]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1202.994,258.199],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 23",np:2,cix:2,bm:0,ix:23,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[6.622,-0.5],[7.737,3.866],[4.048,6.12],[1.028,7.765],[-1.818,9.054],[-4.745,9.496],[-6.181,6.947],[-6.888,3.814],[-7.301,0.384],[-6.92,-3.457],[-4.077,-5.334],[-0.943,-6.627],[0,0],[7.62,3.803],[4.367,-0.822],[4.162,-3.045],[3.837,-5.042],[3.16,-6.332],[1.726,-6.093],[-0.062,-5.157],[-2.025,-4.014],[-4.341,-2.167],[-4.043,0.616],[-3.519,2.054],[0,0]],o:[[-6.624,0.498],[-7.032,-3.512],[-4.051,-6.123],[-1.035,-7.765],[1.811,-9.06],[4.744,-9.498],[6.18,-6.949],[6.883,-3.813],[7.296,-0.381],[7.148,3.571],[4.076,5.332],[0,0],[-1.353,-9.319],[-4.223,-2.109],[-4.365,0.825],[-4.155,3.052],[-3.84,5.04],[-3.105,6.214],[-1.726,6.1],[0.058,5.16],[2.022,4.015],[4.103,2.048],[4.042,-0.619],[0,0],[-5.742,3.284]],v:[[-10.681,70.192],[-32.224,65.145],[-48.847,50.691],[-56.459,29.857],[-55.284,4.628],[-45.451,-23.204],[-29.065,-47.871],[-9.465,-64.015],[11.807,-70.31],[33.13,-65.704],[49.972,-52.346],[57.495,-34.413],[37.979,-25.702],[24.521,-45.388],[11.639,-47.319],[-1.152,-41.513],[-13.143,-29.371],[-23.641,-12.311],[-30.888,6.153],[-33.385,23.034],[-30.26,36.793],[-20.715,46.064],[-8.493,48.212],[2.847,44.206],[7.863,64.513]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1309.212,298.27],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 24",np:2,cix:2,bm:0,ix:24,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[-20.66,69.643],[13.135,17.989],[-21.744,-4.828],[-55.539,46.828],[-75.113,34.019],[1.085,-82.451],[20.658,-69.647],[-10.227,-22.431],[24.651,0.386],[55.537,-46.829],[75.113,-34.022],[-1.083,82.451]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ty:"tr",p:{a:0,k:[1401.918,349.723],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 25",np:2,cix:2,bm:0,ix:25,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0]],v:[[-26.722,11.584],[38.198,-56.898],[54.604,-41.343],[-10.315,27.136]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[2.614,-2.755],[3.748,-0.24],[2.759,2.614],[-0.083,3.708],[-2.797,2.948],[-3.796,0.383],[-2.852,-2.707],[0.128,-3.847]],o:[[-2.796,2.953],[-3.746,0.238],[-2.851,-2.708],[0.089,-3.713],[2.614,-2.758],[3.784,-0.379],[2.757,2.614],[-0.129,3.854]],v:[[-30.792,51.877],[-40.61,56.66],[-50.369,53.098],[-54.521,43.475],[-50.194,33.486],[-40.584,28.777],[-30.621,32.269],[-26.677,41.964]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[1503.325,427.57],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 26",np:4,cix:2,bm:0,ix:26,mn:"ADBE Vector Group",hd:false},{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[1.309,-5.228],[1.497,-5.234],[0,6.54],[-2.988,0],[-1.121,-1.311]],o:[[-0.187,1.495],[-5.045,-3.736],[0,-6.535],[0.746,0],[1.682,2.053]],v:[[165.703,-3.458],[162.153,9.622],[154.867,-6.82],[161.594,-16.721],[165.141,-15.037]],c:true},ix:2},nm:"パス 1",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[3.737,-3.55],[6.352,0],[0,8.965],[-0.746,2.806],[-1.685,6.351],[-4.485,4.482],[-3.734,0.746],[0,-4.295],[-7.098,-7.098],[-2.988,-1.679]],o:[[-5.043,4.671],[-9.902,0],[0,-2.617],[1.682,-5.604],[2.611,-9.154],[2.986,-2.802],[-1.866,3.736],[0,10.276],[2.243,2.243],[-2.617,5.977]],v:[[147.768,40.074],[130.579,47.171],[114.889,32.228],[116.198,23.258],[121.056,6.072],[131.704,-14.29],[141.601,-19.521],[138.803,-5.326],[149.45,19.896],[157.298,25.686]],c:true},ix:2},nm:"パス 2",mn:"ADBE Vector Shape - Group",hd:false},{ind:2,ty:"sh",ix:3,ks:{a:0,k:{i:[[-0.373,1.307],[-14.385,0],[1.872,-8.223],[3.922,-2.241],[9.529,0],[0,0]],o:[[4.296,-14.946],[8.782,0],[-1.119,5.229],[-4.67,2.804],[0,0],[0.187,-1.123]],v:[[-175.042,5.325],[-146.833,-19.896],[-134.315,-5.883],[-142.162,4.95],[-163.274,9.063],[-175.976,9.063]],c:true},ix:2},nm:"パス 3",mn:"ADBE Vector Shape - Group",hd:false},{ind:3,ty:"sh",ix:4,ks:{a:0,k:{i:[[3.364,2.991],[2.798,-3.362],[0,0],[0,0],[7.468,12.701],[0.746,3.925],[-3.363,3.923],[3.359,2.989],[2.616,-3.173],[0,0],[0.08,-0.094],[0,0],[1.866,0],[0,2.992],[-1.125,2.615],[-7.474,17.375],[3.364,2.239],[0,0],[0,0],[3.366,2.804],[3.171,-3.73],[0,0],[0.229,-0.273],[0,0],[2.057,0.747],[-0.373,1.871],[3.365,4.294],[6.352,0],[2.804,-1.309],[4.482,0],[6.167,-3.547],[8.969,-10.46],[0,0],[0.173,-0.253],[0,0],[2.802,0],[0.933,1.122],[-0.747,2.43],[0,0],[0,0],[0,4.483],[4.484,0],[0,0],[0,0],[4.299,1.305],[1.306,-4.112],[0,0],[11.77,-14.01],[0,0],[0.188,-0.291],[0,0],[3.177,0],[-10.835,39.606],[19.801,0],[6.912,-7.285],[5.601,0],[2.611,-3.923],[2.801,-3.175],[0,0],[0.197,-0.324],[0,0],[14.76,0],[3.366,4.671],[-1.121,5.976],[0,0],[-7.288,4.108],[-2.803,9.154],[0.746,4.112],[12.705,0],[6.726,-3.551],[8.034,-9.527],[0,0],[0.232,-0.355],[0,0],[3.176,0],[0,0],[6.164,8.219],[8.966,0],[6.54,-7.47],[8.78,0],[5.419,-5.793],[6.907,0],[2.054,-2.992],[5.231,-6.165],[0,0],[-3.363,-2.807],[-1.867,0],[-1.681,1.868],[0,0],[0,0],[-6.166,0],[-0.936,3.548],[0,0],[-12.89,0],[3.175,-10.46],[0,0],[-4.485,-1.121],[-1.494,4.856],[-2.428,8.781],[-12.33,0],[3.179,-11.019],[0,0],[0,-1.684],[-7.843,0],[-7.1,7.848],[-8.228,9.788],[-5.954,-7.998],[-18.31,0],[-8.968,4.674],[-10.465,11.958],[0,0],[-0.21,0.334],[0,0],[0,0],[-4.107,-1.311],[-0.743,0],[-1.119,3.733],[0,0],[-13.263,0],[3.365,-12.326],[0,0],[0,-2.428],[-7.844,0],[-7.1,7.848],[-9.073,10.806],[-0.059,0.066],[0,0],[0,0],[-4.109,-5.605],[-6.722,0],[-4.482,5.045],[0,0],[-0.016,0.018],[0,0],[0,0],[0.167,-0.503],[-6.915,-9.524],[-10.648,0],[-7.847,7.474],[-3.363,8.217],[-5.601,0],[-1.868,2.241],[0,0],[0,0],[0,0],[6.723,-15.318],[0,-5.604],[-3.176,-3.55],[-5.606,0],[-12.327,14.756],[0,0],[-0.016,0.019],[0,0],[-4.67,-7.473],[0,-4.295],[2.803,-2.8],[6.54,0],[1.494,1.306],[2.617,-3.553],[-3.362,-2.618],[-9.34,0],[-8.782,5.231],[-12.7,14.388],[0,0]],o:[[-3.363,-2.8],[0,0],[0,0],[-0.748,-6.164],[-2.615,-4.672],[-0.189,-1.12],[2.99,-3.363],[-2.99,-2.617],[0,0],[-0.081,0.09],[0,0],[-5.417,6.353],[-2.241,0],[0,-2.052],[6.158,-14.384],[1.679,-3.922],[0,0],[0,0],[2.803,-3.362],[-3.362,-2.986],[0,0],[-0.258,0.232],[0,0],[-3.736,0],[2.057,-7.474],[3.174,-13.265],[-3.923,-4.858],[-2.988,0],[-1.121,-3.177],[-5.793,0],[-6.353,3.549],[0,0],[-0.209,0.235],[0,0],[-3.18,3.548],[-1.681,0],[-1.121,-1.495],[0,0],[0,0],[4.484,0],[0,-4.298],[0,0],[0,0],[1.308,-4.296],[-4.295,-1.125],[0,0],[-3.363,9.9],[0,0],[-0.226,0.272],[-8.471,10.064],[-3.179,3.547],[0.935,-3.739],[7.1,-22.792],[-9.529,0],[1.306,-4.669],[-2.615,0],[-2.806,4.301],[0,0],[-0.246,0.296],[0,0],[-19.058,21.856],[-9.151,0],[-2.802,-3.737],[0,0],[12.332,0],[7.469,-4.297],[1.122,-4.296],[-1.869,-13.824],[-7.474,0],[-7.096,3.55],[0,0],[-0.287,0.324],[-8.228,9.774],[-3.176,3.547],[0,0],[2.99,-10.276],[-5.793,-7.475],[-10.278,0],[-5.231,-7.656],[-8.783,0],[0.56,-2.616],[-2.247,0],[-2.055,2.987],[-11.773,14.013],[-2.799,3.366],[1.495,1.305],[2.242,0],[0,0],[0,0],[-1.309,5.234],[3.549,0],[0,0],[7.289,-25.221],[10.465,0],[0,0],[-1.306,5.045],[5.231,1.307],[0.561,-2.057],[3.179,-11.957],[11.77,0],[0,0],[-0.935,3.553],[0,7.472],[7.847,0],[0,0],[-2.938,11.341],[4.669,6.167],[11.024,0],[9.9,-5.04],[0,0],[0.259,-0.31],[0,0],[0,0],[-1.119,4.116],[0.751,0.186],[3.553,0],[0,0],[6.728,-23.726],[11.025,0],[0,0],[-0.746,2.804],[0,7.475],[7.848,0],[0,0],[0.06,-0.063],[0,0],[0,0],[-2.055,7.283],[3.925,5.23],[10.461,0],[0,0],[0.015,-0.017],[0,0],[0,0],[-0.002,0.139],[-3.176,10.648],[5.604,7.479],[10.465,0],[5.604,-5.229],[7.098,1.866],[4.111,0],[0,0],[0,0],[0,0],[-5.796,13.823],[-1.868,4.298],[0,5.229],[3.549,3.735],[11.019,0],[0,0],[0.016,-0.018],[0,0],[1.309,2.803],[8.034,13.641],[0,3.737],[-2.055,2.055],[-5.977,0],[-3.547,-2.803],[-2.803,3.546],[3.55,2.802],[7.474,0],[7.844,-5.048],[0,0],[2.799,-3.363]],v:[[379.977,-4.391],[368.585,-3.458],[350.276,18.217],[342.054,27.557],[331.221,1.963],[322.626,-14.106],[325.427,-21.203],[324.495,-32.599],[313.47,-31.853],[284.949,2.071],[284.703,2.336],[252.943,40.074],[243.604,46.984],[238.932,42.126],[240.616,35.029],[263.034,-14.666],[260.976,-24.378],[250.328,-30.919],[252.757,-33.721],[252.194,-44.932],[240.616,-43.999],[206.979,-4.209],[206.242,-3.458],[188.682,17.47],[177.099,16.161],[181.396,0.281],[177.658,-25.126],[161.594,-32.787],[153,-30.732],[144.969,-35.961],[127.219,-31.479],[105.173,-11.303],[79.579,19.151],[79.01,19.885],[60.903,41.382],[52.308,46.984],[48.384,45.118],[47.636,38.952],[63.701,-19.896],[82.011,-19.896],[90.045,-27.93],[82.011,-35.961],[68.188,-35.961],[72.668,-52.217],[67.063,-62.117],[57.167,-56.513],[51.747,-36.896],[32.876,-8.312],[11.021,17.654],[10.407,18.503],[-8.215,40.636],[-16.997,46.613],[-5.417,4.204],[-30.076,-35.961],[-55.667,-25.502],[-63.703,-34.467],[-71.359,-29.427],[-78.273,-19.896],[-108.164,15.6],[-108.82,16.535],[-112.269,20.645],[-158.789,47.173],[-178.032,40.074],[-180.459,25.129],[-163.274,25.129],[-134.125,18.963],[-118.808,-1.4],[-118.062,-14.106],[-146.084,-35.961],[-167.57,-31.292],[-189.802,-12.049],[-215.768,18.776],[-216.539,19.799],[-234.071,40.636],[-242.852,46.613],[-231.271,4.204],[-234.445,-25.126],[-257.424,-35.961],[-283.953,-24.756],[-305.438,-35.961],[-328.044,-26.248],[-336.073,-34.467],[-342.987,-30.544],[-351.579,-18.777],[-380.729,15.783],[-379.792,27.184],[-374.562,29.049],[-368.582,26.062],[-351.956,6.445],[-364.472,51.469],[-356.625,61.744],[-348.964,55.768],[-338.32,18.03],[-306.372,-20.27],[-297.216,-0.28],[-308.054,39.885],[-302.823,49.789],[-292.359,43.623],[-281.151,2.52],[-258.547,-20.27],[-246.776,-0.094],[-258.357,41.755],[-259.481,49.977],[-244.162,63.053],[-223.422,52.777],[-195.623,19.668],[-190.92,49.787],[-158.789,63.242],[-129.643,56.324],[-100.873,31.852],[-87.051,15.413],[-86.354,14.441],[-79.953,6.82],[-92.289,51.652],[-86.685,61.558],[-84.442,61.744],[-76.783,55.768],[-65.945,17.654],[-32.878,-20.27],[-20.922,-0.094],[-32.505,41.755],[-33.625,49.601],[-18.307,63.053],[2.432,52.777],[22.98,28.299],[23.163,28.116],[39.042,9.249],[32.13,34.658],[35.493,54.835],[52.308,63.053],[73.603,51.096],[91.298,30.036],[91.347,29.986],[92.689,28.381],[100.875,18.639],[100.689,19.338],[104.987,51.652],[130.579,63.242],[158.606,51.842],[172.245,31.481],[189.429,33.718],[199.517,29.611],[215.266,10.617],[240.237,-18.962],[245.658,-15.783],[225.856,28.489],[222.117,43.81],[226.975,57.263],[241.362,63.239],[271.435,42.877],[283.157,28.917],[283.205,28.865],[309.918,-2.897],[317.393,10.182],[326.177,31.852],[321.693,42.128],[309.547,47.173],[297.031,43.063],[285.821,44.559],[287.13,55.768],[309.547,63.242],[333.089,56.7],[362.043,29.049],[380.729,6.82]],c:true},ix:2},nm:"パス 4",mn:"ADBE Vector Shape - Group",hd:false},{ty:"mm",mm:1,nm:"パスを結合 1",mn:"ADBE Vector Filter - Merge",hd:false},{ty:"tr",p:{a:0,k:[1006.165,1378.575],ix:2},a:{a:0,k:[0,0],ix:1},s:{a:0,k:[100,100],ix:3},r:{a:0,k:0,ix:6},o:{a:0,k:100,ix:7},sk:{a:0,k:0,ix:4},sa:{a:0,k:0,ix:5},nm:"トランスフォーム"}],nm:"グループ 27",np:6,cix:2,bm:0,ix:27,mn:"ADBE Vector Group",hd:false},{ty:"tm",s:{a:0,k:0,ix:1},e:{a:1,k:[{i:{x:[0.282],y:[1]},o:{x:[0.333],y:[0]},t:0,s:[0]},{t:26,s:[100]}],ix:2},o:{a:0,k:0,ix:3},m:1,ix:28,nm:"パスのトリミング 1",mn:"ADBE Vector Filter - Trim",hd:false},{ty:"st",c:{a:0,k:[0.980392156863,0.780392156863,0,1],ix:3},o:{a:0,k:100,ix:4},w:{a:0,k:6,ix:5},lc:1,lj:1,ml:4,bm:0,nm:"線 1",mn:"ADBE Vector Graphic - Stroke",hd:false}],ip:0,op:26,st:0,bm:0}],markers:[],chars:[{ch:"N",size:220,style:"Bold",w:60,data:{shapes:[{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0.705,7.251],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.705,-6.949],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,-7.755],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,7.755],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[6.647,0],[20.847,0],[20.847,-23.264],[18.732,-47.031],[19.135,-47.031],[24.774,-32.73],[38.571,0],[53.778,0],[53.778,-65.662],[39.578,-65.662],[39.578,-42.398],[41.693,-18.53],[41.29,-18.53],[35.651,-33.032],[21.854,-65.662],[6.647,-65.662]],c:true},ix:2},nm:"N",mn:"ADBE Vector Shape - Group",hd:false}],nm:"N",np:3,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false}]},fFamily:"Source Code Pro"},{ch:"O",size:220,style:"Bold",w:60,data:{shapes:[{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[-15.61,0],[0,22.458],[15.61,0],[0,-21.954]],o:[[15.61,0],[0,-21.954],[-15.61,0],[0,22.458]],v:[[30.212,1.208],[56.598,-33.133],[30.212,-66.87],[3.827,-33.133]],c:true},ix:2},nm:"O",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[6.848,0],[0,14.2],[-6.848,0],[0,-13.596]],o:[[-6.848,0],[0,-13.596],[6.848,0],[0,14.2]],v:[[30.212,-11.581],[19.034,-33.133],[30.212,-54.08],[41.391,-33.133]],c:true},ix:2},nm:"O",mn:"ADBE Vector Shape - Group",hd:false}],nm:"O",np:5,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false}]},fFamily:"Source Code Pro"},{ch:"T",size:220,style:"Bold",w:60,data:{shapes:[{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[22.76,0],[37.665,0],[37.665,-53.174],[57.303,-53.174],[57.303,-65.662],[3.122,-65.662],[3.122,-53.174],[22.76,-53.174]],c:true},ix:2},nm:"T",mn:"ADBE Vector Shape - Group",hd:false}],nm:"T",np:3,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false}]},fFamily:"Source Code Pro"},{ch:"F",size:220,style:"Bold",w:60,data:{shapes:[{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],o:[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],v:[[10.574,0],[25.378,0],[25.378,-25.479],[49.951,-25.479],[49.951,-37.967],[25.378,-37.967],[25.378,-53.174],[54.181,-53.174],[54.181,-65.662],[10.574,-65.662]],c:true},ix:2},nm:"F",mn:"ADBE Vector Shape - Group",hd:false}],nm:"F",np:3,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false}]},fFamily:"Source Code Pro"},{ch:"U",size:220,style:"Bold",w:60,data:{shapes:[{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[-16.013,0],[0,17.02],[0,0],[0,0],[0,0],[6.244,0],[0,7.855],[0,0],[0,0],[0,0]],o:[[15.912,0],[0,0],[0,0],[0,0],[0,7.855],[-6.244,0],[0,0],[0,0],[0,0],[0,17.02]],v:[[30.414,1.208],[53.979,-25.278],[53.979,-65.662],[39.679,-65.662],[39.679,-23.767],[30.414,-11.581],[21.249,-23.767],[21.249,-65.662],[6.445,-65.662],[6.445,-25.278]],c:true},ix:2},nm:"U",mn:"ADBE Vector Shape - Group",hd:false}],nm:"U",np:3,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false}]},fFamily:"Source Code Pro"},{ch:"D",size:220,style:"Bold",w:60,data:{shapes:[{ty:"gr",it:[{ind:0,ty:"sh",ix:1,ks:{a:0,k:{i:[[0,0],[0,0],[0,22.559],[19.135,0],[0,0]],o:[[0,0],[18.228,0],[0,-22.559],[0,0],[0,0]],v:[[7.05,0],[26.083,0],[56.799,-33.133],[25.177,-65.662],[7.05,-65.662]],c:true},ix:2},nm:"D",mn:"ADBE Vector Shape - Group",hd:false},{ind:1,ty:"sh",ix:2,ks:{a:0,k:{i:[[0,0],[0,0],[0,0],[0,-15.71],[10.272,0]],o:[[0,0],[0,0],[10.272,0],[0,15.71],[0,0]],v:[[21.954,-11.984],[21.954,-53.677],[24.371,-53.677],[41.592,-33.133],[24.371,-11.984]],c:true},ix:2},nm:"D",mn:"ADBE Vector Shape - Group",hd:false}],nm:"D",np:5,cix:2,bm:0,ix:1,mn:"ADBE Vector Group",hd:false}]},fFamily:"Source Code Pro"}]};
// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/cache-loader/dist/cjs.js??ref--14-0!C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/thread-loader/dist/cjs.js!C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/babel-loader/lib!C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/ts-loader??ref--14-3!C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/cache-loader/dist/cjs.js??ref--0-0!C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/vue-loader/lib??vue-loader-options!C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/src/components/LiTKansaiLogo.vue?vue&type=script&lang=ts&









var LiTKansaiLogovue_type_script_lang_ts_LiTKansaiLogo = /*#__PURE__*/function (_Vue) {
  _inherits(LiTKansaiLogo, _Vue);

  var _super = _createSuper(LiTKansaiLogo);

  function LiTKansaiLogo() {
    _classCallCheck(this, LiTKansaiLogo);

    return _super.apply(this, arguments);
  }

  _createClass(LiTKansaiLogo, [{
    key: "mounted",
    value: function mounted() {
      var _this = this;

      var logoContainer = document.getElementById("splash-logo");
      if (!logoContainer) return;
      setTimeout(function () {
        var anim = lottie_default.a.loadAnimation({
          container: logoContainer,
          animationData: _this.notfound ? notfound : logo,
          renderer: "svg",
          loop: false,
          autoplay: _this.autoplay
        });
        anim.addEventListener("complete", function () {
          return _this.$emit("completed");
        });
      }, 200);
    }
  }]);

  return LiTKansaiLogo;
}(external_commonjs_vue_commonjs2_vue_root_Vue_default.a);

__decorate([Prop({
  default: true
})], LiTKansaiLogovue_type_script_lang_ts_LiTKansaiLogo.prototype, "autoplay", void 0);

__decorate([Prop({
  default: false
})], LiTKansaiLogovue_type_script_lang_ts_LiTKansaiLogo.prototype, "notfound", void 0);

LiTKansaiLogovue_type_script_lang_ts_LiTKansaiLogo = __decorate([vue_class_component_esm], LiTKansaiLogovue_type_script_lang_ts_LiTKansaiLogo);
/* harmony default export */ var LiTKansaiLogovue_type_script_lang_ts_ = (LiTKansaiLogovue_type_script_lang_ts_LiTKansaiLogo);
// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/src/components/LiTKansaiLogo.vue?vue&type=script&lang=ts&
 /* harmony default export */ var components_LiTKansaiLogovue_type_script_lang_ts_ = (LiTKansaiLogovue_type_script_lang_ts_); 
// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/vue-loader/lib/runtime/componentNormalizer.js
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode /* vue-cli only */
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () {
        injectStyles.call(
          this,
          (options.functional ? this.parent : this).$root.$options.shadowRoot
        )
      }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functional component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}

// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/src/components/LiTKansaiLogo.vue





/* normalize component */

var component = normalizeComponent(
  components_LiTKansaiLogovue_type_script_lang_ts_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var components_LiTKansaiLogo = (component.exports);
// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2bf52034-vue-loader-template"}!C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/cache-loader/dist/cjs.js??ref--0-0!C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/vue-loader/lib??vue-loader-options!C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/src/components/LiTKansaiSplash.vue?vue&type=template&id=5f337128&scoped=true&
var LiTKansaiSplashvue_type_template_id_5f337128_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('transition',{attrs:{"name":"fade"}},[(_vm.isSplashing)?_c('div',{attrs:{"id":"splash"}},[_c('LiTKansaiLogo',{attrs:{"notfound":_vm.notfound},on:{"completed":_vm.onCompleted}})],1):_vm._e()])}
var LiTKansaiSplashvue_type_template_id_5f337128_scoped_true_staticRenderFns = []


// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/src/components/LiTKansaiSplash.vue?vue&type=template&id=5f337128&scoped=true&

// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/cache-loader/dist/cjs.js??ref--14-0!C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/thread-loader/dist/cjs.js!C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/babel-loader/lib!C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/ts-loader??ref--14-3!C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/cache-loader/dist/cjs.js??ref--0-0!C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/vue-loader/lib??vue-loader-options!C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/src/components/LiTKansaiSplash.vue?vue&type=script&lang=ts&








var LiTKansaiSplashvue_type_script_lang_ts_LiTKansaiSplash = /*#__PURE__*/function (_Vue) {
  _inherits(LiTKansaiSplash, _Vue);

  var _super = _createSuper(LiTKansaiSplash);

  function LiTKansaiSplash() {
    var _this;

    _classCallCheck(this, LiTKansaiSplash);

    _this = _super.apply(this, arguments);
    _this.isSplashing = true;
    return _this;
  }

  _createClass(LiTKansaiSplash, [{
    key: "onCompleted",
    value: function onCompleted() {
      var _this2 = this;

      setTimeout(function () {
        if (!_this2.notfound) _this2.isSplashing = false;
      }, 200);
    }
  }]);

  return LiTKansaiSplash;
}(external_commonjs_vue_commonjs2_vue_root_Vue_default.a);

__decorate([Prop({
  default: false
})], LiTKansaiSplashvue_type_script_lang_ts_LiTKansaiSplash.prototype, "notfound", void 0);

LiTKansaiSplashvue_type_script_lang_ts_LiTKansaiSplash = __decorate([vue_class_component_esm({
  components: {
    LiTKansaiLogo: components_LiTKansaiLogo
  }
})], LiTKansaiSplashvue_type_script_lang_ts_LiTKansaiSplash);
/* harmony default export */ var LiTKansaiSplashvue_type_script_lang_ts_ = (LiTKansaiSplashvue_type_script_lang_ts_LiTKansaiSplash);
// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/src/components/LiTKansaiSplash.vue?vue&type=script&lang=ts&
 /* harmony default export */ var components_LiTKansaiSplashvue_type_script_lang_ts_ = (LiTKansaiSplashvue_type_script_lang_ts_); 
// EXTERNAL MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/src/components/LiTKansaiSplash.vue?vue&type=style&index=0&id=5f337128&scoped=true&lang=css&
var LiTKansaiSplashvue_type_style_index_0_id_5f337128_scoped_true_lang_css_ = __webpack_require__("f49d");

// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/src/components/LiTKansaiSplash.vue






/* normalize component */

var LiTKansaiSplash_component = normalizeComponent(
  components_LiTKansaiSplashvue_type_script_lang_ts_,
  LiTKansaiSplashvue_type_template_id_5f337128_scoped_true_render,
  LiTKansaiSplashvue_type_template_id_5f337128_scoped_true_staticRenderFns,
  false,
  null,
  "5f337128",
  null
  
)

/* harmony default export */ var components_LiTKansaiSplash = (LiTKansaiSplash_component.exports);
// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/src/main.ts



/*
 * Copyright 2020 LiT Kansai
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */



function install(vue, options) {
  var components = {
    LiTKansaiLogo: components_LiTKansaiLogo,
    LiTKansaiSplash: components_LiTKansaiSplash
  };

  for (var _i = 0, _Object$entries = Object.entries(components); _i < _Object$entries.length; _i++) {
    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),
        name = _Object$entries$_i[0],
        c = _Object$entries$_i[1];

    vue.component(name, c);
  }
}

/* harmony default export */ var main = ({
  install: install
});

// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/@vue/cli-service/lib/commands/build/entry-lib.js


/* harmony default export */ var entry_lib = __webpack_exports__["default"] = (main);



/***/ }),

/***/ "4bc9":
/***/ (function(module, exports, __webpack_require__) {

var aFunction = __webpack_require__("3fca");

// optional / simple context binding
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 0: return function () {
      return fn.call(that);
    };
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "4c09":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("5790");
var getOwnPropertyDescriptor = __webpack_require__("8408").f;
var createNonEnumerableProperty = __webpack_require__("d60b");
var redefine = __webpack_require__("619b");
var setGlobal = __webpack_require__("e230");
var copyConstructorProperties = __webpack_require__("ab49");
var isForced = __webpack_require__("a865");

/*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
*/
module.exports = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global;
  } else if (STATIC) {
    target = global[TARGET] || setGlobal(TARGET, {});
  } else {
    target = (global[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.noTargetGet) {
      descriptor = getOwnPropertyDescriptor(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty === typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty(sourceProperty, 'sham', true);
    }
    // extend global
    redefine(target, key, sourceProperty, options);
  }
};


/***/ }),

/***/ "5285":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("eb54");
var defineProperties = __webpack_require__("81f5");
var enumBugKeys = __webpack_require__("4a24");
var hiddenKeys = __webpack_require__("a0bb");
var html = __webpack_require__("153c");
var documentCreateElement = __webpack_require__("db86");
var sharedKey = __webpack_require__("03b4");

var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO = sharedKey('IE_PROTO');

var EmptyConstructor = function () { /* empty */ };

var scriptTag = function (content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX = function (activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak
  return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  // https://github.com/zloirock/core-js/issues/475
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;
var NullProtoObject = function () {
  try {
    /* global ActiveXObject */
    activeXDocument = document.domain && new ActiveXObject('htmlfile');
  } catch (error) { /* ignore */ }
  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();
  var length = enumBugKeys.length;
  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
  return NullProtoObject();
};

hiddenKeys[IE_PROTO] = true;

// `Object.create` method
// https://tc39.github.io/ecma262/#sec-object.create
module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = NullProtoObject();
  return Properties === undefined ? result : defineProperties(result, Properties);
};


/***/ }),

/***/ "5790":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var check = function (it) {
  return it && it.Math == Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
module.exports =
  // eslint-disable-next-line no-undef
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  check(typeof self == 'object' && self) ||
  check(typeof global == 'object' && global) ||
  // eslint-disable-next-line no-new-func
  Function('return this')();

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("3678")))

/***/ }),

/***/ "5b59":
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "5cb4":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("c209");

var ITERATOR = wellKnownSymbol('iterator');
var SAFE_CLOSING = false;

try {
  var called = 0;
  var iteratorWithReturn = {
    next: function () {
      return { done: !!called++ };
    },
    'return': function () {
      SAFE_CLOSING = true;
    }
  };
  iteratorWithReturn[ITERATOR] = function () {
    return this;
  };
  // eslint-disable-next-line no-throw-literal
  Array.from(iteratorWithReturn, function () { throw 2; });
} catch (error) { /* empty */ }

module.exports = function (exec, SKIP_CLOSING) {
  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
  var ITERATION_SUPPORT = false;
  try {
    var object = {};
    object[ITERATOR] = function () {
      return {
        next: function () {
          return { done: ITERATION_SUPPORT = true };
        }
      };
    };
    exec(object);
  } catch (error) { /* empty */ }
  return ITERATION_SUPPORT;
};


/***/ }),

/***/ "607b":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("f183");

module.exports = function (it) {
  if (!isObject(it) && it !== null) {
    throw TypeError("Can't set " + String(it) + ' as a prototype');
  } return it;
};


/***/ }),

/***/ "619b":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("5790");
var createNonEnumerableProperty = __webpack_require__("d60b");
var has = __webpack_require__("db1b");
var setGlobal = __webpack_require__("e230");
var inspectSource = __webpack_require__("b8e5");
var InternalStateModule = __webpack_require__("797b");

var getInternalState = InternalStateModule.get;
var enforceInternalState = InternalStateModule.enforce;
var TEMPLATE = String(String).split('String');

(module.exports = function (O, key, value, options) {
  var unsafe = options ? !!options.unsafe : false;
  var simple = options ? !!options.enumerable : false;
  var noTargetGet = options ? !!options.noTargetGet : false;
  if (typeof value == 'function') {
    if (typeof key == 'string' && !has(value, 'name')) createNonEnumerableProperty(value, 'name', key);
    enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');
  }
  if (O === global) {
    if (simple) O[key] = value;
    else setGlobal(key, value);
    return;
  } else if (!unsafe) {
    delete O[key];
  } else if (!noTargetGet && O[key]) {
    simple = true;
  }
  if (simple) O[key] = value;
  else createNonEnumerableProperty(O, key, value);
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, 'toString', function toString() {
  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);
});


/***/ }),

/***/ "61f4":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("6a1f");
var defineProperty = __webpack_require__("64da").f;

var FunctionPrototype = Function.prototype;
var FunctionPrototypeToString = FunctionPrototype.toString;
var nameRE = /^\s*function ([^ (]*)/;
var NAME = 'name';

// Function instances `.name` property
// https://tc39.github.io/ecma262/#sec-function-instances-name
if (DESCRIPTORS && !(NAME in FunctionPrototype)) {
  defineProperty(FunctionPrototype, NAME, {
    configurable: true,
    get: function () {
      try {
        return FunctionPrototypeToString.call(this).match(nameRE)[1];
      } catch (error) {
        return '';
      }
    }
  });
}


/***/ }),

/***/ "63a8":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("ae2d");

var max = Math.max;
var min = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
module.exports = function (index, length) {
  var integer = toInteger(index);
  return integer < 0 ? max(integer + length, 0) : min(integer, length);
};


/***/ }),

/***/ "63aa":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var getPrototypeOf = __webpack_require__("8e7d");
var createNonEnumerableProperty = __webpack_require__("d60b");
var has = __webpack_require__("db1b");
var wellKnownSymbol = __webpack_require__("c209");
var IS_PURE = __webpack_require__("eb36");

var ITERATOR = wellKnownSymbol('iterator');
var BUGGY_SAFARI_ITERATORS = false;

var returnThis = function () { return this; };

// `%IteratorPrototype%` object
// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;

if ([].keys) {
  arrayIterator = [].keys();
  // Safari 8 has buggy iterators w/o `next`
  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
  else {
    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
  }
}

if (IteratorPrototype == undefined) IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
if (!IS_PURE && !has(IteratorPrototype, ITERATOR)) {
  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);
}

module.exports = {
  IteratorPrototype: IteratorPrototype,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
};


/***/ }),

/***/ "64da":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("6a1f");
var IE8_DOM_DEFINE = __webpack_require__("1f64");
var anObject = __webpack_require__("eb54");
var toPrimitive = __webpack_require__("a759");

var nativeDefineProperty = Object.defineProperty;

// `Object.defineProperty` method
// https://tc39.github.io/ecma262/#sec-object.defineproperty
exports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return nativeDefineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "65bd":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var bind = __webpack_require__("4bc9");
var toObject = __webpack_require__("7cbc");
var callWithSafeIterationClosing = __webpack_require__("2564");
var isArrayIteratorMethod = __webpack_require__("ba72");
var toLength = __webpack_require__("c4b4");
var createProperty = __webpack_require__("103d");
var getIteratorMethod = __webpack_require__("9d93");

// `Array.from` method implementation
// https://tc39.github.io/ecma262/#sec-array.from
module.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
  var O = toObject(arrayLike);
  var C = typeof this == 'function' ? this : Array;
  var argumentsLength = arguments.length;
  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
  var mapping = mapfn !== undefined;
  var iteratorMethod = getIteratorMethod(O);
  var index = 0;
  var length, result, step, iterator, next, value;
  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);
  // if the target is not iterable or it's an array with the default iterator - use a simple case
  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {
    iterator = iteratorMethod.call(O);
    next = iterator.next;
    result = new C();
    for (;!(step = next.call(iterator)).done; index++) {
      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;
      createProperty(result, index, value);
    }
  } else {
    length = toLength(O.length);
    result = new C(length);
    for (;length > index; index++) {
      value = mapping ? mapfn(O[index], index) : O[index];
      createProperty(result, index, value);
    }
  }
  result.length = index;
  return result;
};


/***/ }),

/***/ "6a1f":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("83ab");

// Thank's IE8 for his funny defineProperty
module.exports = !fails(function () {
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
});


/***/ }),

/***/ "6bd0":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("c209");
var create = __webpack_require__("5285");
var definePropertyModule = __webpack_require__("64da");

var UNSCOPABLES = wellKnownSymbol('unscopables');
var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype[UNSCOPABLES] == undefined) {
  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {
    configurable: true,
    value: create(null)
  });
}

// add a key to Array.prototype[@@unscopables]
module.exports = function (key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "6c66":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("4c09");
var $entries = __webpack_require__("a4d8").entries;

// `Object.entries` method
// https://tc39.github.io/ecma262/#sec-object.entries
$({ target: 'Object', stat: true }, {
  entries: function entries(O) {
    return $entries(O);
  }
});


/***/ }),

/***/ "6cc8":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("83ab");
var wellKnownSymbol = __webpack_require__("c209");
var V8_VERSION = __webpack_require__("9e08");

var SPECIES = wellKnownSymbol('species');

module.exports = function (METHOD_NAME) {
  // We can't use this feature detection in V8 since it causes
  // deoptimization and serious performance degradation
  // https://github.com/zloirock/core-js/issues/677
  return V8_VERSION >= 51 || !fails(function () {
    var array = [];
    var constructor = array.constructor = {};
    constructor[SPECIES] = function () {
      return { foo: 1 };
    };
    return array[METHOD_NAME](Boolean).foo !== 1;
  });
};


/***/ }),

/***/ "7674":
/***/ (function(module, exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__("a0c9");
var enumBugKeys = __webpack_require__("4a24");

var hiddenKeys = enumBugKeys.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertynames
exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys(O, hiddenKeys);
};


/***/ }),

/***/ "782a":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;(typeof navigator !== "undefined") && (function(root, factory) {
    if (true) {
        !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
            return factory(root);
        }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    } else {}
}((window || {}), function(window) {
	"use strict";
var svgNS = "http://www.w3.org/2000/svg";

var locationHref = '';

var initialDefaultFrame = -999999;

var subframeEnabled = true;
var expressionsPlugin;
var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
var cachedColors = {};
var bm_rounder = Math.round;
var bm_rnd;
var bm_pow = Math.pow;
var bm_sqrt = Math.sqrt;
var bm_abs = Math.abs;
var bm_floor = Math.floor;
var bm_max = Math.max;
var bm_min = Math.min;
var blitter = 10;

var BMMath = {};
(function(){
    var propertyNames = ["abs", "acos", "acosh", "asin", "asinh", "atan", "atanh", "atan2", "ceil", "cbrt", "expm1", "clz32", "cos", "cosh", "exp", "floor", "fround", "hypot", "imul", "log", "log1p", "log2", "log10", "max", "min", "pow", "random", "round", "sign", "sin", "sinh", "sqrt", "tan", "tanh", "trunc", "E", "LN10", "LN2", "LOG10E", "LOG2E", "PI", "SQRT1_2", "SQRT2"];
    var i, len = propertyNames.length;
    for(i=0;i<len;i+=1){
        BMMath[propertyNames[i]] = Math[propertyNames[i]];
    }
}());

function ProjectInterface(){return {};}

BMMath.random = Math.random;
BMMath.abs = function(val){
    var tOfVal = typeof val;
    if(tOfVal === 'object' && val.length){
        var absArr = createSizedArray(val.length);
        var i, len = val.length;
        for(i=0;i<len;i+=1){
            absArr[i] = Math.abs(val[i]);
        }
        return absArr;
    }
    return Math.abs(val);

};
var defaultCurveSegments = 150;
var degToRads = Math.PI/180;
var roundCorner = 0.5519;

function roundValues(flag){
    if(flag){
        bm_rnd = Math.round;
    }else{
        bm_rnd = function(val){
            return val;
        };
    }
}
roundValues(false);

function styleDiv(element){
    element.style.position = 'absolute';
    element.style.top = 0;
    element.style.left = 0;
    element.style.display = 'block';
    element.style.transformOrigin = element.style.webkitTransformOrigin = '0 0';
    element.style.backfaceVisibility  = element.style.webkitBackfaceVisibility = 'visible';
    element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle = "preserve-3d";
}

function BMEnterFrameEvent(type, currentTime, totalTime, frameMultiplier){
    this.type = type;
    this.currentTime = currentTime;
    this.totalTime = totalTime;
    this.direction = frameMultiplier < 0 ? -1 : 1;
}

function BMCompleteEvent(type, frameMultiplier){
    this.type = type;
    this.direction = frameMultiplier < 0 ? -1 : 1;
}

function BMCompleteLoopEvent(type, totalLoops, currentLoop, frameMultiplier){
    this.type = type;
    this.currentLoop = currentLoop;
    this.totalLoops = totalLoops;
    this.direction = frameMultiplier < 0 ? -1 : 1;
}

function BMSegmentStartEvent(type, firstFrame, totalFrames){
    this.type = type;
    this.firstFrame = firstFrame;
    this.totalFrames = totalFrames;
}

function BMDestroyEvent(type, target){
    this.type = type;
    this.target = target;
}

function BMRenderFrameErrorEvent(nativeError, currentTime) {
    this.type = 'renderFrameError';
    this.nativeError = nativeError;
    this.currentTime = currentTime;
}

function BMConfigErrorEvent(nativeError) {
    this.type = 'configError';
    this.nativeError = nativeError;
}

function BMAnimationConfigErrorEvent(type, nativeError) {
    this.type = type;
    this.nativeError = nativeError;
    this.currentTime = currentTime;
}

var createElementID = (function(){
    var _count = 0;
    return function createID() {
        return '__lottie_element_' + ++_count
    }
}())

function HSVtoRGB(h, s, v) {
    var r, g, b, i, f, p, q, t;
    i = Math.floor(h * 6);
    f = h * 6 - i;
    p = v * (1 - s);
    q = v * (1 - f * s);
    t = v * (1 - (1 - f) * s);
    switch (i % 6) {
        case 0: r = v; g = t; b = p; break;
        case 1: r = q; g = v; b = p; break;
        case 2: r = p; g = v; b = t; break;
        case 3: r = p; g = q; b = v; break;
        case 4: r = t; g = p; b = v; break;
        case 5: r = v; g = p; b = q; break;
    }
    return [ r,
        g,
         b ];
}

function RGBtoHSV(r, g, b) {
    var max = Math.max(r, g, b), min = Math.min(r, g, b),
        d = max - min,
        h,
        s = (max === 0 ? 0 : d / max),
        v = max / 255;

    switch (max) {
        case min: h = 0; break;
        case r: h = (g - b) + d * (g < b ? 6: 0); h /= 6 * d; break;
        case g: h = (b - r) + d * 2; h /= 6 * d; break;
        case b: h = (r - g) + d * 4; h /= 6 * d; break;
    }

    return [
         h,
         s,
         v
    ];
}

function addSaturationToRGB(color,offset){
    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);
    hsv[1] += offset;
    if (hsv[1] > 1) {
        hsv[1] = 1;
    }
    else if (hsv[1] <= 0) {
        hsv[1] = 0;
    }
    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);
}

function addBrightnessToRGB(color,offset){
    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);
    hsv[2] += offset;
    if (hsv[2] > 1) {
        hsv[2] = 1;
    }
    else if (hsv[2] < 0) {
        hsv[2] = 0;
    }
    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);
}

function addHueToRGB(color,offset) {
    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);
    hsv[0] += offset/360;
    if (hsv[0] > 1) {
        hsv[0] -= 1;
    }
    else if (hsv[0] < 0) {
        hsv[0] += 1;
    }
    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);
}

var rgbToHex = (function(){
    var colorMap = [];
    var i;
    var hex;
    for(i=0;i<256;i+=1){
        hex = i.toString(16);
        colorMap[i] = hex.length == 1 ? '0' + hex : hex;
    }

    return function(r, g, b) {
        if(r<0){
            r = 0;
        }
        if(g<0){
            g = 0;
        }
        if(b<0){
            b = 0;
        }
        return '#' + colorMap[r] + colorMap[g] + colorMap[b];
    };
}());
function BaseEvent(){}
BaseEvent.prototype = {
	triggerEvent: function (eventName, args) {
	    if (this._cbs[eventName]) {
	        var len = this._cbs[eventName].length;
	        for (var i = 0; i < len; i++){
	            this._cbs[eventName][i](args);
	        }
	    }
	},
	addEventListener: function (eventName, callback) {
	    if (!this._cbs[eventName]){
	        this._cbs[eventName] = [];
	    }
	    this._cbs[eventName].push(callback);

		return function() {
			this.removeEventListener(eventName, callback);
		}.bind(this);
	},
	removeEventListener: function (eventName,callback){
	    if (!callback){
	        this._cbs[eventName] = null;
	    }else if(this._cbs[eventName]){
	        var i = 0, len = this._cbs[eventName].length;
	        while(i<len){
	            if(this._cbs[eventName][i] === callback){
	                this._cbs[eventName].splice(i,1);
	                i -=1;
	                len -= 1;
	            }
	            i += 1;
	        }
	        if(!this._cbs[eventName].length){
	            this._cbs[eventName] = null;
	        }
	    }
	}
};
var createTypedArray = (function(){
	function createRegularArray(type, len){
		var i = 0, arr = [], value;
		switch(type) {
			case 'int16':
			case 'uint8c':
				value = 1;
				break;
			default:
				value = 1.1;
				break;
		}
		for(i = 0; i < len; i += 1) {
			arr.push(value);
		}
		return arr;
	}
	function createTypedArray(type, len){
		if(type === 'float32') {
			return new Float32Array(len);
		} else if(type === 'int16') {
			return new Int16Array(len);
		} else if(type === 'uint8c') {
			return new Uint8ClampedArray(len);
		}
	}
	if(typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {
		return createTypedArray;
	} else {
		return createRegularArray;
	}
}());

function createSizedArray(len) {
	return Array.apply(null,{length:len});
}
function createNS(type) {
	//return {appendChild:function(){},setAttribute:function(){},style:{}}
	return document.createElementNS(svgNS, type);
}
function createTag(type) {
	//return {appendChild:function(){},setAttribute:function(){},style:{}}
	return document.createElement(type);
}
function DynamicPropertyContainer(){};
DynamicPropertyContainer.prototype = {
	addDynamicProperty: function(prop) {
		if(this.dynamicProperties.indexOf(prop) === -1) {
	        this.dynamicProperties.push(prop);
	        this.container.addDynamicProperty(this);
	    	this._isAnimated = true;
	    }
	},
	iterateDynamicProperties: function(){
	    this._mdf = false;
	    var i, len = this.dynamicProperties.length;
	    for(i=0;i<len;i+=1){
	        this.dynamicProperties[i].getValue();
	        if(this.dynamicProperties[i]._mdf) {
	            this._mdf = true;
	        }
	    }
	},
	initDynamicPropertyContainer: function(container){
	    this.container = container;
	    this.dynamicProperties = [];
	    this._mdf = false;
	    this._isAnimated = false;
	}
}
var getBlendMode = (function() {

	var blendModeEnums = {
        0:'source-over',
        1:'multiply',
        2:'screen',
        3:'overlay',
        4:'darken',
        5:'lighten',
        6:'color-dodge',
        7:'color-burn',
        8:'hard-light',
        9:'soft-light',
        10:'difference',
        11:'exclusion',
        12:'hue',
        13:'saturation',
        14:'color',
        15:'luminosity'
    }

	return function(mode) {
		return blendModeEnums[mode] || '';
	}
}())
/*!
 Transformation Matrix v2.0
 (c) Epistemex 2014-2015
 www.epistemex.com
 By Ken Fyrstenberg
 Contributions by leeoniya.
 License: MIT, header required.
 */

/**
 * 2D transformation matrix object initialized with identity matrix.
 *
 * The matrix can synchronize a canvas context by supplying the context
 * as an argument, or later apply current absolute transform to an
 * existing context.
 *
 * All values are handled as floating point values.
 *
 * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix
 * @prop {number} a - scale x
 * @prop {number} b - shear y
 * @prop {number} c - shear x
 * @prop {number} d - scale y
 * @prop {number} e - translate x
 * @prop {number} f - translate y
 * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context
 * @constructor
 */

var Matrix = (function(){

    var _cos = Math.cos;
    var _sin = Math.sin;
    var _tan = Math.tan;
    var _rnd = Math.round;

    function reset(){
        this.props[0] = 1;
        this.props[1] = 0;
        this.props[2] = 0;
        this.props[3] = 0;
        this.props[4] = 0;
        this.props[5] = 1;
        this.props[6] = 0;
        this.props[7] = 0;
        this.props[8] = 0;
        this.props[9] = 0;
        this.props[10] = 1;
        this.props[11] = 0;
        this.props[12] = 0;
        this.props[13] = 0;
        this.props[14] = 0;
        this.props[15] = 1;
        return this;
    }

    function rotate(angle) {
        if(angle === 0){
            return this;
        }
        var mCos = _cos(angle);
        var mSin = _sin(angle);
        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);
    }

    function rotateX(angle){
        if(angle === 0){
            return this;
        }
        var mCos = _cos(angle);
        var mSin = _sin(angle);
        return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin,  mCos, 0, 0, 0, 0, 1);
    }

    function rotateY(angle){
        if(angle === 0){
            return this;
        }
        var mCos = _cos(angle);
        var mSin = _sin(angle);
        return this._t(mCos,  0,  mSin, 0, 0, 1, 0, 0, -mSin,  0,  mCos, 0, 0, 0, 0, 1);
    }

    function rotateZ(angle){
        if(angle === 0){
            return this;
        }
        var mCos = _cos(angle);
        var mSin = _sin(angle);
        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);
    }

    function shear(sx,sy){
        return this._t(1, sy, sx, 1, 0, 0);
    }

    function skew(ax, ay){
        return this.shear(_tan(ax), _tan(ay));
    }

    function skewFromAxis(ax, angle){
        var mCos = _cos(angle);
        var mSin = _sin(angle);
        return this._t(mCos, mSin,  0, 0, -mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)
            ._t(1, 0,  0, 0, _tan(ax),  1, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)
            ._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);
        //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);
    }

    function scale(sx, sy, sz) {
        if(!sz && sz !== 0) {
            sz = 1;
        }
        if(sx === 1 && sy === 1 && sz === 1){
            return this;
        }
        return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);
    }

    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
        this.props[0] = a;
        this.props[1] = b;
        this.props[2] = c;
        this.props[3] = d;
        this.props[4] = e;
        this.props[5] = f;
        this.props[6] = g;
        this.props[7] = h;
        this.props[8] = i;
        this.props[9] = j;
        this.props[10] = k;
        this.props[11] = l;
        this.props[12] = m;
        this.props[13] = n;
        this.props[14] = o;
        this.props[15] = p;
        return this;
    }

    function translate(tx, ty, tz) {
        tz = tz || 0;
        if(tx !== 0 || ty !== 0 || tz !== 0){
            return this._t(1,0,0,0,0,1,0,0,0,0,1,0,tx,ty,tz,1);
        }
        return this;
    }

    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {

        var _p = this.props;

        if(a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0){
            //NOTE: commenting this condition because TurboFan deoptimizes code when present
            //if(m2 !== 0 || n2 !== 0 || o2 !== 0){
                _p[12] = _p[12] * a2 + _p[15] * m2;
                _p[13] = _p[13] * f2 + _p[15] * n2;
                _p[14] = _p[14] * k2 + _p[15] * o2;
                _p[15] = _p[15] * p2;
            //}
            this._identityCalculated = false;
            return this;
        }

        var a1 = _p[0];
        var b1 = _p[1];
        var c1 = _p[2];
        var d1 = _p[3];
        var e1 = _p[4];
        var f1 = _p[5];
        var g1 = _p[6];
        var h1 = _p[7];
        var i1 = _p[8];
        var j1 = _p[9];
        var k1 = _p[10];
        var l1 = _p[11];
        var m1 = _p[12];
        var n1 = _p[13];
        var o1 = _p[14];
        var p1 = _p[15];

        /* matrix order (canvas compatible):
         * ace
         * bdf
         * 001
         */
        _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;
        _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2 ;
        _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2 ;
        _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2 ;

        _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2 ;
        _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2 ;
        _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2 ;
        _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2 ;

        _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2 ;
        _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2 ;
        _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2 ;
        _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2 ;

        _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2 ;
        _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2 ;
        _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2 ;
        _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2 ;

        this._identityCalculated = false;
        return this;
    }

    function isIdentity() {
        if(!this._identityCalculated){
            this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);
            this._identityCalculated = true;
        }
        return this._identity;
    }

    function equals(matr){
        var i = 0;
        while (i < 16) {
            if(matr.props[i] !== this.props[i]) {
                return false;
            }
            i+=1;
        }
        return true;
    }

    function clone(matr){
        var i;
        for(i=0;i<16;i+=1){
            matr.props[i] = this.props[i];
        }
    }

    function cloneFromProps(props){
        var i;
        for(i=0;i<16;i+=1){
            this.props[i] = props[i];
        }
    }

    function applyToPoint(x, y, z) {

        return {
            x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],
            y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],
            z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]
        };
        /*return {
         x: x * me.a + y * me.c + me.e,
         y: x * me.b + y * me.d + me.f
         };*/
    }
    function applyToX(x, y, z) {
        return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];
    }
    function applyToY(x, y, z) {
        return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];
    }
    function applyToZ(x, y, z) {
        return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];
    }

    function getInverseMatrix() {
        var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];
        var a = this.props[5]/determinant;
        var b = - this.props[1]/determinant;
        var c = - this.props[4]/determinant;
        var d = this.props[0]/determinant;
        var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12])/determinant;
        var f = - (this.props[0] * this.props[13] - this.props[1] * this.props[12])/determinant;
        var inverseMatrix = new Matrix();
        inverseMatrix.props[0] = a;
        inverseMatrix.props[1] = b;
        inverseMatrix.props[4] = c;
        inverseMatrix.props[5] = d;
        inverseMatrix.props[12] = e;
        inverseMatrix.props[13] = f;
        return inverseMatrix;
    }

    function inversePoint(pt) {
        var inverseMatrix = this.getInverseMatrix();
        return inverseMatrix.applyToPointArray(pt[0], pt[1], pt[2] || 0)
    }

    function inversePoints(pts){
        var i, len = pts.length, retPts = [];
        for(i=0;i<len;i+=1){
            retPts[i] = inversePoint(pts[i]);
        }
        return retPts;
    }

    function applyToTriplePoints(pt1, pt2, pt3) {
        var arr = createTypedArray('float32', 6);
        if(this.isIdentity()) {
            arr[0] = pt1[0];
            arr[1] = pt1[1];
            arr[2] = pt2[0];
            arr[3] = pt2[1];
            arr[4] = pt3[0];
            arr[5] = pt3[1];
        } else {
            var p0 = this.props[0], p1 = this.props[1], p4 = this.props[4], p5 = this.props[5], p12 = this.props[12], p13 = this.props[13];
            arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;
            arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;
            arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;
            arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;
            arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;
            arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;
        }
        return arr;
    }

    function applyToPointArray(x,y,z){
        var arr;
        if(this.isIdentity()) {
            arr = [x,y,z];
        } else {
            arr = [
                x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],
                x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],
                x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]
            ];
        }
        return arr;
    }

    function applyToPointStringified(x, y) {
        if(this.isIdentity()) {
            return x + ',' + y;
        }
        var _p = this.props;
        return Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100+','+ Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100;
    }

    function toCSS() {
        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.
        /*if(this.isIdentity()) {
            return '';
        }*/
        var i = 0;
        var props = this.props;
        var cssValue = 'matrix3d(';
        var v = 10000;
        while(i<16){
            cssValue += _rnd(props[i]*v)/v;
            cssValue += i === 15 ? ')':',';
            i += 1;
        }
        return cssValue;
    }

    function roundMatrixProperty(val) {
        var v = 10000;
        if((val < 0.000001 && val > 0) || (val > -0.000001 && val < 0)) {
            return _rnd(val * v) / v;
        }
        return val;
    }

    function to2dCSS() {
        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.
        /*if(this.isIdentity()) {
            return '';
        }*/
        var props = this.props;
        var _a = roundMatrixProperty(props[0]);
        var _b = roundMatrixProperty(props[1]);
        var _c = roundMatrixProperty(props[4]);
        var _d = roundMatrixProperty(props[5]);
        var _e = roundMatrixProperty(props[12]);
        var _f = roundMatrixProperty(props[13]);
        return "matrix(" + _a + ',' + _b + ',' + _c + ',' + _d + ',' + _e + ',' + _f + ")";
    }

    return function(){
        this.reset = reset;
        this.rotate = rotate;
        this.rotateX = rotateX;
        this.rotateY = rotateY;
        this.rotateZ = rotateZ;
        this.skew = skew;
        this.skewFromAxis = skewFromAxis;
        this.shear = shear;
        this.scale = scale;
        this.setTransform = setTransform;
        this.translate = translate;
        this.transform = transform;
        this.applyToPoint = applyToPoint;
        this.applyToX = applyToX;
        this.applyToY = applyToY;
        this.applyToZ = applyToZ;
        this.applyToPointArray = applyToPointArray;
        this.applyToTriplePoints = applyToTriplePoints;
        this.applyToPointStringified = applyToPointStringified;
        this.toCSS = toCSS;
        this.to2dCSS = to2dCSS;
        this.clone = clone;
        this.cloneFromProps = cloneFromProps;
        this.equals = equals;
        this.inversePoints = inversePoints;
        this.inversePoint = inversePoint;
        this.getInverseMatrix = getInverseMatrix;
        this._t = this.transform;
        this.isIdentity = isIdentity;
        this._identity = true;
        this._identityCalculated = false;

        this.props = createTypedArray('float32', 16);
        this.reset();
    };
}());

/*
 Copyright 2014 David Bau.

 Permission is hereby granted, free of charge, to any person obtaining
 a copy of this software and associated documentation files (the
 "Software"), to deal in the Software without restriction, including
 without limitation the rights to use, copy, modify, merge, publish,
 distribute, sublicense, and/or sell copies of the Software, and to
 permit persons to whom the Software is furnished to do so, subject to
 the following conditions:

 The above copyright notice and this permission notice shall be
 included in all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

 */

(function (pool, math) {
//
// The following constants are related to IEEE 754 limits.
//
    var global = this,
        width = 256,        // each RC4 output is 0 <= x < 256
        chunks = 6,         // at least six RC4 outputs for each double
        digits = 52,        // there are 52 significant digits in a double
        rngname = 'random', // rngname: name for Math.random and Math.seedrandom
        startdenom = math.pow(width, chunks),
        significance = math.pow(2, digits),
        overflow = significance * 2,
        mask = width - 1,
        nodecrypto;         // node.js crypto module, initialized at the bottom.

//
// seedrandom()
// This is the seedrandom function described above.
//
    function seedrandom(seed, options, callback) {
        var key = [];
        options = (options === true) ? { entropy: true } : (options || {});

        // Flatten the seed string or build one from local entropy if needed.
        var shortseed = mixkey(flatten(
            options.entropy ? [seed, tostring(pool)] :
                (seed === null) ? autoseed() : seed, 3), key);

        // Use the seed to initialize an ARC4 generator.
        var arc4 = new ARC4(key);

        // This function returns a random double in [0, 1) that contains
        // randomness in every bit of the mantissa of the IEEE 754 value.
        var prng = function() {
            var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48
                d = startdenom,                 //   and denominator d = 2 ^ 48.
                x = 0;                          //   and no 'extra last byte'.
            while (n < significance) {          // Fill up all significant digits by
                n = (n + x) * width;              //   shifting numerator and
                d *= width;                       //   denominator and generating a
                x = arc4.g(1);                    //   new least-significant-byte.
            }
            while (n >= overflow) {             // To avoid rounding up, before adding
                n /= 2;                           //   last byte, shift everything
                d /= 2;                           //   right using integer math until
                x >>>= 1;                         //   we have exactly the desired bits.
            }
            return (n + x) / d;                 // Form the number within [0, 1).
        };

        prng.int32 = function() { return arc4.g(4) | 0; };
        prng.quick = function() { return arc4.g(4) / 0x100000000; };
        prng.double = prng;

        // Mix the randomness into accumulated entropy.
        mixkey(tostring(arc4.S), pool);

        // Calling convention: what to return as a function of prng, seed, is_math.
        return (options.pass || callback ||
        function(prng, seed, is_math_call, state) {
            if (state) {
                // Load the arc4 state from the given state if it has an S array.
                if (state.S) { copy(state, arc4); }
                // Only provide the .state method if requested via options.state.
                prng.state = function() { return copy(arc4, {}); };
            }

            // If called as a method of Math (Math.seedrandom()), mutate
            // Math.random because that is how seedrandom.js has worked since v1.0.
            if (is_math_call) { math[rngname] = prng; return seed; }

            // Otherwise, it is a newer calling convention, so return the
            // prng directly.
            else return prng;
        })(
            prng,
            shortseed,
            'global' in options ? options.global : (this == math),
            options.state);
    }
    math['seed' + rngname] = seedrandom;

//
// ARC4
//
// An ARC4 implementation.  The constructor takes a key in the form of
// an array of at most (width) integers that should be 0 <= x < (width).
//
// The g(count) method returns a pseudorandom integer that concatenates
// the next (count) outputs from ARC4.  Its return value is a number x
// that is in the range 0 <= x < (width ^ count).
//
    function ARC4(key) {
        var t, keylen = key.length,
            me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];

        // The empty key [] is treated as [0].
        if (!keylen) { key = [keylen++]; }

        // Set up S using the standard key scheduling algorithm.
        while (i < width) {
            s[i] = i++;
        }
        for (i = 0; i < width; i++) {
            s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];
            s[j] = t;
        }

        // The "g" method returns the next (count) outputs as one number.
        me.g = function(count) {
            // Using instance members instead of closure state nearly doubles speed.
            var t, r = 0,
                i = me.i, j = me.j, s = me.S;
            while (count--) {
                t = s[i = mask & (i + 1)];
                r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];
            }
            me.i = i; me.j = j;
            return r;
            // For robust unpredictability, the function call below automatically
            // discards an initial batch of values.  This is called RC4-drop[256].
            // See http://google.com/search?q=rsa+fluhrer+response&btnI
        };
    }

//
// copy()
// Copies internal state of ARC4 to or from a plain object.
//
    function copy(f, t) {
        t.i = f.i;
        t.j = f.j;
        t.S = f.S.slice();
        return t;
    }

//
// flatten()
// Converts an object tree to nested arrays of strings.
//
    function flatten(obj, depth) {
        var result = [], typ = (typeof obj), prop;
        if (depth && typ == 'object') {
            for (prop in obj) {
                try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}
            }
        }
        return (result.length ? result : typ == 'string' ? obj : obj + '\0');
    }

//
// mixkey()
// Mixes a string seed into a key that is an array of integers, and
// returns a shortened string seed that is equivalent to the result key.
//
    function mixkey(seed, key) {
        var stringseed = seed + '', smear, j = 0;
        while (j < stringseed.length) {
            key[mask & j] =
                mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));
        }
        return tostring(key);
    }

//
// autoseed()
// Returns an object for autoseeding, using window.crypto and Node crypto
// module if available.
//
    function autoseed() {
        try {
            if (nodecrypto) { return tostring(nodecrypto.randomBytes(width)); }
            var out = new Uint8Array(width);
            (global.crypto || global.msCrypto).getRandomValues(out);
            return tostring(out);
        } catch (e) {
            var browser = global.navigator,
                plugins = browser && browser.plugins;
            return [+new Date(), global, plugins, global.screen, tostring(pool)];
        }
    }

//
// tostring()
// Converts an array of charcodes to a string
//
    function tostring(a) {
        return String.fromCharCode.apply(0, a);
    }

//
// When seedrandom.js is loaded, we immediately mix a few bits
// from the built-in RNG into the entropy pool.  Because we do
// not want to interfere with deterministic PRNG state later,
// seedrandom will not call math.random on its own again after
// initialization.
//
    mixkey(math.random(), pool);

//
// Nodejs and AMD support: export the implementation as a module using
// either convention.
//

// End anonymous scope, and pass initial values.
})(
    [],     // pool: entropy pool starts empty
    BMMath    // math: package containing random, pow, and seedrandom
);
var BezierFactory = (function(){
    /**
     * BezierEasing - use bezier curve for transition easing function
     * by Gaëtan Renaudeau 2014 - 2015 – MIT License
     *
     * Credits: is based on Firefox's nsSMILKeySpline.cpp
     * Usage:
     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])
     * spline.get(x) => returns the easing value | x must be in [0, 1] range
     *
     */

        var ob = {};
    ob.getBezierEasing = getBezierEasing;
    var beziers = {};

    function getBezierEasing(a,b,c,d,nm){
        var str = nm || ('bez_' + a+'_'+b+'_'+c+'_'+d).replace(/\./g, 'p');
        if(beziers[str]){
            return beziers[str];
        }
        var bezEasing = new BezierEasing([a,b,c,d]);
        beziers[str] = bezEasing;
        return bezEasing;
    }

// These values are established by empiricism with tests (tradeoff: performance VS precision)
    var NEWTON_ITERATIONS = 4;
    var NEWTON_MIN_SLOPE = 0.001;
    var SUBDIVISION_PRECISION = 0.0000001;
    var SUBDIVISION_MAX_ITERATIONS = 10;

    var kSplineTableSize = 11;
    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);

    var float32ArraySupported = typeof Float32Array === "function";

    function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }
    function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }
    function C (aA1)      { return 3.0 * aA1; }

// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.
    function calcBezier (aT, aA1, aA2) {
        return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;
    }

// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.
    function getSlope (aT, aA1, aA2) {
        return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);
    }

    function binarySubdivide (aX, aA, aB, mX1, mX2) {
        var currentX, currentT, i = 0;
        do {
            currentT = aA + (aB - aA) / 2.0;
            currentX = calcBezier(currentT, mX1, mX2) - aX;
            if (currentX > 0.0) {
                aB = currentT;
            } else {
                aA = currentT;
            }
        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);
        return currentT;
    }

    function newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {
        for (var i = 0; i < NEWTON_ITERATIONS; ++i) {
            var currentSlope = getSlope(aGuessT, mX1, mX2);
            if (currentSlope === 0.0) return aGuessT;
            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
            aGuessT -= currentX / currentSlope;
        }
        return aGuessT;
    }

    /**
     * points is an array of [ mX1, mY1, mX2, mY2 ]
     */
    function BezierEasing (points) {
        this._p = points;
        this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);
        this._precomputed = false;

        this.get = this.get.bind(this);
    }

    BezierEasing.prototype = {

        get: function (x) {
            var mX1 = this._p[0],
                mY1 = this._p[1],
                mX2 = this._p[2],
                mY2 = this._p[3];
            if (!this._precomputed) this._precompute();
            if (mX1 === mY1 && mX2 === mY2) return x; // linear
            // Because JavaScript number are imprecise, we should guarantee the extremes are right.
            if (x === 0) return 0;
            if (x === 1) return 1;
            return calcBezier(this._getTForX(x), mY1, mY2);
        },

        // Private part

        _precompute: function () {
            var mX1 = this._p[0],
                mY1 = this._p[1],
                mX2 = this._p[2],
                mY2 = this._p[3];
            this._precomputed = true;
            if (mX1 !== mY1 || mX2 !== mY2)
                this._calcSampleValues();
        },

        _calcSampleValues: function () {
            var mX1 = this._p[0],
                mX2 = this._p[2];
            for (var i = 0; i < kSplineTableSize; ++i) {
                this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);
            }
        },

        /**
         * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.
         */
        _getTForX: function (aX) {
            var mX1 = this._p[0],
                mX2 = this._p[2],
                mSampleValues = this._mSampleValues;

            var intervalStart = 0.0;
            var currentSample = 1;
            var lastSample = kSplineTableSize - 1;

            for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {
                intervalStart += kSampleStepSize;
            }
            --currentSample;

            // Interpolate to provide an initial guess for t
            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample+1] - mSampleValues[currentSample]);
            var guessForT = intervalStart + dist * kSampleStepSize;

            var initialSlope = getSlope(guessForT, mX1, mX2);
            if (initialSlope >= NEWTON_MIN_SLOPE) {
                return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
            } else if (initialSlope === 0.0) {
                return guessForT;
            } else {
                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
            }
        }
    };

    return ob;

}());
(function () {
    var lastTime = 0;
    var vendors = ['ms', 'moz', 'webkit', 'o'];
    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {
        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];
        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];
    }
    if(!window.requestAnimationFrame)
        window.requestAnimationFrame = function (callback, element) {
            var currTime = new Date().getTime();
            var timeToCall = Math.max(0, 16 - (currTime - lastTime));
            var id = setTimeout(function () {
                    callback(currTime + timeToCall);
                },
                timeToCall);
            lastTime = currTime + timeToCall;
            return id;
        };
    if(!window.cancelAnimationFrame)
        window.cancelAnimationFrame = function (id) {
            clearTimeout(id);
        };
}());

function extendPrototype(sources,destination){
    var i, len = sources.length, sourcePrototype;
    for (i = 0;i < len;i += 1) {
        sourcePrototype = sources[i].prototype;
        for (var attr in sourcePrototype) {
            if (sourcePrototype.hasOwnProperty(attr)) destination.prototype[attr] = sourcePrototype[attr];
        }
    }
}

function getDescriptor(object, prop) {
    return Object.getOwnPropertyDescriptor(object, prop);
}

function createProxyFunction(prototype) {
	function ProxyFunction(){}
	ProxyFunction.prototype = prototype;
	return ProxyFunction;
}
function bezFunction(){

    var easingFunctions = [];
    var math = Math;

    function pointOnLine2D(x1,y1, x2,y2, x3,y3){
        var det1 = (x1*y2) + (y1*x3) + (x2*y3) - (x3*y2) - (y3*x1) - (x2*y1);
        return det1 > -0.001 && det1 < 0.001;
    }

    function pointOnLine3D(x1,y1,z1, x2,y2,z2, x3,y3,z3){
        if(z1 === 0 && z2 === 0 && z3 === 0) {
            return pointOnLine2D(x1,y1, x2,y2, x3,y3);
        }
        var dist1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));
        var dist2 = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2) + Math.pow(z3 - z1, 2));
        var dist3 = Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2) + Math.pow(z3 - z2, 2));
        var diffDist;
        if(dist1 > dist2){
            if(dist1 > dist3){
                diffDist = dist1 - dist2 - dist3;
            } else {
                diffDist = dist3 - dist2 - dist1;
            }
        } else if(dist3 > dist2){
            diffDist = dist3 - dist2 - dist1;
        } else {
            diffDist = dist2 - dist1 - dist3;
        }
        return diffDist > -0.0001 && diffDist < 0.0001;
    }

    var getBezierLength = (function(){

        return function(pt1,pt2,pt3,pt4){
            var curveSegments = defaultCurveSegments;
            var k;
            var i, len;
            var ptCoord,perc,addedLength = 0;
            var ptDistance;
            var point = [],lastPoint = [];
            var lengthData = bezier_length_pool.newElement();
            len = pt3.length;
            for(k=0;k<curveSegments;k+=1){
                perc = k/(curveSegments-1);
                ptDistance = 0;
                for(i=0;i<len;i+=1){
                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*pt3[i]+3*(1-perc)*bm_pow(perc,2)*pt4[i]+bm_pow(perc,3)*pt2[i];
                    point[i] = ptCoord;
                    if(lastPoint[i] !== null){
                        ptDistance += bm_pow(point[i] - lastPoint[i],2);
                    }
                    lastPoint[i] = point[i];
                }
                if(ptDistance){
                    ptDistance = bm_sqrt(ptDistance);
                    addedLength += ptDistance;
                }
                lengthData.percents[k] = perc;
                lengthData.lengths[k] = addedLength;
            }
            lengthData.addedLength = addedLength;
            return lengthData;
        };
    }());

    function getSegmentsLength(shapeData) {
        var segmentsLength = segments_length_pool.newElement();
        var closed = shapeData.c;
        var pathV = shapeData.v;
        var pathO = shapeData.o;
        var pathI = shapeData.i;
        var i, len = shapeData._length;
        var lengths = segmentsLength.lengths;
        var totalLength = 0;
        for(i=0;i<len-1;i+=1){
            lengths[i] = getBezierLength(pathV[i],pathV[i+1],pathO[i],pathI[i+1]);
            totalLength += lengths[i].addedLength;
        }
        if(closed && len){
            lengths[i] = getBezierLength(pathV[i],pathV[0],pathO[i],pathI[0]);
            totalLength += lengths[i].addedLength;
        }
        segmentsLength.totalLength = totalLength;
        return segmentsLength;
    }

    function BezierData(length){
        this.segmentLength = 0;
        this.points = new Array(length);
    }

    function PointData(partial,point){
        this.partialLength = partial;
        this.point = point;
    }

    var buildBezierData = (function(){

        var storedData = {};

        return function (pt1, pt2, pt3, pt4){
            var bezierName = (pt1[0]+'_'+pt1[1]+'_'+pt2[0]+'_'+pt2[1]+'_'+pt3[0]+'_'+pt3[1]+'_'+pt4[0]+'_'+pt4[1]).replace(/\./g, 'p');
            if(!storedData[bezierName]){
                var curveSegments = defaultCurveSegments;
                var k, i, len;
                var ptCoord,perc,addedLength = 0;
                var ptDistance;
                var point,lastPoint = null;
                if (pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt1[0]+pt3[0],pt1[1]+pt3[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt2[0]+pt4[0],pt2[1]+pt4[1])){
                    curveSegments = 2;
                }
                var bezierData = new BezierData(curveSegments);
                len = pt3.length;
                for (k = 0; k < curveSegments; k += 1) {
                    point = createSizedArray(len);
                    perc = k / (curveSegments - 1);
                    ptDistance = 0;
                    for (i = 0; i < len; i += 1){
                        ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*(pt1[i] + pt3[i])+3*(1-perc)*bm_pow(perc,2)*(pt2[i] + pt4[i])+bm_pow(perc,3)*pt2[i];
                        point[i] = ptCoord;
                        if(lastPoint !== null){
                            ptDistance += bm_pow(point[i] - lastPoint[i],2);
                        }
                    }
                    ptDistance = bm_sqrt(ptDistance);
                    addedLength += ptDistance;
                    bezierData.points[k] = new PointData(ptDistance, point);
                    lastPoint = point;
                }
                bezierData.segmentLength = addedLength;
                storedData[bezierName] = bezierData;
            }
            return storedData[bezierName];
        };
    }());

    function getDistancePerc(perc,bezierData){
        var percents = bezierData.percents;
        var lengths = bezierData.lengths;
        var len = percents.length;
        var initPos = bm_floor((len-1)*perc);
        var lengthPos = perc*bezierData.addedLength;
        var lPerc = 0;
        if(initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]){
            return percents[initPos];
        }else{
            var dir = lengths[initPos] > lengthPos ? -1 : 1;
            var flag = true;
            while(flag){
                if(lengths[initPos] <= lengthPos && lengths[initPos+1] > lengthPos){
                    lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos+1] - lengths[initPos]);
                    flag = false;
                }else{
                    initPos += dir;
                }
                if(initPos < 0 || initPos >= len - 1){
                    //FIX for TypedArrays that don't store floating point values with enough accuracy
                    if(initPos === len - 1) {
                        return percents[initPos];
                    }
                    flag = false;
                }
            }
            return percents[initPos] + (percents[initPos+1] - percents[initPos])*lPerc;
        }
    }

    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {
        var t1 = getDistancePerc(percent,bezierData);
        var u0 = 1;
        var u1 = 1 - t1;
        var ptX = Math.round((u1*u1*u1* pt1[0] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[0] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[0] + t1*t1*t1* pt2[0])* 1000) / 1000;
        var ptY = Math.round((u1*u1*u1* pt1[1] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[1] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[1] + t1*t1*t1* pt2[1])* 1000) / 1000;
        return [ptX, ptY];
    }

    function getSegmentArray() {

    }

    var bezier_segment_points = createTypedArray('float32', 8);

    function getNewSegment(pt1,pt2,pt3,pt4,startPerc,endPerc, bezierData){

        startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;
        var t0 = getDistancePerc(startPerc,bezierData);
        endPerc = endPerc > 1 ? 1 : endPerc;
        var t1 = getDistancePerc(endPerc,bezierData);
        var i, len = pt1.length;
        var u0 = 1 - t0;
        var u1 = 1 - t1;
        var u0u0u0 = u0*u0*u0;
        var t0u0u0_3 = t0*u0*u0*3;
        var t0t0u0_3 = t0*t0*u0*3;
        var t0t0t0 = t0*t0*t0;
        //
        var u0u0u1 = u0*u0*u1;
        var t0u0u1_3 = t0*u0*u1 + u0*t0*u1 + u0*u0*t1;
        var t0t0u1_3 = t0*t0*u1 + u0*t0*t1 + t0*u0*t1;
        var t0t0t1 = t0*t0*t1;
        //
        var u0u1u1 = u0*u1*u1;
        var t0u1u1_3 = t0*u1*u1 + u0*t1*u1 + u0*u1*t1;
        var t0t1u1_3 = t0*t1*u1 + u0*t1*t1 + t0*u1*t1;
        var t0t1t1 = t0*t1*t1;
        //
        var u1u1u1 = u1*u1*u1;
        var t1u1u1_3 = t1*u1*u1 + u1*t1*u1 + u1*u1*t1;
        var t1t1u1_3 = t1*t1*u1 + u1*t1*t1 + t1*u1*t1;
        var t1t1t1 = t1*t1*t1;
        for(i=0;i<len;i+=1){
            bezier_segment_points[i * 4] = Math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000;
            bezier_segment_points[i * 4 + 1] = Math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000;
            bezier_segment_points[i * 4 + 2] = Math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000;
            bezier_segment_points[i * 4 + 3] = Math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000;
        }

        return bezier_segment_points;
    }

    return {
        getSegmentsLength : getSegmentsLength,
        getNewSegment : getNewSegment,
        getPointInSegment : getPointInSegment,
        buildBezierData : buildBezierData,
        pointOnLine2D : pointOnLine2D,
        pointOnLine3D : pointOnLine3D
    };
}

var bez = bezFunction();
function dataFunctionManager(){

    //var tCanvasHelper = createTag('canvas').getContext('2d');

    function completeLayers(layers, comps, fontManager){
        var layerData;
        var animArray, lastFrame;
        var i, len = layers.length;
        var j, jLen, k, kLen;
        for(i=0;i<len;i+=1){
            layerData = layers[i];
            if(!('ks' in layerData) || layerData.completed){
                continue;
            }
            layerData.completed = true;
            if(layerData.tt){
                layers[i-1].td = layerData.tt;
            }
            animArray = [];
            lastFrame = -1;
            if(layerData.hasMask){
                var maskProps = layerData.masksProperties;
                jLen = maskProps.length;
                for(j=0;j<jLen;j+=1){
                    if(maskProps[j].pt.k.i){
                        convertPathsToAbsoluteValues(maskProps[j].pt.k);
                    }else{
                        kLen = maskProps[j].pt.k.length;
                        for(k=0;k<kLen;k+=1){
                            if(maskProps[j].pt.k[k].s){
                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);
                            }
                            if(maskProps[j].pt.k[k].e){
                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);
                            }
                        }
                    }
                }
            }
            if(layerData.ty===0){
                layerData.layers = findCompLayers(layerData.refId, comps);
                completeLayers(layerData.layers,comps, fontManager);
            }else if(layerData.ty === 4){
                completeShapes(layerData.shapes);
            }else if(layerData.ty == 5){
                completeText(layerData, fontManager);
            }
        }
    }

    function findCompLayers(id,comps){
        var i = 0, len = comps.length;
        while(i<len){
            if(comps[i].id === id){
                if(!comps[i].layers.__used) {
                    comps[i].layers.__used = true;
                    return comps[i].layers;
                }
                return JSON.parse(JSON.stringify(comps[i].layers));
            }
            i += 1;
        }
    }

    function completeShapes(arr){
        var i, len = arr.length;
        var j, jLen;
        var hasPaths = false;
        for(i=len-1;i>=0;i-=1){
            if(arr[i].ty == 'sh'){
                if(arr[i].ks.k.i){
                    convertPathsToAbsoluteValues(arr[i].ks.k);
                }else{
                    jLen = arr[i].ks.k.length;
                    for(j=0;j<jLen;j+=1){
                        if(arr[i].ks.k[j].s){
                            convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);
                        }
                        if(arr[i].ks.k[j].e){
                            convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);
                        }
                    }
                }
                hasPaths = true;
            }else if(arr[i].ty == 'gr'){
                completeShapes(arr[i].it);
            }
        }
        /*if(hasPaths){
            //mx: distance
            //ss: sensitivity
            //dc: decay
            arr.splice(arr.length-1,0,{
                "ty": "ms",
                "mx":20,
                "ss":10,
                 "dc":0.001,
                "maxDist":200
            });
        }*/
    }

    function convertPathsToAbsoluteValues(path){
        var i, len = path.i.length;
        for(i=0;i<len;i+=1){
            path.i[i][0] += path.v[i][0];
            path.i[i][1] += path.v[i][1];
            path.o[i][0] += path.v[i][0];
            path.o[i][1] += path.v[i][1];
        }
    }

    function checkVersion(minimum,animVersionString){
        var animVersion = animVersionString ? animVersionString.split('.') : [100,100,100];
        if(minimum[0]>animVersion[0]){
            return true;
        } else if(animVersion[0] > minimum[0]){
            return false;
        }
        if(minimum[1]>animVersion[1]){
            return true;
        } else if(animVersion[1] > minimum[1]){
            return false;
        }
        if(minimum[2]>animVersion[2]){
            return true;
        } else if(animVersion[2] > minimum[2]){
            return false;
        }
    }

    var checkText = (function(){
        var minimumVersion = [4,4,14];

        function updateTextLayer(textLayer){
            var documentData = textLayer.t.d;
            textLayer.t.d = {
                k: [
                    {
                        s:documentData,
                        t:0
                    }
                ]
            };
        }

        function iterateLayers(layers){
            var i, len = layers.length;
            for(i=0;i<len;i+=1){
                if(layers[i].ty === 5){
                    updateTextLayer(layers[i]);
                }
            }
        }

        return function (animationData){
            if(checkVersion(minimumVersion,animationData.v)){
                iterateLayers(animationData.layers);
                if(animationData.assets){
                    var i, len = animationData.assets.length;
                    for(i=0;i<len;i+=1){
                        if(animationData.assets[i].layers){
                            iterateLayers(animationData.assets[i].layers);

                        }
                    }
                }
            }
        };
    }());

    var checkChars = (function() {
        var minimumVersion = [4,7,99];
        return function (animationData){
            if(animationData.chars && !checkVersion(minimumVersion,animationData.v)){
                var i, len = animationData.chars.length, j, jLen, k, kLen;
                var pathData, paths;
                for(i = 0; i < len; i += 1) {
                    if(animationData.chars[i].data && animationData.chars[i].data.shapes) {
                        paths = animationData.chars[i].data.shapes[0].it;
                        jLen = paths.length;

                        for(j = 0; j < jLen; j += 1) {
                            pathData = paths[j].ks.k;
                            if(!pathData.__converted) {
                                convertPathsToAbsoluteValues(paths[j].ks.k);
                                pathData.__converted = true;
                            }
                        }
                    }
                }
            }
        };
    }());

    var checkColors = (function(){
        var minimumVersion = [4,1,9];

        function iterateShapes(shapes){
            var i, len = shapes.length;
            var j, jLen;
            for(i=0;i<len;i+=1){
                if(shapes[i].ty === 'gr'){
                    iterateShapes(shapes[i].it);
                }else if(shapes[i].ty === 'fl' || shapes[i].ty === 'st'){
                    if(shapes[i].c.k && shapes[i].c.k[0].i){
                        jLen = shapes[i].c.k.length;
                        for(j=0;j<jLen;j+=1){
                            if(shapes[i].c.k[j].s){
                                shapes[i].c.k[j].s[0] /= 255;
                                shapes[i].c.k[j].s[1] /= 255;
                                shapes[i].c.k[j].s[2] /= 255;
                                shapes[i].c.k[j].s[3] /= 255;
                            }
                            if(shapes[i].c.k[j].e){
                                shapes[i].c.k[j].e[0] /= 255;
                                shapes[i].c.k[j].e[1] /= 255;
                                shapes[i].c.k[j].e[2] /= 255;
                                shapes[i].c.k[j].e[3] /= 255;
                            }
                        }
                    } else {
                        shapes[i].c.k[0] /= 255;
                        shapes[i].c.k[1] /= 255;
                        shapes[i].c.k[2] /= 255;
                        shapes[i].c.k[3] /= 255;
                    }
                }
            }
        }

        function iterateLayers(layers){
            var i, len = layers.length;
            for(i=0;i<len;i+=1){
                if(layers[i].ty === 4){
                    iterateShapes(layers[i].shapes);
                }
            }
        }

        return function (animationData){
            if(checkVersion(minimumVersion,animationData.v)){
                iterateLayers(animationData.layers);
                if(animationData.assets){
                    var i, len = animationData.assets.length;
                    for(i=0;i<len;i+=1){
                        if(animationData.assets[i].layers){
                            iterateLayers(animationData.assets[i].layers);

                        }
                    }
                }
            }
        };
    }());

    var checkShapes = (function(){
        var minimumVersion = [4,4,18];



        function completeShapes(arr){
            var i, len = arr.length;
            var j, jLen;
            var hasPaths = false;
            for(i=len-1;i>=0;i-=1){
                if(arr[i].ty == 'sh'){
                    if(arr[i].ks.k.i){
                        arr[i].ks.k.c = arr[i].closed;
                    }else{
                        jLen = arr[i].ks.k.length;
                        for(j=0;j<jLen;j+=1){
                            if(arr[i].ks.k[j].s){
                                arr[i].ks.k[j].s[0].c = arr[i].closed;
                            }
                            if(arr[i].ks.k[j].e){
                                arr[i].ks.k[j].e[0].c = arr[i].closed;
                            }
                        }
                    }
                    hasPaths = true;
                }else if(arr[i].ty == 'gr'){
                    completeShapes(arr[i].it);
                }
            }
        }

        function iterateLayers(layers){
            var layerData;
            var i, len = layers.length;
            var j, jLen, k, kLen;
            for(i=0;i<len;i+=1){
                layerData = layers[i];
                if(layerData.hasMask){
                    var maskProps = layerData.masksProperties;
                    jLen = maskProps.length;
                    for(j=0;j<jLen;j+=1){
                        if(maskProps[j].pt.k.i){
                            maskProps[j].pt.k.c = maskProps[j].cl;
                        }else{
                            kLen = maskProps[j].pt.k.length;
                            for(k=0;k<kLen;k+=1){
                                if(maskProps[j].pt.k[k].s){
                                    maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;
                                }
                                if(maskProps[j].pt.k[k].e){
                                    maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;
                                }
                            }
                        }
                    }
                }
                if(layerData.ty === 4){
                    completeShapes(layerData.shapes);
                }
            }
        }

        return function (animationData){
            if(checkVersion(minimumVersion,animationData.v)){
                iterateLayers(animationData.layers);
                if(animationData.assets){
                    var i, len = animationData.assets.length;
                    for(i=0;i<len;i+=1){
                        if(animationData.assets[i].layers){
                            iterateLayers(animationData.assets[i].layers);

                        }
                    }
                }
            }
        };
    }());

    function completeData(animationData, fontManager){
        if(animationData.__complete){
            return;
        }
        checkColors(animationData);
        checkText(animationData);
        checkChars(animationData);
        checkShapes(animationData);
        completeLayers(animationData.layers, animationData.assets, fontManager);
        animationData.__complete = true;
        //blitAnimation(animationData, animationData.assets, fontManager);
    }

    function completeText(data, fontManager){
        if(data.t.a.length === 0 && !('m' in data.t.p)){
            data.singleShape = true;
        }
    }

    var moduleOb = {};
    moduleOb.completeData = completeData;
    moduleOb.checkColors = checkColors;
    moduleOb.checkChars = checkChars;
    moduleOb.checkShapes = checkShapes;
    moduleOb.completeLayers = completeLayers;

    return moduleOb;
}

var dataManager = dataFunctionManager();

var FontManager = (function(){

    var maxWaitingTime = 5000;
    var emptyChar = {
        w: 0,
        size:0,
        shapes:[]
    };
    var combinedCharacters = [];
    //Hindi characters
    combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366
    , 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379
    , 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);

    function trimFontOptions(font) {
        var familyArray = font.split(',');
        var i, len = familyArray.length;
        var enabledFamilies = [];
        for (i = 0; i < len; i += 1) {
            if (familyArray[i] !== 'sans-serif' && familyArray[i] !== 'monospace') {
                enabledFamilies.push(familyArray[i]);
            }
        }
        return enabledFamilies.join(',');
    }

    function setUpNode(font, family){
        var parentNode = createTag('span');
        parentNode.style.fontFamily    = family;
        var node = createTag('span');
        // Characters that vary significantly among different fonts
        node.innerText = 'giItT1WQy@!-/#';
        // Visible - so we can measure it - but not on the screen
        parentNode.style.position      = 'absolute';
        parentNode.style.left          = '-10000px';
        parentNode.style.top           = '-10000px';
        // Large font size makes even subtle changes obvious
        parentNode.style.fontSize      = '300px';
        // Reset any font properties
        parentNode.style.fontVariant   = 'normal';
        parentNode.style.fontStyle     = 'normal';
        parentNode.style.fontWeight    = 'normal';
        parentNode.style.letterSpacing = '0';
        parentNode.appendChild(node);
        document.body.appendChild(parentNode);

        // Remember width with no applied web font
        var width = node.offsetWidth;
        node.style.fontFamily = trimFontOptions(font) + ', ' + family;
        return {node:node, w:width, parent:parentNode};
    }

    function checkLoadedFonts() {
        var i, len = this.fonts.length;
        var node, w;
        var loadedCount = len;
        for(i=0;i<len; i+= 1){
            if(this.fonts[i].loaded){
                loadedCount -= 1;
                continue;
            }
            if(this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0){
                this.fonts[i].loaded = true;
            } else{
                node = this.fonts[i].monoCase.node;
                w = this.fonts[i].monoCase.w;
                if(node.offsetWidth !== w){
                    loadedCount -= 1;
                    this.fonts[i].loaded = true;
                }else{
                    node = this.fonts[i].sansCase.node;
                    w = this.fonts[i].sansCase.w;
                    if(node.offsetWidth !== w){
                        loadedCount -= 1;
                        this.fonts[i].loaded = true;
                    }
                }
                if(this.fonts[i].loaded){
                    this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);
                    this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);
                }
            }
        }

        if(loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime){
            setTimeout(this.checkLoadedFontsBinded, 20);
        }else{
            setTimeout(this.setIsLoadedBinded, 10);

        }
    }

    function createHelper(def, fontData){
        var tHelper = createNS('text');
        tHelper.style.fontSize = '100px';
        //tHelper.style.fontFamily = fontData.fFamily;
        tHelper.setAttribute('font-family', fontData.fFamily);
        tHelper.setAttribute('font-style', fontData.fStyle);
        tHelper.setAttribute('font-weight', fontData.fWeight);
        tHelper.textContent = '1';
        if(fontData.fClass){
            tHelper.style.fontFamily = 'inherit';
            tHelper.setAttribute('class', fontData.fClass);
        } else {
            tHelper.style.fontFamily = fontData.fFamily;
        }
        def.appendChild(tHelper);
        var tCanvasHelper = createTag('canvas').getContext('2d');
        tCanvasHelper.font = fontData.fWeight + ' ' + fontData.fStyle + ' 100px '+ fontData.fFamily;
        //tCanvasHelper.font = ' 100px '+ fontData.fFamily;
        return tHelper;
    }

    function addFonts(fontData, defs){
        if(!fontData){
            this.isLoaded = true;
            return;
        }
        if(this.chars){
            this.isLoaded = true;
            this.fonts = fontData.list;
            return;
        }


        var fontArr = fontData.list;
        var i, len = fontArr.length;
        var _pendingFonts = len;
        for(i=0; i<len; i+= 1){
            var shouldLoadFont = true;
            var loadedSelector;
            var j;
            fontArr[i].loaded = false;
            fontArr[i].monoCase = setUpNode(fontArr[i].fFamily,'monospace');
            fontArr[i].sansCase = setUpNode(fontArr[i].fFamily,'sans-serif');
            if(!fontArr[i].fPath) {
                fontArr[i].loaded = true;
                _pendingFonts -= 1;
            }else if(fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3){
                loadedSelector = document.querySelectorAll('style[f-forigin="p"][f-family="'+ fontArr[i].fFamily +'"], style[f-origin="3"][f-family="'+ fontArr[i].fFamily +'"]');

                if (loadedSelector.length > 0) {
                    shouldLoadFont = false;
                }

                if (shouldLoadFont) {
                    var s = createTag('style');
                    s.setAttribute('f-forigin', fontArr[i].fOrigin);
                    s.setAttribute('f-origin', fontArr[i].origin);
                    s.setAttribute('f-family', fontArr[i].fFamily);
                    s.type = "text/css";
                    s.innerText = "@font-face {" + "font-family: "+fontArr[i].fFamily+"; font-style: normal; src: url('"+fontArr[i].fPath+"');}";
                    defs.appendChild(s);
                }
            } else if(fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1){
                loadedSelector = document.querySelectorAll('link[f-forigin="g"], link[f-origin="1"]');

                for (j = 0; j < loadedSelector.length; j++) {
                    if (loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1) {
                        // Font is already loaded
                        shouldLoadFont = false;
                    }
                }

                if (shouldLoadFont) {
                    var l = createTag('link');
                    l.setAttribute('f-forigin', fontArr[i].fOrigin);
                    l.setAttribute('f-origin', fontArr[i].origin);
                    l.type = "text/css";
                    l.rel = "stylesheet";
                    l.href = fontArr[i].fPath;
                    document.body.appendChild(l);
                }
            } else if(fontArr[i].fOrigin === 't' || fontArr[i].origin === 2){
                loadedSelector = document.querySelectorAll('script[f-forigin="t"], script[f-origin="2"]');

                for (j = 0; j < loadedSelector.length; j++) {
                    if (fontArr[i].fPath === loadedSelector[j].src) {
                        // Font is already loaded
                        shouldLoadFont = false;
                    }
                }

                if (shouldLoadFont) {
                    var sc = createTag('link');
                    sc.setAttribute('f-forigin', fontArr[i].fOrigin);
                    sc.setAttribute('f-origin', fontArr[i].origin);
                    sc.setAttribute('rel','stylesheet');
                    sc.setAttribute('href',fontArr[i].fPath);
                    defs.appendChild(sc);
                }
            }
            fontArr[i].helper = createHelper(defs,fontArr[i]);
            fontArr[i].cache = {};
            this.fonts.push(fontArr[i]);
        }
        if (_pendingFonts === 0) {
            this.isLoaded = true;
        } else {
            //On some cases even if the font is loaded, it won't load correctly when measuring text on canvas.
            //Adding this timeout seems to fix it
           setTimeout(this.checkLoadedFonts.bind(this), 100);
        }
    }

    function addChars(chars){
        if(!chars){
            return;
        }
        if(!this.chars){
            this.chars = [];
        }
        var i, len = chars.length;
        var j, jLen = this.chars.length, found;
        for(i=0;i<len;i+=1){
            j = 0;
            found = false;
            while(j<jLen){
                if(this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch){
                    found = true;
                }
                j += 1;
            }
            if(!found){
                this.chars.push(chars[i]);
                jLen += 1;
            }
        }
    }

    function getCharData(char, style, font){
        var i = 0, len = this.chars.length;
        while( i < len) {
            if(this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font){

                return this.chars[i];
            }
            i+= 1;
        }
        if((typeof char === 'string' && char.charCodeAt(0) !== 13 || !char) && console && console.warn) {
            console.warn('Missing character from exported characters list: ', char, style, font);
        }
        return emptyChar;
    }

    function measureText(char, fontName, size) {
        var fontData = this.getFontByName(fontName);
        var index = char.charCodeAt(0);
        if(!fontData.cache[index + 1]) {
            var tHelper = fontData.helper;
            //Canvas version
            //fontData.cache[index] = tHelper.measureText(char).width / 100;
            //SVG version
            //console.log(tHelper.getBBox().width)
            if (char === ' ') {
                tHelper.textContent = '|' + char + '|';
                var doubleSize = tHelper.getComputedTextLength();
                tHelper.textContent = '||';
                var singleSize = tHelper.getComputedTextLength();
                fontData.cache[index + 1] = (doubleSize - singleSize)/100;
            } else {
                tHelper.textContent = char;
                fontData.cache[index + 1] = (tHelper.getComputedTextLength())/100;
            }
        }
        return fontData.cache[index + 1] * size;
    }

    function getFontByName(name){
        var i = 0, len = this.fonts.length;
        while(i<len){
            if(this.fonts[i].fName === name) {
                return this.fonts[i];
            }
            i += 1;
        }
        return this.fonts[0];
    }

    function getCombinedCharacterCodes() {
        return combinedCharacters;
    }

    function setIsLoaded() {
        this.isLoaded = true
    }

    var Font = function(){
        this.fonts = [];
        this.chars = null;
        this.typekitLoaded = 0;
        this.isLoaded = false;
        this.initTime = Date.now();
        this.setIsLoadedBinded = this.setIsLoaded.bind(this)
        this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this)
    };
    //TODO: for now I'm adding these methods to the Class and not the prototype. Think of a better way to implement it. 
    Font.getCombinedCharacterCodes = getCombinedCharacterCodes;

    var fontPrototype = {
        addChars: addChars,
        addFonts: addFonts,
        getCharData: getCharData,
        getFontByName: getFontByName,
        measureText: measureText,
        checkLoadedFonts: checkLoadedFonts,
        setIsLoaded: setIsLoaded,
    }

    Font.prototype = fontPrototype;

    return Font;

}());

var PropertyFactory = (function(){

    var initFrame = initialDefaultFrame;
    var math_abs = Math.abs;

    function interpolateValue(frameNum, caching) {
        var offsetTime = this.offsetTime;
        var newValue;
        if (this.propType === 'multidimensional') {
            newValue = createTypedArray('float32', this.pv.length);
        }
        var iterationIndex = caching.lastIndex;
        var i = iterationIndex;
        var len = this.keyframes.length - 1, flag = true;
        var keyData, nextKeyData;

        while (flag) {
            keyData = this.keyframes[i];
            nextKeyData = this.keyframes[i + 1];
            if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime){
                if(keyData.h){
                    keyData = nextKeyData;
                }
                iterationIndex = 0;
                break;
            }
            if ((nextKeyData.t - offsetTime) > frameNum){
                iterationIndex = i;
                break;
            }
            if (i < len - 1){
                i += 1;
            } else {
                iterationIndex = 0;
                flag = false;
            }
        }

        var k, kLen, perc, jLen, j, fnc;
        var nextKeyTime = nextKeyData.t - offsetTime;
        var keyTime = keyData.t - offsetTime;
        var endValue;
        if (keyData.to) {
            if (!keyData.bezierData) {
                keyData.bezierData = bez.buildBezierData(keyData.s, nextKeyData.s || keyData.e, keyData.to, keyData.ti);
            }
            var bezierData = keyData.bezierData;
            if (frameNum >= nextKeyTime || frameNum < keyTime) {
                var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0;
                kLen = bezierData.points[ind].point.length;
                for (k = 0; k < kLen; k += 1) {
                    newValue[k] = bezierData.points[ind].point[k];
                }
                // caching._lastKeyframeIndex = -1;
            } else {
                if (keyData.__fnct) {
                    fnc = keyData.__fnct;
                } else {
                    fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get;
                    keyData.__fnct = fnc;
                }
                perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));
                var distanceInLine = bezierData.segmentLength*perc;

                var segmentPerc;
                var addedLength =  (caching.lastFrame < frameNum && caching._lastKeyframeIndex === i) ? caching._lastAddedLength : 0;
                j =  (caching.lastFrame < frameNum && caching._lastKeyframeIndex === i) ? caching._lastPoint : 0;
                flag = true;
                jLen = bezierData.points.length;
                while (flag) {
                    addedLength += bezierData.points[j].partialLength;
                    if (distanceInLine === 0 || perc === 0 || j === bezierData.points.length - 1) {
                        kLen = bezierData.points[j].point.length;
                        for (k = 0; k < kLen; k += 1) {
                            newValue[k] = bezierData.points[j].point[k];
                        }
                        break;
                    } else if (distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j + 1].partialLength) {
                        segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength;
                        kLen = bezierData.points[j].point.length;
                        for (k = 0; k < kLen; k += 1) {
                            newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j + 1].point[k] - bezierData.points[j].point[k]) * segmentPerc;
                        }
                        break;
                    }
                    if (j < jLen - 1){
                        j += 1;
                    } else {
                        flag = false;
                    }
                }
                caching._lastPoint = j;
                caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;
                caching._lastKeyframeIndex = i;
            }
        } else {
            var outX, outY, inX, inY, keyValue;
            len = keyData.s.length;
            endValue = nextKeyData.s || keyData.e;
            if (this.sh && keyData.h !== 1) {
                if (frameNum >= nextKeyTime) {
                    newValue[0] = endValue[0];
                    newValue[1] = endValue[1];
                    newValue[2] = endValue[2];
                } else if (frameNum <= keyTime) {
                    newValue[0] = keyData.s[0];
                    newValue[1] = keyData.s[1];
                    newValue[2] = keyData.s[2];
                } else {
                    var quatStart = createQuaternion(keyData.s);
                    var quatEnd = createQuaternion(endValue);
                    var time = (frameNum - keyTime) / (nextKeyTime - keyTime);
                    quaternionToEuler(newValue, slerp(quatStart, quatEnd, time));
                }
                
            } else {
                for(i = 0; i < len; i += 1) {
                    if (keyData.h !== 1) {
                        if (frameNum >= nextKeyTime) {
                            perc = 1;
                        } else if(frameNum < keyTime) {
                            perc = 0;
                        } else {
                            if(keyData.o.x.constructor === Array) {
                                if (!keyData.__fnct) {
                                    keyData.__fnct = [];
                                }
                                if (!keyData.__fnct[i]) {
                                    outX = (typeof keyData.o.x[i] === 'undefined') ? keyData.o.x[0] : keyData.o.x[i];
                                    outY = (typeof keyData.o.y[i] === 'undefined') ? keyData.o.y[0] : keyData.o.y[i];
                                    inX = (typeof keyData.i.x[i] === 'undefined') ? keyData.i.x[0] : keyData.i.x[i];
                                    inY = (typeof keyData.i.y[i] === 'undefined') ? keyData.i.y[0] : keyData.i.y[i];
                                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;
                                    keyData.__fnct[i] = fnc;
                                } else {
                                    fnc = keyData.__fnct[i];
                                }
                            } else {
                                if (!keyData.__fnct) {
                                    outX = keyData.o.x;
                                    outY = keyData.o.y;
                                    inX = keyData.i.x;
                                    inY = keyData.i.y;
                                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;
                                    keyData.__fnct = fnc;
                                } else {
                                    fnc = keyData.__fnct;
                                }
                            }
                            perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime ));
                        }
                    }

                    endValue = nextKeyData.s || keyData.e;
                    keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (endValue[i] - keyData.s[i]) * perc;

                    if (this.propType === 'multidimensional') {
                        newValue[i] = keyValue;
                    } else {
                        newValue = keyValue;
                    }
                }
            }
        }
        caching.lastIndex = iterationIndex;
        return newValue;
    }

    //based on @Toji's https://github.com/toji/gl-matrix/
    function slerp(a, b, t) {
        var out = [];
        var ax = a[0], ay = a[1], az = a[2], aw = a[3],
        bx = b[0], by = b[1], bz = b[2], bw = b[3]

        var omega, cosom, sinom, scale0, scale1;

        cosom = ax * bx + ay * by + az * bz + aw * bw;
        if (cosom < 0.0) {
            cosom = -cosom;
            bx = -bx;
            by = -by;
            bz = -bz;
            bw = -bw;
        }
        if ((1.0 - cosom) > 0.000001) {
            omega = Math.acos(cosom);
            sinom = Math.sin(omega);
            scale0 = Math.sin((1.0 - t) * omega) / sinom;
            scale1 = Math.sin(t * omega) / sinom;
        } else {
            scale0 = 1.0 - t;
            scale1 = t;
        }
        out[0] = scale0 * ax + scale1 * bx;
        out[1] = scale0 * ay + scale1 * by;
        out[2] = scale0 * az + scale1 * bz;
        out[3] = scale0 * aw + scale1 * bw;

        return out;
    }

    function quaternionToEuler(out, quat) {
        var qx = quat[0];
        var qy = quat[1];
        var qz = quat[2];
        var qw = quat[3];
        var heading = Math.atan2(2*qy*qw-2*qx*qz , 1 - 2*qy*qy - 2*qz*qz)
        var attitude = Math.asin(2*qx*qy + 2*qz*qw) 
        var bank = Math.atan2(2*qx*qw-2*qy*qz , 1 - 2*qx*qx - 2*qz*qz);
        out[0] = heading/degToRads;
        out[1] = attitude/degToRads;
        out[2] = bank/degToRads;
    }

    function createQuaternion(values) {
        var heading = values[0] * degToRads;
        var attitude = values[1] * degToRads;
        var bank = values[2] * degToRads;
        var c1 = Math.cos(heading / 2);
        var c2 = Math.cos(attitude / 2);
        var c3 = Math.cos(bank / 2);
        var s1 = Math.sin(heading / 2);
        var s2 = Math.sin(attitude / 2);
        var s3 = Math.sin(bank / 2);
        var w = c1 * c2 * c3 - s1 * s2 * s3;
        var x = s1 * s2 * c3 + c1 * c2 * s3;
        var y = s1 * c2 * c3 + c1 * s2 * s3;
        var z = c1 * s2 * c3 - s1 * c2 * s3;

        return [x,y,z,w];
    }

    function getValueAtCurrentTime(){
        var frameNum = this.comp.renderedFrame - this.offsetTime;
        var initTime = this.keyframes[0].t - this.offsetTime;
        var endTime = this.keyframes[this.keyframes.length- 1].t-this.offsetTime;
        if(!(frameNum === this._caching.lastFrame || (this._caching.lastFrame !== initFrame && ((this._caching.lastFrame >= endTime && frameNum >= endTime) || (this._caching.lastFrame < initTime && frameNum < initTime))))){
            if(this._caching.lastFrame >= frameNum) {
                this._caching._lastKeyframeIndex = -1;
                this._caching.lastIndex = 0;
            }

            var renderResult = this.interpolateValue(frameNum, this._caching);
            this.pv = renderResult;
        }
        this._caching.lastFrame = frameNum;
        return this.pv;
    }

    function setVValue(val) {
        var multipliedValue;
        if(this.propType === 'unidimensional') {
            multipliedValue = val * this.mult;
            if(math_abs(this.v - multipliedValue) > 0.00001) {
                this.v = multipliedValue;
                this._mdf = true;
            }
        } else {
            var i = 0, len = this.v.length;
            while (i < len) {
                multipliedValue = val[i] * this.mult;
                if (math_abs(this.v[i] - multipliedValue) > 0.00001) {
                    this.v[i] = multipliedValue;
                    this._mdf = true;
                }
                i += 1;
            }
        }
    }

    function processEffectsSequence() {
        if (this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {
            return;
        }
        if(this.lock) {
            this.setVValue(this.pv);
            return;
        }
        this.lock = true;
        this._mdf = this._isFirstFrame;
        var multipliedValue;
        var i, len = this.effectsSequence.length;
        var finalValue = this.kf ? this.pv : this.data.k;
        for(i = 0; i < len; i += 1) {
            finalValue = this.effectsSequence[i](finalValue);
        }
        this.setVValue(finalValue);
        this._isFirstFrame = false;
        this.lock = false;
        this.frameId = this.elem.globalData.frameId;
    }

    function addEffect(effectFunction) {
        this.effectsSequence.push(effectFunction);
        this.container.addDynamicProperty(this);
    }

    function ValueProperty(elem, data, mult, container){
        this.propType = 'unidimensional';
        this.mult = mult || 1;
        this.data = data;
        this.v = mult ? data.k * mult : data.k;
        this.pv = data.k;
        this._mdf = false;
        this.elem = elem;
        this.container = container;
        this.comp = elem.comp;
        this.k = false;
        this.kf = false;
        this.vel = 0;
        this.effectsSequence = [];
        this._isFirstFrame = true;
        this.getValue = processEffectsSequence;
        this.setVValue = setVValue;
        this.addEffect = addEffect;
    }

    function MultiDimensionalProperty(elem, data, mult, container) {
        this.propType = 'multidimensional';
        this.mult = mult || 1;
        this.data = data;
        this._mdf = false;
        this.elem = elem;
        this.container = container;
        this.comp = elem.comp;
        this.k = false;
        this.kf = false;
        this.frameId = -1;
        var i, len = data.k.length;
        this.v = createTypedArray('float32', len);
        this.pv = createTypedArray('float32', len);
        var arr = createTypedArray('float32', len);
        this.vel = createTypedArray('float32', len);
        for (i = 0; i < len; i += 1) {
            this.v[i] = data.k[i] * this.mult;
            this.pv[i] = data.k[i];
        }
        this._isFirstFrame = true;
        this.effectsSequence = [];
        this.getValue = processEffectsSequence;
        this.setVValue = setVValue;
        this.addEffect = addEffect;
    }

    function KeyframedValueProperty(elem, data, mult, container) {
        this.propType = 'unidimensional';
        this.keyframes = data.k;
        this.offsetTime = elem.data.st;
        this.frameId = -1;
        this._caching = {lastFrame: initFrame, lastIndex: 0, value: 0, _lastKeyframeIndex: -1};
        this.k = true;
        this.kf = true;
        this.data = data;
        this.mult = mult || 1;
        this.elem = elem;
        this.container = container;
        this.comp = elem.comp;
        this.v = initFrame;
        this.pv = initFrame;
        this._isFirstFrame = true;
        this.getValue = processEffectsSequence;
        this.setVValue = setVValue;
        this.interpolateValue = interpolateValue;
        this.effectsSequence = [getValueAtCurrentTime.bind(this)];
        this.addEffect = addEffect;
    }

    function KeyframedMultidimensionalProperty(elem, data, mult, container){
        this.propType = 'multidimensional';
        var i, len = data.k.length;
        var s, e,to,ti;
        for (i = 0; i < len - 1; i += 1) {
            if (data.k[i].to && data.k[i].s && data.k[i + 1] && data.k[i + 1].s) {
                s = data.k[i].s;
                e = data.k[i + 1].s;
                to = data.k[i].to;
                ti = data.k[i].ti;
                if((s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],s[0] + to[0],s[1] + to[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],e[0] + ti[0],e[1] + ti[1])) || (s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],s[0] + to[0],s[1] + to[1],s[2] + to[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],e[0] + ti[0],e[1] + ti[1],e[2] + ti[2]))){
                    data.k[i].to = null;
                    data.k[i].ti = null;
                }
                if(s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {
                    if(s.length === 2 || (s[2] === e[2] && to[2] === 0 && ti[2] === 0)) {
                        data.k[i].to = null;
                        data.k[i].ti = null;
                    }
                }
            }
        }
        this.effectsSequence = [getValueAtCurrentTime.bind(this)];
        this.keyframes = data.k;
        this.offsetTime = elem.data.st;
        this.k = true;
        this.kf = true;
        this._isFirstFrame = true;
        this.mult = mult || 1;
        this.elem = elem;
        this.container = container;
        this.comp = elem.comp;
        this.getValue = processEffectsSequence;
        this.setVValue = setVValue;
        this.interpolateValue = interpolateValue;
        this.frameId = -1;
        var arrLen = data.k[0].s.length;
        this.v = createTypedArray('float32', arrLen);
        this.pv = createTypedArray('float32', arrLen);
        for (i = 0; i < arrLen; i += 1) {
            this.v[i] = initFrame;
            this.pv[i] = initFrame;
        }
        this._caching={lastFrame:initFrame,lastIndex:0,value:createTypedArray('float32', arrLen)};
        this.addEffect = addEffect;
    }

    function getProp(elem,data,type, mult, container) {
        var p;
        if(!data.k.length){
            p = new ValueProperty(elem,data, mult, container);
        }else if(typeof(data.k[0]) === 'number'){
            p = new MultiDimensionalProperty(elem,data, mult, container);
        }else{
            switch(type){
                case 0:
                    p = new KeyframedValueProperty(elem,data,mult, container);
                    break;
                case 1:
                    p = new KeyframedMultidimensionalProperty(elem,data,mult, container);
                    break;
            }
        }
        if(p.effectsSequence.length){
            container.addDynamicProperty(p);
        }
        return p;
    }

    var ob = {
        getProp: getProp
    };
    return ob;
}());
var TransformPropertyFactory = (function() {

    var defaultVector = [0,0]

    function applyToMatrix(mat) {
        var _mdf = this._mdf;
        this.iterateDynamicProperties();
        this._mdf = this._mdf || _mdf;
        if (this.a) {
            mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);
        }
        if (this.s) {
            mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);
        }
        if (this.sk) {
            mat.skewFromAxis(-this.sk.v, this.sa.v);
        }
        if (this.r) {
            mat.rotate(-this.r.v);
        } else {
            mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);
        }
        if (this.data.p.s) {
            if (this.data.p.z) {
                mat.translate(this.px.v, this.py.v, -this.pz.v);
            } else {
                mat.translate(this.px.v, this.py.v, 0);
            }
        } else {
            mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
        }
    }
    function processKeys(forceRender){
        if (this.elem.globalData.frameId === this.frameId) {
            return;
        }
        if(this._isDirty) {
            this.precalculateMatrix();
            this._isDirty = false;
        }

        this.iterateDynamicProperties();

        if (this._mdf || forceRender) {
            this.v.cloneFromProps(this.pre.props);
            if (this.appliedTransformations < 1) {
                this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);
            }
            if(this.appliedTransformations < 2) {
                this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);
            }
            if (this.sk && this.appliedTransformations < 3) {
                this.v.skewFromAxis(-this.sk.v, this.sa.v);
            }
            if (this.r && this.appliedTransformations < 4) {
                this.v.rotate(-this.r.v);
            } else if (!this.r && this.appliedTransformations < 4){
                this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);
            }
            if (this.autoOriented) {
                var v1,v2, frameRate = this.elem.globalData.frameRate;
                if(this.p && this.p.keyframes && this.p.getValueAtTime) {
                    if (this.p._caching.lastFrame+this.p.offsetTime <= this.p.keyframes[0].t) {
                        v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate,0);
                        v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0);
                    } else if(this.p._caching.lastFrame+this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {
                        v1 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t / frameRate), 0);
                        v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.05) / frameRate, 0);
                    } else {
                        v1 = this.p.pv;
                        v2 = this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime - 0.01) / frameRate, this.p.offsetTime);
                    }
                } else if(this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {
                    v1 = [];
                    v2 = [];
                    var px = this.px, py = this.py, frameRate;
                    if (px._caching.lastFrame+px.offsetTime <= px.keyframes[0].t) {
                        v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate,0);
                        v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate,0);
                        v2[0] = px.getValueAtTime((px.keyframes[0].t) / frameRate,0);
                        v2[1] = py.getValueAtTime((py.keyframes[0].t) / frameRate,0);
                    } else if(px._caching.lastFrame+px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {
                        v1[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t / frameRate),0);
                        v1[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t / frameRate),0);
                        v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate,0);
                        v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate,0);
                    } else {
                        v1 = [px.pv, py.pv];
                        v2[0] = px.getValueAtTime((px._caching.lastFrame+px.offsetTime - 0.01) / frameRate,px.offsetTime);
                        v2[1] = py.getValueAtTime((py._caching.lastFrame+py.offsetTime - 0.01) / frameRate,py.offsetTime);
                    }
                } else {
                    v1 = v2 = defaultVector
                }
                this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));
            }
            if(this.data.p && this.data.p.s){
                if(this.data.p.z) {
                    this.v.translate(this.px.v, this.py.v, -this.pz.v);
                } else {
                    this.v.translate(this.px.v, this.py.v, 0);
                }
            }else{
                this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);
            }
        }
        this.frameId = this.elem.globalData.frameId;
    }

    function precalculateMatrix() {
        if(!this.a.k) {
            this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);
            this.appliedTransformations = 1;
        } else {
            return;
        }
        if(!this.s.effectsSequence.length) {
            this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);
            this.appliedTransformations = 2;
        } else {
            return;
        }
        if(this.sk) {
            if(!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {
                this.pre.skewFromAxis(-this.sk.v, this.sa.v);
            this.appliedTransformations = 3;
            } else {
                return;
            }
        }
        if (this.r) {
            if(!this.r.effectsSequence.length) {
                this.pre.rotate(-this.r.v);
                this.appliedTransformations = 4;
            } else {
                return;
            }
        } else if(!this.rz.effectsSequence.length && !this.ry.effectsSequence.length && !this.rx.effectsSequence.length && !this.or.effectsSequence.length) {
            this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);
            this.appliedTransformations = 4;
        }
    }

    function autoOrient(){
        //
        //var prevP = this.getValueAtTime();
    }

    function addDynamicProperty(prop) {
        this._addDynamicProperty(prop);
        this.elem.addDynamicProperty(prop);
        this._isDirty = true;
    }

    function TransformProperty(elem,data,container){
        this.elem = elem;
        this.frameId = -1;
        this.propType = 'transform';
        this.data = data;
        this.v = new Matrix();
        //Precalculated matrix with non animated properties
        this.pre = new Matrix();
        this.appliedTransformations = 0;
        this.initDynamicPropertyContainer(container || elem);
        if(data.p && data.p.s){
            this.px = PropertyFactory.getProp(elem,data.p.x,0,0,this);
            this.py = PropertyFactory.getProp(elem,data.p.y,0,0,this);
            if(data.p.z){
                this.pz = PropertyFactory.getProp(elem,data.p.z,0,0,this);
            }
        }else{
            this.p = PropertyFactory.getProp(elem,data.p || {k:[0,0,0]},1,0,this);
        }
        if(data.rx) {
            this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this);
            this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this);
            this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this);
            if(data.or.k[0].ti) {
                var i, len = data.or.k.length;
                for(i=0;i<len;i+=1) {
                    data.or.k[i].to = data.or.k[i].ti = null;
                }
            }
            this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this);
            //sh Indicates it needs to be capped between -180 and 180
            this.or.sh = true;
        } else {
            this.r = PropertyFactory.getProp(elem, data.r || {k: 0}, 0, degToRads, this);
        }
        if(data.sk){
            this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this);
            this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this);
        }
        this.a = PropertyFactory.getProp(elem,data.a || {k:[0,0,0]},1,0,this);
        this.s = PropertyFactory.getProp(elem,data.s || {k:[100,100,100]},1,0.01,this);
        // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.
        if(data.o){
            this.o = PropertyFactory.getProp(elem,data.o,0,0.01,elem);
        } else {
            this.o = {_mdf:false,v:1};
        }
        this._isDirty = true;
        if(!this.dynamicProperties.length){
            this.getValue(true);
        }
    }

    TransformProperty.prototype = {
        applyToMatrix: applyToMatrix,
        getValue: processKeys,
        precalculateMatrix: precalculateMatrix,
        autoOrient: autoOrient
    }

    extendPrototype([DynamicPropertyContainer], TransformProperty);
    TransformProperty.prototype.addDynamicProperty = addDynamicProperty;
    TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty;

    function getTransformProperty(elem,data,container){
        return new TransformProperty(elem,data,container);
    }

    return {
        getTransformProperty: getTransformProperty
    };

}());
function ShapePath(){
	this.c = false;
	this._length = 0;
	this._maxLength = 8;
	this.v = createSizedArray(this._maxLength);
	this.o = createSizedArray(this._maxLength);
	this.i = createSizedArray(this._maxLength);
}

ShapePath.prototype.setPathData = function(closed, len) {
	this.c = closed;
	this.setLength(len);
	var i = 0;
	while(i < len){
		this.v[i] = point_pool.newElement();
		this.o[i] = point_pool.newElement();
		this.i[i] = point_pool.newElement();
		i += 1;
	}
};

ShapePath.prototype.setLength = function(len) {
	while(this._maxLength < len) {
		this.doubleArrayLength();
	}
	this._length = len;
};

ShapePath.prototype.doubleArrayLength = function() {
	this.v = this.v.concat(createSizedArray(this._maxLength));
	this.i = this.i.concat(createSizedArray(this._maxLength));
	this.o = this.o.concat(createSizedArray(this._maxLength));
	this._maxLength *= 2;
};

ShapePath.prototype.setXYAt = function(x, y, type, pos, replace) {
	var arr;
	this._length = Math.max(this._length, pos + 1);
	if(this._length >= this._maxLength) {
		this.doubleArrayLength();
	}
	switch(type){
		case 'v':
			arr = this.v;
			break;
		case 'i':
			arr = this.i;
			break;
		case 'o':
			arr = this.o;
			break;
	}
	if(!arr[pos] || (arr[pos] && !replace)){
		arr[pos] = point_pool.newElement();
	}
	arr[pos][0] = x;
	arr[pos][1] = y;
};

ShapePath.prototype.setTripleAt = function(vX,vY,oX,oY,iX,iY,pos, replace) {
	this.setXYAt(vX,vY,'v',pos, replace);
	this.setXYAt(oX,oY,'o',pos, replace);
	this.setXYAt(iX,iY,'i',pos, replace);
};

ShapePath.prototype.reverse = function() {
	var newPath = new ShapePath();
	newPath.setPathData(this.c, this._length);
	var vertices = this.v, outPoints = this.o, inPoints = this.i;
	var init = 0;
	if (this.c) {
		newPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);
        init = 1;
    }
    var cnt = this._length - 1;
    var len = this._length;

    var i;
    for (i = init; i < len; i += 1) {
    	newPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);
        cnt -= 1;
    }
    return newPath;
};
var ShapePropertyFactory = (function(){

    var initFrame = -999999;

    function interpolateShape(frameNum, previousValue, caching) {
        var iterationIndex = caching.lastIndex;
        var keyPropS,keyPropE,isHold, j, k, jLen, kLen, perc, vertexValue;
        var kf = this.keyframes;
        if(frameNum < kf[0].t-this.offsetTime){
            keyPropS = kf[0].s[0];
            isHold = true;
            iterationIndex = 0;
        }else if(frameNum >= kf[kf.length - 1].t-this.offsetTime){
            keyPropS = kf[kf.length - 1].s ? kf[kf.length - 1].s[0] : kf[kf.length - 2].e[0];
            /*if(kf[kf.length - 1].s){
                keyPropS = kf[kf.length - 1].s[0];
            }else{
                keyPropS = kf[kf.length - 2].e[0];
            }*/
            isHold = true;
        }else{
            var i = iterationIndex;
            var len = kf.length- 1,flag = true,keyData,nextKeyData;
            while(flag){
                keyData = kf[i];
                nextKeyData = kf[i+1];
                if((nextKeyData.t - this.offsetTime) > frameNum){
                    break;
                }
                if(i < len - 1){
                    i += 1;
                }else{
                    flag = false;
                }
            }
            isHold = keyData.h === 1;
            iterationIndex = i;
            if(!isHold){
                if(frameNum >= nextKeyData.t-this.offsetTime){
                    perc = 1;
                }else if(frameNum < keyData.t-this.offsetTime){
                    perc = 0;
                }else{
                    var fnc;
                    if(keyData.__fnct){
                        fnc = keyData.__fnct;
                    }else{
                        fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y).get;
                        keyData.__fnct = fnc;
                    }
                    perc = fnc((frameNum-(keyData.t-this.offsetTime))/((nextKeyData.t-this.offsetTime)-(keyData.t-this.offsetTime)));
                }
                keyPropE = nextKeyData.s ? nextKeyData.s[0] : keyData.e[0];
            }
            keyPropS = keyData.s[0];
        }
        jLen = previousValue._length;
        kLen = keyPropS.i[0].length;
        caching.lastIndex = iterationIndex;

        for(j=0;j<jLen;j+=1){
            for(k=0;k<kLen;k+=1){
                vertexValue = isHold ? keyPropS.i[j][k] :  keyPropS.i[j][k]+(keyPropE.i[j][k]-keyPropS.i[j][k])*perc;
                previousValue.i[j][k] = vertexValue;
                vertexValue = isHold ? keyPropS.o[j][k] :  keyPropS.o[j][k]+(keyPropE.o[j][k]-keyPropS.o[j][k])*perc;
                previousValue.o[j][k] = vertexValue;
                vertexValue = isHold ? keyPropS.v[j][k] :  keyPropS.v[j][k]+(keyPropE.v[j][k]-keyPropS.v[j][k])*perc;
                previousValue.v[j][k] = vertexValue;
            }
        }
    }

    function interpolateShapeCurrentTime(){
        var frameNum = this.comp.renderedFrame - this.offsetTime;
        var initTime = this.keyframes[0].t - this.offsetTime;
        var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;
        var lastFrame = this._caching.lastFrame;
        if(!(lastFrame !== initFrame && ((lastFrame < initTime && frameNum < initTime) || (lastFrame > endTime && frameNum > endTime)))){
            ////
            this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;
            this.interpolateShape(frameNum, this.pv, this._caching);
            ////
        }
        this._caching.lastFrame = frameNum;
        return this.pv;
    }

    function resetShape(){
        this.paths = this.localShapeCollection;
    }

    function shapesEqual(shape1, shape2) {
        if(shape1._length !== shape2._length || shape1.c !== shape2.c){
            return false;
        }
        var i, len = shape1._length;
        for(i = 0; i < len; i += 1) {
            if(shape1.v[i][0] !== shape2.v[i][0] 
            || shape1.v[i][1] !== shape2.v[i][1] 
            || shape1.o[i][0] !== shape2.o[i][0] 
            || shape1.o[i][1] !== shape2.o[i][1] 
            || shape1.i[i][0] !== shape2.i[i][0] 
            || shape1.i[i][1] !== shape2.i[i][1]) {
                return false;
            }
        }
        return true;
    }

    function setVValue(newPath) {
        if(!shapesEqual(this.v, newPath)) {
            this.v = shape_pool.clone(newPath);
            this.localShapeCollection.releaseShapes();
            this.localShapeCollection.addShape(this.v);
            this._mdf = true;
            this.paths = this.localShapeCollection;
        }
    }

    function processEffectsSequence() {
        if (this.elem.globalData.frameId === this.frameId) {
            return;
        } else if (!this.effectsSequence.length) {
            this._mdf = false;
            return;
        }
        if (this.lock) {
            this.setVValue(this.pv);
            return;
        }
        this.lock = true;
        this._mdf = false;
        var finalValue = this.kf ? this.pv : this.data.ks ? this.data.ks.k : this.data.pt.k;
        var i, len = this.effectsSequence.length;
        for(i = 0; i < len; i += 1) {
            finalValue = this.effectsSequence[i](finalValue);
        }
        this.setVValue(finalValue);
        this.lock = false;
        this.frameId = this.elem.globalData.frameId;
    };

    function ShapeProperty(elem, data, type){
        this.propType = 'shape';
        this.comp = elem.comp;
        this.container = elem;
        this.elem = elem;
        this.data = data;
        this.k = false;
        this.kf = false;
        this._mdf = false;
        var pathData = type === 3 ? data.pt.k : data.ks.k;
        this.v = shape_pool.clone(pathData);
        this.pv = shape_pool.clone(this.v);
        this.localShapeCollection = shapeCollection_pool.newShapeCollection();
        this.paths = this.localShapeCollection;
        this.paths.addShape(this.v);
        this.reset = resetShape;
        this.effectsSequence = [];
    }

    function addEffect(effectFunction) {
        this.effectsSequence.push(effectFunction);
        this.container.addDynamicProperty(this);
    }

    ShapeProperty.prototype.interpolateShape = interpolateShape;
    ShapeProperty.prototype.getValue = processEffectsSequence;
    ShapeProperty.prototype.setVValue = setVValue;
    ShapeProperty.prototype.addEffect = addEffect;

    function KeyframedShapeProperty(elem,data,type){
        this.propType = 'shape';
        this.comp = elem.comp;
        this.elem = elem;
        this.container = elem;
        this.offsetTime = elem.data.st;
        this.keyframes = type === 3 ? data.pt.k : data.ks.k;
        this.k = true;
        this.kf = true;
        var i, len = this.keyframes[0].s[0].i.length;
        var jLen = this.keyframes[0].s[0].i[0].length;
        this.v = shape_pool.newElement();
        this.v.setPathData(this.keyframes[0].s[0].c, len);
        this.pv = shape_pool.clone(this.v);
        this.localShapeCollection = shapeCollection_pool.newShapeCollection();
        this.paths = this.localShapeCollection;
        this.paths.addShape(this.v);
        this.lastFrame = initFrame;
        this.reset = resetShape;
        this._caching = {lastFrame: initFrame, lastIndex: 0};
        this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];
    }
    KeyframedShapeProperty.prototype.getValue = processEffectsSequence;
    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;
    KeyframedShapeProperty.prototype.setVValue = setVValue;
    KeyframedShapeProperty.prototype.addEffect = addEffect;

    var EllShapeProperty = (function(){

        var cPoint = roundCorner;

        function EllShapeProperty(elem,data) {
            /*this.v = {
                v: createSizedArray(4),
                i: createSizedArray(4),
                o: createSizedArray(4),
                c: true
            };*/
            this.v = shape_pool.newElement();
            this.v.setPathData(true, 4);
            this.localShapeCollection = shapeCollection_pool.newShapeCollection();
            this.paths = this.localShapeCollection;
            this.localShapeCollection.addShape(this.v);
            this.d = data.d;
            this.elem = elem;
            this.comp = elem.comp;
            this.frameId = -1;
            this.initDynamicPropertyContainer(elem);
            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);
            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);
            if(this.dynamicProperties.length){
                this.k = true;
            }else{
                this.k = false;
                this.convertEllToPath();
            }
        };

        EllShapeProperty.prototype = {
            reset: resetShape,
            getValue: function (){
                if(this.elem.globalData.frameId === this.frameId){
                    return;
                }
                this.frameId = this.elem.globalData.frameId;
                this.iterateDynamicProperties();

                if(this._mdf){
                    this.convertEllToPath();
                }
            },
            convertEllToPath: function() {
                var p0 = this.p.v[0], p1 = this.p.v[1], s0 = this.s.v[0]/2, s1 = this.s.v[1]/2;
                var _cw = this.d !== 3;
                var _v = this.v;
                _v.v[0][0] = p0;
                _v.v[0][1] = p1 - s1;
                _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;
                _v.v[1][1] = p1;
                _v.v[2][0] = p0;
                _v.v[2][1] = p1 + s1;
                _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;
                _v.v[3][1] = p1;
                _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;
                _v.i[0][1] = p1 - s1;
                _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;
                _v.i[1][1] = p1 - s1 * cPoint;
                _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;
                _v.i[2][1] = p1 + s1;
                _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;
                _v.i[3][1] = p1 + s1 * cPoint;
                _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;
                _v.o[0][1] = p1 - s1;
                _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;
                _v.o[1][1] = p1 + s1 * cPoint;
                _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;
                _v.o[2][1] = p1 + s1;
                _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;
                _v.o[3][1] = p1 - s1 * cPoint;
            }
        }

        extendPrototype([DynamicPropertyContainer], EllShapeProperty);

        return EllShapeProperty;
    }());

    var StarShapeProperty = (function() {

        function StarShapeProperty(elem,data) {
            this.v = shape_pool.newElement();
            this.v.setPathData(true, 0);
            this.elem = elem;
            this.comp = elem.comp;
            this.data = data;
            this.frameId = -1;
            this.d = data.d;
            this.initDynamicPropertyContainer(elem);
            if(data.sy === 1){
                this.ir = PropertyFactory.getProp(elem,data.ir,0,0,this);
                this.is = PropertyFactory.getProp(elem,data.is,0,0.01,this);
                this.convertToPath = this.convertStarToPath;
            } else {
                this.convertToPath = this.convertPolygonToPath;
            }
            this.pt = PropertyFactory.getProp(elem,data.pt,0,0,this);
            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);
            this.r = PropertyFactory.getProp(elem,data.r,0,degToRads,this);
            this.or = PropertyFactory.getProp(elem,data.or,0,0,this);
            this.os = PropertyFactory.getProp(elem,data.os,0,0.01,this);
            this.localShapeCollection = shapeCollection_pool.newShapeCollection();
            this.localShapeCollection.addShape(this.v);
            this.paths = this.localShapeCollection;
            if(this.dynamicProperties.length){
                this.k = true;
            }else{
                this.k = false;
                this.convertToPath();
            }
        };

        StarShapeProperty.prototype = {
            reset: resetShape,
            getValue: function() {
                if(this.elem.globalData.frameId === this.frameId){
                    return;
                }
                this.frameId = this.elem.globalData.frameId;
                this.iterateDynamicProperties();
                if(this._mdf){
                    this.convertToPath();
                }
            },
            convertStarToPath: function() {
                var numPts = Math.floor(this.pt.v)*2;
                var angle = Math.PI*2/numPts;
                /*this.v.v.length = numPts;
                this.v.i.length = numPts;
                this.v.o.length = numPts;*/
                var longFlag = true;
                var longRad = this.or.v;
                var shortRad = this.ir.v;
                var longRound = this.os.v;
                var shortRound = this.is.v;
                var longPerimSegment = 2*Math.PI*longRad/(numPts*2);
                var shortPerimSegment = 2*Math.PI*shortRad/(numPts*2);
                var i, rad,roundness,perimSegment, currentAng = -Math.PI/ 2;
                currentAng += this.r.v;
                var dir = this.data.d === 3 ? -1 : 1;
                this.v._length = 0;
                for(i=0;i<numPts;i+=1){
                    rad = longFlag ? longRad : shortRad;
                    roundness = longFlag ? longRound : shortRound;
                    perimSegment = longFlag ? longPerimSegment : shortPerimSegment;
                    var x = rad * Math.cos(currentAng);
                    var y = rad * Math.sin(currentAng);
                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);
                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);
                    x +=  + this.p.v[0];
                    y +=  + this.p.v[1];
                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);

                    /*this.v.v[i] = [x,y];
                    this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];
                    this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];
                    this.v._length = numPts;*/
                    longFlag = !longFlag;
                    currentAng += angle*dir;
                }
            },
            convertPolygonToPath: function() {
                var numPts = Math.floor(this.pt.v);
                var angle = Math.PI*2/numPts;
                var rad = this.or.v;
                var roundness = this.os.v;
                var perimSegment = 2*Math.PI*rad/(numPts*4);
                var i, currentAng = -Math.PI/ 2;
                var dir = this.data.d === 3 ? -1 : 1;
                currentAng += this.r.v;
                this.v._length = 0;
                for(i=0;i<numPts;i+=1){
                    var x = rad * Math.cos(currentAng);
                    var y = rad * Math.sin(currentAng);
                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);
                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);
                    x +=  + this.p.v[0];
                    y +=  + this.p.v[1];
                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);
                    currentAng += angle*dir;
                }
                this.paths.length = 0;
                this.paths[0] = this.v;
            }

        }
        extendPrototype([DynamicPropertyContainer], StarShapeProperty);

        return StarShapeProperty;
    }());

    var RectShapeProperty = (function() {

         function RectShapeProperty(elem,data) {
            this.v = shape_pool.newElement();
            this.v.c = true;
            this.localShapeCollection = shapeCollection_pool.newShapeCollection();
            this.localShapeCollection.addShape(this.v);
            this.paths = this.localShapeCollection;
            this.elem = elem;
            this.comp = elem.comp;
            this.frameId = -1;
            this.d = data.d;
            this.initDynamicPropertyContainer(elem);
            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);
            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);
            this.r = PropertyFactory.getProp(elem,data.r,0,0,this);
            if(this.dynamicProperties.length){
                this.k = true;
            }else{
                this.k = false;
                this.convertRectToPath();
            }
        };

        RectShapeProperty.prototype = {
            convertRectToPath: function (){
                var p0 = this.p.v[0], p1 = this.p.v[1], v0 = this.s.v[0]/2, v1 = this.s.v[1]/2;
                var round = bm_min(v0,v1,this.r.v);
                var cPoint = round*(1-roundCorner);
                this.v._length = 0;

                if(this.d === 2 || this.d === 1) {
                    this.v.setTripleAt(p0+v0, p1-v1+round,p0+v0, p1-v1+round,p0+v0,p1-v1+cPoint,0, true);
                    this.v.setTripleAt(p0+v0, p1+v1-round,p0+v0, p1+v1-cPoint,p0+v0, p1+v1-round,1, true);
                    if(round!== 0){
                        this.v.setTripleAt(p0+v0-round, p1+v1,p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,2, true);
                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,p0-v0+round,p1+v1,3, true);
                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,4, true);
                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,p0-v0,p1-v1+round,5, true);
                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,6, true);
                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,p0+v0-round,p1-v1,7, true);
                    } else {
                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0+cPoint,p1+v1,p0-v0,p1+v1,2);
                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0,p1-v1+cPoint,p0-v0,p1-v1,3);
                    }
                }else{
                    this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,p0+v0,p1-v1+round,0, true);
                    if(round!== 0){
                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,1, true);
                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,p0-v0+round,p1-v1,2, true);
                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,3, true);
                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,p0-v0,p1+v1-round,4, true);
                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,5, true);
                        this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,p0+v0-round,p1+v1,6, true);
                        this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,7, true);
                    } else {
                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0+cPoint,p1-v1,p0-v0,p1-v1,1, true);
                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0,p1+v1-cPoint,p0-v0,p1+v1,2, true);
                        this.v.setTripleAt(p0+v0,p1+v1,p0+v0-cPoint,p1+v1,p0+v0,p1+v1,3, true);

                    }
                }
            },
            getValue: function(frameNum){
                if(this.elem.globalData.frameId === this.frameId){
                    return;
                }
                this.frameId = this.elem.globalData.frameId;
                this.iterateDynamicProperties();
                if(this._mdf){
                    this.convertRectToPath();
                }

            },
            reset: resetShape
        }
        extendPrototype([DynamicPropertyContainer], RectShapeProperty);

        return RectShapeProperty;
    }());

    function getShapeProp(elem,data,type){
        var prop;
        if(type === 3 || type === 4){
            var dataProp = type === 3 ? data.pt : data.ks;
            var keys = dataProp.k;
            if(keys.length){
                prop = new KeyframedShapeProperty(elem, data, type);
            }else{
                prop = new ShapeProperty(elem, data, type);
            }
        }else if(type === 5){
            prop = new RectShapeProperty(elem, data);
        }else if(type === 6){
            prop = new EllShapeProperty(elem, data);
        }else if(type === 7){
            prop = new StarShapeProperty(elem, data);
        }
        if(prop.k){
            elem.addDynamicProperty(prop);
        }
        return prop;
    }

    function getConstructorFunction() {
        return ShapeProperty;
    }

    function getKeyframedConstructorFunction() {
        return KeyframedShapeProperty;
    }

    var ob = {};
    ob.getShapeProp = getShapeProp;
    ob.getConstructorFunction = getConstructorFunction;
    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;
    return ob;
}());
var ShapeModifiers = (function(){
    var ob = {};
    var modifiers = {};
    ob.registerModifier = registerModifier;
    ob.getModifier = getModifier;

    function registerModifier(nm,factory){
        if(!modifiers[nm]){
            modifiers[nm] = factory;
        }
    }

    function getModifier(nm,elem, data){
        return new modifiers[nm](elem, data);
    }

    return ob;
}());

function ShapeModifier(){}
ShapeModifier.prototype.initModifierProperties = function(){};
ShapeModifier.prototype.addShapeToModifier = function(){};
ShapeModifier.prototype.addShape = function(data){
    if (!this.closed) {
        // Adding shape to dynamic properties. It covers the case where a shape has no effects applied, to reset it's _mdf state on every tick.
        data.sh.container.addDynamicProperty(data.sh);
        var shapeData = {shape:data.sh, data: data, localShapeCollection:shapeCollection_pool.newShapeCollection()};
        this.shapes.push(shapeData);
        this.addShapeToModifier(shapeData);
        if (this._isAnimated) {
            data.setAsAnimated();
        }
    }
};
ShapeModifier.prototype.init = function(elem,data){
    this.shapes = [];
    this.elem = elem;
    this.initDynamicPropertyContainer(elem);
    this.initModifierProperties(elem,data);
    this.frameId = initialDefaultFrame;
    this.closed = false;
    this.k = false;
    if(this.dynamicProperties.length){
        this.k = true;
    }else{
        this.getValue(true);
    }
};
ShapeModifier.prototype.processKeys = function(){
    if(this.elem.globalData.frameId === this.frameId){
        return;
    }
    this.frameId = this.elem.globalData.frameId;
    this.iterateDynamicProperties();
};

extendPrototype([DynamicPropertyContainer], ShapeModifier);
function TrimModifier(){
}
extendPrototype([ShapeModifier], TrimModifier);
TrimModifier.prototype.initModifierProperties = function(elem, data) {
    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this);
    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this);
    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this);
    this.sValue = 0;
    this.eValue = 0;
    this.getValue = this.processKeys;
    this.m = data.m;
    this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;
};

TrimModifier.prototype.addShapeToModifier = function(shapeData){
    shapeData.pathsData = [];
};

TrimModifier.prototype.calculateShapeEdges = function(s, e, shapeLength, addedLength, totalModifierLength) {
    var segments = [];
    if (e <= 1) {
        segments.push({
            s: s,
            e: e
        });
    } else if (s >= 1) {
        segments.push({
            s: s - 1,
            e: e - 1
        });
    } else {
        segments.push({
            s: s,
            e: 1
        });
        segments.push({
            s: 0,
            e: e - 1
        });
    }
    var shapeSegments = [];
    var i, len = segments.length, segmentOb;
    for (i = 0; i < len; i += 1) {
        segmentOb = segments[i];
        if (segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength) {
            
        } else {
            var shapeS, shapeE;
            if (segmentOb.s * totalModifierLength <= addedLength) {
                shapeS = 0;
            } else {
                shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;
            }
            if(segmentOb.e * totalModifierLength >= addedLength + shapeLength) {
                shapeE = 1;
            } else {
                shapeE = ((segmentOb.e * totalModifierLength - addedLength) / shapeLength);
            }
            shapeSegments.push([shapeS, shapeE]);
        }
    }
    if (!shapeSegments.length) {
        shapeSegments.push([0, 0]);
    }
    return shapeSegments;
};

TrimModifier.prototype.releasePathsData = function(pathsData) {
    var i, len = pathsData.length;
    for (i = 0; i < len; i += 1) {
        segments_length_pool.release(pathsData[i]);
    }
    pathsData.length = 0;
    return pathsData;
};

TrimModifier.prototype.processShapes = function(_isFirstFrame) {
    var s, e;
    if (this._mdf || _isFirstFrame) {
        var o = (this.o.v % 360) / 360;
        if (o < 0) {
            o += 1;
        }
        s = (this.s.v > 1 ? 1 : this.s.v < 0 ? 0 : this.s.v) + o;
        e = (this.e.v > 1 ? 1 : this.e.v < 0 ? 0 : this.e.v) + o;
        if (s === e) {

        }
        if (s > e) {
            var _s = s;
            s = e;
            e = _s;
        }
        s = Math.round(s * 10000) * 0.0001;
        e = Math.round(e * 10000) * 0.0001;
        this.sValue = s;
        this.eValue = e;
    } else {
        s = this.sValue;
        e = this.eValue;
    }
    var shapePaths;
    var i, len = this.shapes.length, j, jLen;
    var pathsData, pathData, totalShapeLength, totalModifierLength = 0;

    if (e === s) {
        for (i = 0; i < len; i += 1) {
            this.shapes[i].localShapeCollection.releaseShapes();
            this.shapes[i].shape._mdf = true;
            this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;
            if (this._mdf) {
                this.shapes[i].pathsData.length = 0;
            }
        }
    } else if (!((e === 1 && s === 0) || (e===0 && s === 1))){
        var segments = [], shapeData, localShapeCollection;
        for (i = 0; i < len; i += 1) {
            shapeData = this.shapes[i];
            // if shape hasn't changed and trim properties haven't changed, cached previous path can be used
            if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {
                shapeData.shape.paths = shapeData.localShapeCollection;
            } else {
                shapePaths = shapeData.shape.paths;
                jLen = shapePaths._length;
                totalShapeLength = 0;
                if (!shapeData.shape._mdf && shapeData.pathsData.length) {
                    totalShapeLength = shapeData.totalShapeLength;
                } else {
                    pathsData = this.releasePathsData(shapeData.pathsData);
                    for (j = 0; j < jLen; j += 1) {
                        pathData = bez.getSegmentsLength(shapePaths.shapes[j]);
                        pathsData.push(pathData);
                        totalShapeLength += pathData.totalLength;
                    }
                    shapeData.totalShapeLength = totalShapeLength;
                    shapeData.pathsData = pathsData;
                }

                totalModifierLength += totalShapeLength;
                shapeData.shape._mdf = true;
            }
        }
        var shapeS = s, shapeE = e, addedLength = 0, edges;
        for (i = len - 1; i >= 0; i -= 1) {
            shapeData = this.shapes[i];
            if (shapeData.shape._mdf) {
                localShapeCollection = shapeData.localShapeCollection;
                localShapeCollection.releaseShapes();
                //if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group
                if (this.m === 2 && len > 1) {
                    edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);
                    addedLength += shapeData.totalShapeLength;
                } else {
                    edges = [[shapeS, shapeE]];
                }
                jLen = edges.length;
                for (j = 0; j < jLen; j += 1) {
                    shapeS = edges[j][0];
                    shapeE = edges[j][1];
                    segments.length = 0;
                    if (shapeE <= 1) {
                        segments.push({
                            s:shapeData.totalShapeLength * shapeS,
                            e:shapeData.totalShapeLength * shapeE
                        });
                    } else if (shapeS >= 1) {
                        segments.push({
                            s:shapeData.totalShapeLength * (shapeS - 1),
                            e:shapeData.totalShapeLength * (shapeE - 1)
                        });
                    } else {
                        segments.push({
                            s:shapeData.totalShapeLength * shapeS,
                            e:shapeData.totalShapeLength
                        });
                        segments.push({
                            s:0,
                            e:shapeData.totalShapeLength * (shapeE - 1)
                        });
                    }
                    var newShapesData = this.addShapes(shapeData,segments[0]);
                    if (segments[0].s !== segments[0].e) {
                        if (segments.length > 1) {
                            var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1];
                            if (lastShapeInCollection.c) {
                                var lastShape = newShapesData.pop();
                                this.addPaths(newShapesData, localShapeCollection);
                                newShapesData = this.addShapes(shapeData, segments[1], lastShape);
                            } else {
                                this.addPaths(newShapesData, localShapeCollection);
                                newShapesData = this.addShapes(shapeData, segments[1]);
                            }
                        } 
                        this.addPaths(newShapesData, localShapeCollection);
                    }
                    
                }
                shapeData.shape.paths = localShapeCollection;
            }
        }
    } else if (this._mdf) {
        for (i = 0; i < len; i += 1) {
            //Releasign Trim Cached paths data when no trim applied in case shapes are modified inbetween.
            //Don't remove this even if it's losing cached info.
            this.shapes[i].pathsData.length = 0;
            this.shapes[i].shape._mdf = true;
        }
    }
};

TrimModifier.prototype.addPaths = function(newPaths, localShapeCollection) {
    var i, len = newPaths.length;
    for (i = 0; i < len; i += 1) {
        localShapeCollection.addShape(newPaths[i]);
    }
};

TrimModifier.prototype.addSegment = function(pt1, pt2, pt3, pt4, shapePath, pos, newShape) {
    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);
    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);
    if(newShape){
        shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);
    }
    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);
};

TrimModifier.prototype.addSegmentFromArray = function(points, shapePath, pos, newShape) {
    shapePath.setXYAt(points[1], points[5], 'o', pos);
    shapePath.setXYAt(points[2], points[6], 'i', pos + 1);
    if(newShape){
        shapePath.setXYAt(points[0], points[4], 'v', pos);
    }
    shapePath.setXYAt(points[3], points[7], 'v', pos + 1);
};

TrimModifier.prototype.addShapes = function(shapeData, shapeSegment, shapePath) {
    var pathsData = shapeData.pathsData;
    var shapePaths = shapeData.shape.paths.shapes;
    var i, len = shapeData.shape.paths._length, j, jLen;
    var addedLength = 0;
    var currentLengthData,segmentCount;
    var lengths;
    var segment;
    var shapes = [];
    var initPos;
    var newShape = true;
    if (!shapePath) {
        shapePath = shape_pool.newElement();
        segmentCount = 0;
        initPos = 0;
    } else {
        segmentCount = shapePath._length;
        initPos = shapePath._length;
    }
    shapes.push(shapePath);
    for (i = 0; i < len; i += 1) {
        lengths = pathsData[i].lengths;
        shapePath.c = shapePaths[i].c;
        jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;
        for (j = 1; j < jLen; j +=1) {
            currentLengthData = lengths[j-1];
            if (addedLength + currentLengthData.addedLength < shapeSegment.s) {
                addedLength += currentLengthData.addedLength;
                shapePath.c = false;
            } else if(addedLength > shapeSegment.e) {
                shapePath.c = false;
                break;
            } else {
                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {
                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);
                    newShape = false;
                } else {
                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength)/currentLengthData.addedLength,(shapeSegment.e - addedLength)/currentLengthData.addedLength, lengths[j-1]);
                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);
                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);
                    newShape = false;
                    shapePath.c = false;
                }
                addedLength += currentLengthData.addedLength;
                segmentCount += 1;
            }
        }
        if (shapePaths[i].c && lengths.length) {
            currentLengthData = lengths[j - 1];
            if (addedLength <= shapeSegment.e) {
                var segmentLength = lengths[j - 1].addedLength;
                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {
                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);
                    newShape = false;
                } else {
                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);
                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);
                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);
                    newShape = false;
                    shapePath.c = false;
                }
            } else {
                shapePath.c = false;
            }
            addedLength += currentLengthData.addedLength;
            segmentCount += 1;
        }
        if (shapePath._length) {
            shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);
            shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1],'o', shapePath._length - 1);
        }
        if (addedLength > shapeSegment.e) {
            break;
        }
        if (i < len - 1) {
            shapePath = shape_pool.newElement();
            newShape = true;
            shapes.push(shapePath);
            segmentCount = 0;
        }
    }
    return shapes;
};


ShapeModifiers.registerModifier('tm', TrimModifier);
function RoundCornersModifier(){}
extendPrototype([ShapeModifier],RoundCornersModifier);
RoundCornersModifier.prototype.initModifierProperties = function(elem,data){
    this.getValue = this.processKeys;
    this.rd = PropertyFactory.getProp(elem,data.r,0,null,this);
    this._isAnimated = !!this.rd.effectsSequence.length;
};

RoundCornersModifier.prototype.processPath = function(path, round){
    var cloned_path = shape_pool.newElement();
    cloned_path.c = path.c;
    var i, len = path._length;
    var currentV,currentI,currentO,closerV, newV,newO,newI,distance,newPosPerc,index = 0;
    var vX,vY,oX,oY,iX,iY;
    for(i=0;i<len;i+=1){
        currentV = path.v[i];
        currentO = path.o[i];
        currentI = path.i[i];
        if(currentV[0]===currentO[0] && currentV[1]===currentO[1] && currentV[0]===currentI[0] && currentV[1]===currentI[1]){
            if((i===0 || i === len - 1) && !path.c){
                cloned_path.setTripleAt(currentV[0],currentV[1],currentO[0],currentO[1],currentI[0],currentI[1],index);
                /*cloned_path.v[index] = currentV;
                cloned_path.o[index] = currentO;
                cloned_path.i[index] = currentI;*/
                index += 1;
            } else {
                if(i===0){
                    closerV = path.v[len-1];
                } else {
                    closerV = path.v[i-1];
                }
                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));
                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;
                vX = iX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;
                vY = iY = currentV[1]-(currentV[1]-closerV[1])*newPosPerc;
                oX = vX-(vX-currentV[0])*roundCorner;
                oY = vY-(vY-currentV[1])*roundCorner;
                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);
                index += 1;

                if(i === len - 1){
                    closerV = path.v[0];
                } else {
                    closerV = path.v[i+1];
                }
                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));
                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;
                vX = oX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;
                vY = oY = currentV[1]+(closerV[1]-currentV[1])*newPosPerc;
                iX = vX-(vX-currentV[0])*roundCorner;
                iY = vY-(vY-currentV[1])*roundCorner;
                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);
                index += 1;
            }
        } else {
            cloned_path.setTripleAt(path.v[i][0],path.v[i][1],path.o[i][0],path.o[i][1],path.i[i][0],path.i[i][1],index);
            index += 1;
        }
    }
    return cloned_path;
};

RoundCornersModifier.prototype.processShapes = function(_isFirstFrame){
    var shapePaths;
    var i, len = this.shapes.length;
    var j, jLen;
    var rd = this.rd.v;

    if(rd !== 0){
        var shapeData, newPaths, localShapeCollection;
        for(i=0;i<len;i+=1){
            shapeData = this.shapes[i];
            newPaths = shapeData.shape.paths;
            localShapeCollection = shapeData.localShapeCollection;
            if(!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)){
                localShapeCollection.releaseShapes();
                shapeData.shape._mdf = true;
                shapePaths = shapeData.shape.paths.shapes;
                jLen = shapeData.shape.paths._length;
                for(j=0;j<jLen;j+=1){
                    localShapeCollection.addShape(this.processPath(shapePaths[j],rd));
                }
            }
            shapeData.shape.paths = shapeData.localShapeCollection;
        }

    }
    if(!this.dynamicProperties.length){
        this._mdf = false;
    }
};

ShapeModifiers.registerModifier('rd',RoundCornersModifier);
function PuckerAndBloatModifier(){}
extendPrototype([ShapeModifier],PuckerAndBloatModifier);
PuckerAndBloatModifier.prototype.initModifierProperties = function(elem,data){
    this.getValue = this.processKeys;
    this.amount = PropertyFactory.getProp(elem,data.a,0,null,this);
    this._isAnimated = !!this.amount.effectsSequence.length;
};

PuckerAndBloatModifier.prototype.processPath = function(path, amount){
    var percent = amount / 100;
    var centerPoint = [0, 0];
    var pathLength = path._length, i = 0;
    for (i = 0; i < pathLength; i += 1) {
        centerPoint[0] += path.v[i][0];
        centerPoint[1] += path.v[i][1];
    }
    centerPoint[0] /= pathLength;
    centerPoint[1] /= pathLength;
    var cloned_path = shape_pool.newElement();
    cloned_path.c = path.c;
    var vX, vY, oX, oY, iX, iY;
    for(i = 0; i < pathLength; i += 1) {
        vX = path.v[i][0] + (centerPoint[0] - path.v[i][0]) * percent;
        vY = path.v[i][1] + (centerPoint[1] - path.v[i][1]) * percent;
        oX = path.o[i][0] + (centerPoint[0] - path.o[i][0]) * -percent;
        oY = path.o[i][1] + (centerPoint[1] - path.o[i][1]) * -percent;
        iX = path.i[i][0] + (centerPoint[0] - path.i[i][0]) * -percent;
        iY = path.i[i][1] + (centerPoint[1] - path.i[i][1]) * -percent;
        cloned_path.setTripleAt(vX, vY, oX, oY, iX, iY, i);
    }
    return cloned_path;
};

PuckerAndBloatModifier.prototype.processShapes = function(_isFirstFrame){
    var shapePaths;
    var i, len = this.shapes.length;
    var j, jLen;
    var amount = this.amount.v;

    if(amount !== 0){
        var shapeData, newPaths, localShapeCollection;
        for(i=0;i<len;i+=1){
            shapeData = this.shapes[i];
            newPaths = shapeData.shape.paths;
            localShapeCollection = shapeData.localShapeCollection;
            if(!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)){
                localShapeCollection.releaseShapes();
                shapeData.shape._mdf = true;
                shapePaths = shapeData.shape.paths.shapes;
                jLen = shapeData.shape.paths._length;
                for(j=0;j<jLen;j+=1){
                    localShapeCollection.addShape(this.processPath(shapePaths[j], amount));
                }
            }
            shapeData.shape.paths = shapeData.localShapeCollection;
        }
    }
    if(!this.dynamicProperties.length){
        this._mdf = false;
    }
};
ShapeModifiers.registerModifier('pb',PuckerAndBloatModifier);
function RepeaterModifier(){}
extendPrototype([ShapeModifier], RepeaterModifier);

RepeaterModifier.prototype.initModifierProperties = function(elem,data){
    this.getValue = this.processKeys;
    this.c = PropertyFactory.getProp(elem,data.c,0,null,this);
    this.o = PropertyFactory.getProp(elem,data.o,0,null,this);
    this.tr = TransformPropertyFactory.getTransformProperty(elem,data.tr,this);
    this.so = PropertyFactory.getProp(elem,data.tr.so,0,0.01,this);
    this.eo = PropertyFactory.getProp(elem,data.tr.eo,0,0.01,this);
    this.data = data;
    if(!this.dynamicProperties.length){
        this.getValue(true);
    }
    this._isAnimated = !!this.dynamicProperties.length;
    this.pMatrix = new Matrix();
    this.rMatrix = new Matrix();
    this.sMatrix = new Matrix();
    this.tMatrix = new Matrix();
    this.matrix = new Matrix();
};

RepeaterModifier.prototype.applyTransforms = function(pMatrix, rMatrix, sMatrix, transform, perc, inv){
    var dir = inv ? -1 : 1;
    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);
    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);
    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);
    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);
    rMatrix.rotate(-transform.r.v * dir * perc);
    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);
    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);
    sMatrix.scale(inv ? 1/scaleX : scaleX, inv ? 1/scaleY : scaleY);
    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);
};

RepeaterModifier.prototype.init = function(elem, arr, pos, elemsData) {
    this.elem = elem;
    this.arr = arr;
    this.pos = pos;
    this.elemsData = elemsData;
    this._currentCopies = 0;
    this._elements = [];
    this._groups = [];
    this.frameId = -1;
    this.initDynamicPropertyContainer(elem);
    this.initModifierProperties(elem,arr[pos]);
    var cont = 0;
    while(pos>0){
        pos -= 1;
        //this._elements.unshift(arr.splice(pos,1)[0]);
        this._elements.unshift(arr[pos]);
        cont += 1;
    }
    if(this.dynamicProperties.length){
        this.k = true;
    }else{
        this.getValue(true);
    }
};

RepeaterModifier.prototype.resetElements = function(elements){
    var i, len = elements.length;
    for(i = 0; i < len; i += 1) {
        elements[i]._processed = false;
        if(elements[i].ty === 'gr'){
            this.resetElements(elements[i].it);
        }
    }
};

RepeaterModifier.prototype.cloneElements = function(elements){
    var i, len = elements.length;
    var newElements = JSON.parse(JSON.stringify(elements));
    this.resetElements(newElements);
    return newElements;
};

RepeaterModifier.prototype.changeGroupRender = function(elements, renderFlag) {
    var i, len = elements.length;
    for(i = 0; i < len; i += 1) {
        elements[i]._render = renderFlag;
        if(elements[i].ty === 'gr') {
            this.changeGroupRender(elements[i].it, renderFlag);
        }
    }
};

RepeaterModifier.prototype.processShapes = function(_isFirstFrame) {
    var items, itemsTransform, i, dir, cont;
    if(this._mdf || _isFirstFrame){
        var copies = Math.ceil(this.c.v);
        if(this._groups.length < copies){
            while(this._groups.length < copies){
                var group = {
                    it:this.cloneElements(this._elements),
                    ty:'gr'
                };
                group.it.push({"a":{"a":0,"ix":1,"k":[0,0]},"nm":"Transform","o":{"a":0,"ix":7,"k":100},"p":{"a":0,"ix":2,"k":[0,0]},"r":{"a":1,"ix":6,"k":[{s:0,e:0,t:0},{s:0,e:0,t:1}]},"s":{"a":0,"ix":3,"k":[100,100]},"sa":{"a":0,"ix":5,"k":0},"sk":{"a":0,"ix":4,"k":0},"ty":"tr"});
                
                this.arr.splice(0,0,group);
                this._groups.splice(0,0,group);
                this._currentCopies += 1;
            }
            this.elem.reloadShapes();
        }
        cont = 0;
        var renderFlag;
        for(i = 0; i  <= this._groups.length - 1; i += 1){
            renderFlag = cont < copies;
            this._groups[i]._render = renderFlag;
            this.changeGroupRender(this._groups[i].it, renderFlag);
            cont += 1;
        }
        
        this._currentCopies = copies;
        ////

        var offset = this.o.v;
        var offsetModulo = offset%1;
        var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);
        var k;
        var tMat = this.tr.v.props;
        var pProps = this.pMatrix.props;
        var rProps = this.rMatrix.props;
        var sProps = this.sMatrix.props;
        this.pMatrix.reset();
        this.rMatrix.reset();
        this.sMatrix.reset();
        this.tMatrix.reset();
        this.matrix.reset();
        var iteration = 0;

        if(offset > 0) {
            while(iteration<roundOffset){
                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);
                iteration += 1;
            }
            if(offsetModulo){
                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);
                iteration += offsetModulo;
            }
        } else if(offset < 0) {
            while(iteration>roundOffset){
                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);
                iteration -= 1;
            }
            if(offsetModulo){
                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, - offsetModulo, true);
                iteration -= offsetModulo;
            }
        }
        i = this.data.m === 1 ? 0 : this._currentCopies - 1;
        dir = this.data.m === 1 ? 1 : -1;
        cont = this._currentCopies;
        var j, jLen;
        while(cont){
            items = this.elemsData[i].it;
            itemsTransform = items[items.length - 1].transform.mProps.v.props;
            jLen = itemsTransform.length;
            items[items.length - 1].transform.mProps._mdf = true;
            items[items.length - 1].transform.op._mdf = true;
            items[items.length - 1].transform.op.v = this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1));
            if(iteration !== 0){
                if((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)){
                    this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);
                }
                this.matrix.transform(rProps[0],rProps[1],rProps[2],rProps[3],rProps[4],rProps[5],rProps[6],rProps[7],rProps[8],rProps[9],rProps[10],rProps[11],rProps[12],rProps[13],rProps[14],rProps[15]);
                this.matrix.transform(sProps[0],sProps[1],sProps[2],sProps[3],sProps[4],sProps[5],sProps[6],sProps[7],sProps[8],sProps[9],sProps[10],sProps[11],sProps[12],sProps[13],sProps[14],sProps[15]);
                this.matrix.transform(pProps[0],pProps[1],pProps[2],pProps[3],pProps[4],pProps[5],pProps[6],pProps[7],pProps[8],pProps[9],pProps[10],pProps[11],pProps[12],pProps[13],pProps[14],pProps[15]);
                
                for(j=0;j<jLen;j+=1) {
                    itemsTransform[j] = this.matrix.props[j];
                }
                this.matrix.reset();
            } else {
                this.matrix.reset();
                for(j=0;j<jLen;j+=1) {
                    itemsTransform[j] = this.matrix.props[j];
                }
            }
            iteration += 1;
            cont -= 1;
            i += dir;
        }
    } else {
        cont = this._currentCopies;
        i = 0;
        dir = 1;
        while(cont){
            items = this.elemsData[i].it;
            itemsTransform = items[items.length - 1].transform.mProps.v.props;
            items[items.length - 1].transform.mProps._mdf = false;
            items[items.length - 1].transform.op._mdf = false;
            cont -= 1;
            i += dir;
        }
    }
};

RepeaterModifier.prototype.addShape = function(){};

ShapeModifiers.registerModifier('rp',RepeaterModifier);
function ShapeCollection(){
	this._length = 0;
	this._maxLength = 4;
	this.shapes = createSizedArray(this._maxLength);
}

ShapeCollection.prototype.addShape = function(shapeData){
	if(this._length === this._maxLength){
		this.shapes = this.shapes.concat(createSizedArray(this._maxLength));
		this._maxLength *= 2;
	}
	this.shapes[this._length] = shapeData;
	this._length += 1;
};

ShapeCollection.prototype.releaseShapes = function(){
	var i;
	for(i = 0; i < this._length; i += 1) {
		shape_pool.release(this.shapes[i]);
	}
	this._length = 0;
};
function DashProperty(elem, data, renderer, container) {
    this.elem = elem;
    this.frameId = -1;
    this.dataProps = createSizedArray(data.length);
    this.renderer = renderer;
    this.k = false;
    this.dashStr = '';
    this.dashArray = createTypedArray('float32',  data.length ? data.length - 1 : 0);
    this.dashoffset = createTypedArray('float32',  1);
    this.initDynamicPropertyContainer(container);
    var i, len = data.length || 0, prop;
    for(i = 0; i < len; i += 1) {
        prop = PropertyFactory.getProp(elem,data[i].v,0, 0, this);
        this.k = prop.k || this.k;
        this.dataProps[i] = {n:data[i].n,p:prop};
    }
    if(!this.k){
        this.getValue(true);
    }
    this._isAnimated = this.k;
}

DashProperty.prototype.getValue = function(forceRender) {
    if(this.elem.globalData.frameId === this.frameId && !forceRender){
        return;
    }
    this.frameId = this.elem.globalData.frameId;
    this.iterateDynamicProperties();
    this._mdf = this._mdf || forceRender;
    if (this._mdf) {
        var i = 0, len = this.dataProps.length;
        if(this.renderer === 'svg') {
            this.dashStr = '';
        }
        for(i=0;i<len;i+=1){
            if(this.dataProps[i].n != 'o'){
                if(this.renderer === 'svg') {
                    this.dashStr += ' ' + this.dataProps[i].p.v;
                }else{
                    this.dashArray[i] = this.dataProps[i].p.v;
                }
            }else{
                this.dashoffset[0] = this.dataProps[i].p.v;
            }
        }
    }
};
extendPrototype([DynamicPropertyContainer], DashProperty);
function GradientProperty(elem,data,container){
    this.data = data;
    this.c = createTypedArray('uint8c', data.p*4);
    var cLength = data.k.k[0].s ? (data.k.k[0].s.length - data.p*4) : data.k.k.length - data.p*4;
    this.o = createTypedArray('float32', cLength);
    this._cmdf = false;
    this._omdf = false;
    this._collapsable = this.checkCollapsable();
    this._hasOpacity = cLength;
    this.initDynamicPropertyContainer(container);
    this.prop = PropertyFactory.getProp(elem,data.k,1,null,this);
    this.k = this.prop.k;
    this.getValue(true);
}

GradientProperty.prototype.comparePoints = function(values, points) {
    var i = 0, len = this.o.length/2, diff;
    while(i < len) {
        diff = Math.abs(values[i*4] - values[points*4 + i*2]);
        if(diff > 0.01){
            return false;
        }
        i += 1;
    }
    return true;
};

GradientProperty.prototype.checkCollapsable = function() {
    if (this.o.length/2 !== this.c.length/4) {
        return false;
    }
    if (this.data.k.k[0].s) {
        var i = 0, len = this.data.k.k.length;
        while (i < len) {
            if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {
                return false;
            }
            i += 1;
        }
    } else if(!this.comparePoints(this.data.k.k, this.data.p)) {
        return false;
    }
    return true;
};

GradientProperty.prototype.getValue = function(forceRender){
    this.prop.getValue();
    this._mdf = false;
    this._cmdf = false;
    this._omdf = false;
    if(this.prop._mdf || forceRender){
        var i, len = this.data.p*4;
        var mult, val;
        for(i=0;i<len;i+=1){
            mult = i%4 === 0 ? 100 : 255;
            val = Math.round(this.prop.v[i]*mult);
            if(this.c[i] !== val){
                this.c[i] = val;
                this._cmdf = !forceRender;
            }
        }
        if(this.o.length){
            len = this.prop.v.length;
            for(i=this.data.p*4;i<len;i+=1){
                mult = i%2 === 0 ? 100 : 1;
                val = i%2 === 0 ?  Math.round(this.prop.v[i]*100):this.prop.v[i];
                if(this.o[i-this.data.p*4] !== val){
                    this.o[i-this.data.p*4] = val;
                    this._omdf = !forceRender;
                }
            }
        }
        this._mdf = !forceRender;
    }
};

extendPrototype([DynamicPropertyContainer], GradientProperty);
var buildShapeString = function(pathNodes, length, closed, mat) {
	if(length === 0) {
            return '';
        }
        var _o = pathNodes.o;
        var _i = pathNodes.i;
        var _v = pathNodes.v;
        var i, shapeString = " M" + mat.applyToPointStringified(_v[0][0], _v[0][1]);
        for(i = 1; i < length; i += 1) {
            shapeString += " C" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + " " + mat.applyToPointStringified(_i[i][0], _i[i][1]) + " " + mat.applyToPointStringified(_v[i][0], _v[i][1]);
        }
        if (closed && length) {
            shapeString += " C" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + " " + mat.applyToPointStringified(_i[0][0], _i[0][1]) + " " + mat.applyToPointStringified(_v[0][0], _v[0][1]);
            shapeString += 'z';
        }
        return shapeString;
}
var audioControllerFactory = (function() {

	function AudioController(audioFactory) {
		this.audios = [];
		this.audioFactory = audioFactory;
		this._volume = 1;
		this._isMuted = false;
	}

	AudioController.prototype = {
		addAudio: function(audio) {
			this.audios.push(audio);
		},
		pause: function() {
			var i, len = this.audios.length;
			for(i = 0; i < len; i += 1) {
				this.audios[i].pause()
			}
		},
		resume: function() {
			var i, len = this.audios.length;
			for(i = 0; i < len; i += 1) {
				this.audios[i].resume()
			}
		},
		setRate: function(rateValue) {
			var i, len = this.audios.length;
			for(i = 0; i < len; i += 1) {
				this.audios[i].setRate(rateValue)
			}
		},
		createAudio: function(assetPath) {
			if (this.audioFactory) {
				return this.audioFactory(assetPath);
			} else if (Howl) {
				return new Howl({
					src: [assetPath]
				})
			} else {
				return {
					isPlaying: false,
					play: function(){this.isPlaying = true},
					seek: function(){this.isPlaying = false},
					playing: function(){},
					rate: function(){},
					setVolume: function(){},
				}
			}
		},
		setAudioFactory: function(audioFactory) {
			this.audioFactory = audioFactory;
		},
		setVolume: function(value) {
			this._volume = value;
			this._updateVolume();
		},
		mute: function() {
			this._isMuted = true;
			this._updateVolume();
		},
		unmute: function() {
			this._isMuted = false;
			this._updateVolume();
		},
		getVolume: function(value) {
			return this._volume;
		},
		_updateVolume: function() {
			var i, len = this.audios.length;
			for(i = 0; i < len; i += 1) {
				this.audios[i].volume(this._volume * (this._isMuted ? 0 : 1))
			}
		}
	}

	return function() {
		return new AudioController()
	}

}())
var ImagePreloader = (function(){

    var proxyImage = (function(){
        var canvas = createTag('canvas');
        canvas.width = 1;
        canvas.height = 1;
        var ctx = canvas.getContext('2d');
        ctx.fillStyle = 'rgba(0,0,0,0)';
        ctx.fillRect(0, 0, 1, 1);
        return canvas;
    }())

    function imageLoaded(){
        this.loadedAssets += 1;
        if(this.loadedAssets === this.totalImages){
            if(this.imagesLoadedCb) {
                this.imagesLoadedCb(null);
            }
        }
    }

    function getAssetsPath(assetData, assetsPath, original_path) {
        var path = '';
        if (assetData.e) {
            path = assetData.p;
        } else if(assetsPath) {
            var imagePath = assetData.p;
            if (imagePath.indexOf('images/') !== -1) {
                imagePath = imagePath.split('/')[1];
            }
            path = assetsPath + imagePath;
        } else {
            path = original_path;
            path += assetData.u ? assetData.u : '';
            path += assetData.p;
        }
        return path;
    }

    function createImageData(assetData) {
        var path = getAssetsPath(assetData, this.assetsPath, this.path);
        var img = createNS('image');
        img.addEventListener('load', this._imageLoaded, false);
        img.addEventListener('error', function() {
            ob.img = proxyImage;
            this._imageLoaded();
        }.bind(this), false);
        img.setAttributeNS('http://www.w3.org/1999/xlink','href', path);
        var ob = {
            img: img,
            assetData: assetData
        }
        return ob;
    }

    function createImgData(assetData) {
        var path = getAssetsPath(assetData, this.assetsPath, this.path);
        var img = createTag('img');
        img.crossOrigin = 'anonymous';
        img.addEventListener('load', this._imageLoaded, false);
        img.addEventListener('error', function() {
            ob.img = proxyImage;
            this._imageLoaded();
        }.bind(this), false);
        img.src = path;
        var ob = {
            img: img,
            assetData: assetData
        }
        return ob;
    }

    function loadAssets(assets, cb){
        this.imagesLoadedCb = cb;
        var i, len = assets.length;
        for (i = 0; i < len; i += 1) {
            if(!assets[i].layers){
                this.totalImages += 1;
                this.images.push(this._createImageData(assets[i]));
            }
        }
    }

    function setPath(path){
        this.path = path || '';
    }

    function setAssetsPath(path){
        this.assetsPath = path || '';
    }

    function getImage(assetData) {
        var i = 0, len = this.images.length;
        while (i < len) {
            if (this.images[i].assetData === assetData) {
                return this.images[i].img;
            }
            i += 1;
        }
    }

    function destroy() {
        this.imagesLoadedCb = null;
        this.images.length = 0;
    }

    function loaded() {
        return this.totalImages === this.loadedAssets;
    }

    function setCacheType(type) {
        if (type === 'svg') {
            this._createImageData = this.createImageData.bind(this);
        } else {
            this._createImageData = this.createImgData.bind(this);
        }
    }

    function ImagePreloader(type){
        this._imageLoaded = imageLoaded.bind(this);
        this.assetsPath = '';
        this.path = '';
        this.totalImages = 0;
        this.loadedAssets = 0;
        this.imagesLoadedCb = null;
        this.images = [];
    };

    ImagePreloader.prototype = {
        loadAssets: loadAssets,
        setAssetsPath: setAssetsPath,
        setPath: setPath,
        loaded: loaded,
        destroy: destroy,
        getImage: getImage,
        createImgData: createImgData,
        createImageData: createImageData,
        imageLoaded: imageLoaded,
        setCacheType: setCacheType,
    }

    return ImagePreloader;
}());
var featureSupport = (function(){
	var ob = {
		maskType: true
	};
	if (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\/\d./i.test(navigator.userAgent)) {
	   ob.maskType = false;
	}
	return ob;
}());
var filtersFactory = (function(){
	var ob = {};
	ob.createFilter = createFilter;
	ob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;

	function createFilter(filId){
        	var fil = createNS('filter');
        	fil.setAttribute('id',filId);
                fil.setAttribute('filterUnits','objectBoundingBox');
                fil.setAttribute('x','0%');
                fil.setAttribute('y','0%');
                fil.setAttribute('width','100%');
                fil.setAttribute('height','100%');
                return fil;
	}

	function createAlphaToLuminanceFilter(){
                var feColorMatrix = createNS('feColorMatrix');
                feColorMatrix.setAttribute('type','matrix');
                feColorMatrix.setAttribute('color-interpolation-filters','sRGB');
                feColorMatrix.setAttribute('values','0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');
                return feColorMatrix;
	}

	return ob;
}());
var assetLoader = (function(){

	function formatResponse(xhr) {
		if(xhr.response && typeof xhr.response === 'object') {
			return xhr.response;
		} else if(xhr.response && typeof xhr.response === 'string') {
			return JSON.parse(xhr.response);
		} else if(xhr.responseText) {
			return JSON.parse(xhr.responseText);
		}
	}

	function loadAsset(path, callback, errorCallback) {
		var response;
		var xhr = new XMLHttpRequest();
		xhr.open('GET', path, true);
		// set responseType after calling open or IE will break.
		try {
		    // This crashes on Android WebView prior to KitKat
		    xhr.responseType = "json";
		} catch (err) {}
	    xhr.send();
	    xhr.onreadystatechange = function () {
	        if (xhr.readyState == 4) {
	            if(xhr.status == 200){
	            	response = formatResponse(xhr);
	            	callback(response);
	            }else{
	                try{
	            		response = formatResponse(xhr);
	            		callback(response);
	                }catch(err){
	                	if(errorCallback) {
	                		errorCallback(err);
	                	}
	                }
	            }
	        }
	    };
	}
	return {
		load: loadAsset
	}
}())

function TextAnimatorProperty(textData, renderType, elem){
    this._isFirstFrame = true;
	this._hasMaskedPath = false;
	this._frameId = -1;
	this._textData = textData;
	this._renderType = renderType;
    this._elem = elem;
	this._animatorsData = createSizedArray(this._textData.a.length);
	this._pathData = {};
	this._moreOptions = {
		alignment: {}
	};
	this.renderedLetters = [];
    this.lettersChangedFlag = false;
    this.initDynamicPropertyContainer(elem);

}

TextAnimatorProperty.prototype.searchProperties = function(){
    var i, len = this._textData.a.length, animatorProps;
    var getProp = PropertyFactory.getProp;
    for(i=0;i<len;i+=1){
        animatorProps = this._textData.a[i];
        this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);
    }
    if(this._textData.p && 'm' in this._textData.p){
        this._pathData = {
            f: getProp(this._elem,this._textData.p.f,0,0,this),
            l: getProp(this._elem,this._textData.p.l,0,0,this),
            r: this._textData.p.r,
            m: this._elem.maskManager.getMaskProperty(this._textData.p.m)
        };
        this._hasMaskedPath = true;
    } else {
        this._hasMaskedPath = false;
    }
    this._moreOptions.alignment = getProp(this._elem,this._textData.m.a,1,0,this);
};

TextAnimatorProperty.prototype.getMeasures = function(documentData, lettersChangedFlag){
    this.lettersChangedFlag = lettersChangedFlag;
    if(!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {
        return;
    }
    this._isFirstFrame = false;
    var alignment = this._moreOptions.alignment.v;
    var animators = this._animatorsData;
    var textData = this._textData;
    var matrixHelper = this.mHelper;
    var renderType = this._renderType;
    var renderedLettersCount = this.renderedLetters.length;
    var data = this.data;
    var xPos,yPos;
    var i, len;
    var letters = documentData.l, pathInfo, currentLength, currentPoint, segmentLength, flag, pointInd, segmentInd, prevPoint, points, segments, partialLength, totalLength, perc, tanAngle, mask;
    if(this._hasMaskedPath) {
        mask = this._pathData.m;
        if(!this._pathData.n || this._pathData._mdf){
            var paths = mask.v;
            if(this._pathData.r){
                paths = paths.reverse();
            }
            // TODO: release bezier data cached from previous pathInfo: this._pathData.pi
            pathInfo = {
                tLength: 0,
                segments: []
            };
            len = paths._length - 1;
            var bezierData;
            totalLength = 0;
            for (i = 0; i < len; i += 1) {
                bezierData = bez.buildBezierData(paths.v[i]
                    , paths.v[i + 1]
                    , [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]]
                    , [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]);
                pathInfo.tLength += bezierData.segmentLength;
                pathInfo.segments.push(bezierData);
                totalLength += bezierData.segmentLength;
            }
            i = len;
            if (mask.v.c) {
                bezierData = bez.buildBezierData(paths.v[i]
                    , paths.v[0]
                    , [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]]
                    , [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]);
                pathInfo.tLength += bezierData.segmentLength;
                pathInfo.segments.push(bezierData);
                totalLength += bezierData.segmentLength;
            }
            this._pathData.pi = pathInfo;
        }
        pathInfo = this._pathData.pi;

        currentLength = this._pathData.f.v;
        segmentInd = 0;
        pointInd = 1;
        segmentLength = 0;
        flag = true;
        segments = pathInfo.segments;
        if (currentLength < 0 && mask.v.c) {
            if (pathInfo.tLength < Math.abs(currentLength)) {
                currentLength = -Math.abs(currentLength) % pathInfo.tLength;
            }
            segmentInd = segments.length - 1;
            points = segments[segmentInd].points;
            pointInd = points.length - 1;
            while (currentLength < 0) {
                currentLength += points[pointInd].partialLength;
                pointInd -= 1;
                if (pointInd < 0) {
                    segmentInd -= 1;
                    points = segments[segmentInd].points;
                    pointInd = points.length - 1;
                }
            }

        }
        points = segments[segmentInd].points;
        prevPoint = points[pointInd - 1];
        currentPoint = points[pointInd];
        partialLength = currentPoint.partialLength;
    }


    len = letters.length;
    xPos = 0;
    yPos = 0;
    var yOff = documentData.finalSize * 1.2 * 0.714;
    var firstLine = true;
    var animatorProps, animatorSelector;
    var j, jLen;
    var letterValue;

    jLen = animators.length;
    var lastLetter;

    var mult, ind = -1, offf, xPathPos, yPathPos;
    var initPathPos = currentLength,initSegmentInd = segmentInd, initPointInd = pointInd, currentLine = -1;
    var elemOpacity;
    var sc,sw,fc,k;
    var lineLength = 0;
    var letterSw, letterSc, letterFc, letterM = '', letterP = this.defaultPropsArray, letterO;

    //
    if(documentData.j === 2 || documentData.j === 1) {
        var animatorJustifyOffset = 0;
        var animatorFirstCharOffset = 0;
        var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;
        var lastIndex = 0;
        var isNewLine = true;

        for (i = 0; i < len; i += 1) {
            if (letters[i].n) {
                if(animatorJustifyOffset) {
                    animatorJustifyOffset += animatorFirstCharOffset;
                }
                while (lastIndex < i) {
                    letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;
                    lastIndex += 1;
                }
                animatorJustifyOffset = 0;
                isNewLine = true;
            } else {
                for (j = 0; j < jLen; j += 1) {
                    animatorProps = animators[j].a;
                    if (animatorProps.t.propType) {
                        if (isNewLine && documentData.j === 2) {
                            animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;
                        }
                        animatorSelector = animators[j].s;
                        mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);
                        if (mult.length) {
                            animatorJustifyOffset += animatorProps.t.v*mult[0] * justifyOffsetMult;
                        } else {
                            animatorJustifyOffset += animatorProps.t.v*mult * justifyOffsetMult;
                        }
                    }
                }
                isNewLine = false;
            }
        }
        if(animatorJustifyOffset) {
            animatorJustifyOffset += animatorFirstCharOffset;
        }
        while(lastIndex < i) {
            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;
            lastIndex += 1;
        }
    }
    //

    for( i = 0; i < len; i += 1) {

        matrixHelper.reset();
        elemOpacity = 1;
        if(letters[i].n) {
            xPos = 0;
            yPos += documentData.yOffset;
            yPos += firstLine ? 1 : 0;
            currentLength = initPathPos ;
            firstLine = false;
            lineLength = 0;
            if(this._hasMaskedPath) {
                segmentInd = initSegmentInd;
                pointInd = initPointInd;
                points = segments[segmentInd].points;
                prevPoint = points[pointInd - 1];
                currentPoint = points[pointInd];
                partialLength = currentPoint.partialLength;
                segmentLength = 0;
            }
            letterO = letterSw = letterFc = letterM = '';
            letterP = this.defaultPropsArray;
        }else{
            if(this._hasMaskedPath) {
                if(currentLine !== letters[i].line){
                    switch(documentData.j){
                        case 1:
                            currentLength += totalLength - documentData.lineWidths[letters[i].line];
                            break;
                        case 2:
                            currentLength += (totalLength - documentData.lineWidths[letters[i].line])/2;
                            break;
                    }
                    currentLine = letters[i].line;
                }
                if (ind !== letters[i].ind) {
                    if (letters[ind]) {
                        currentLength += letters[ind].extra;
                    }
                    currentLength += letters[i].an / 2;
                    ind = letters[i].ind;
                }
                currentLength += alignment[0] * letters[i].an / 200;
                var animatorOffset = 0;
                for (j = 0; j < jLen; j += 1) {
                    animatorProps = animators[j].a;
                    if (animatorProps.p.propType) {
                        animatorSelector = animators[j].s;
                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);
                        if(mult.length){
                            animatorOffset += animatorProps.p.v[0] * mult[0];
                        } else{
                            animatorOffset += animatorProps.p.v[0] * mult;
                        }

                    }
                    if (animatorProps.a.propType) {
                        animatorSelector = animators[j].s;
                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);
                        if(mult.length){
                            animatorOffset += animatorProps.a.v[0] * mult[0];
                        } else{
                            animatorOffset += animatorProps.a.v[0] * mult;
                        }

                    }
                }
                flag = true;
                while (flag) {
                    if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {
                        perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;
                        xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;
                        yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;
                        matrixHelper.translate(-alignment[0]*letters[i].an/200, -(alignment[1] * yOff / 100));
                        flag = false;
                    } else if (points) {
                        segmentLength += currentPoint.partialLength;
                        pointInd += 1;
                        if (pointInd >= points.length) {
                            pointInd = 0;
                            segmentInd += 1;
                            if (!segments[segmentInd]) {
                                if (mask.v.c) {
                                    pointInd = 0;
                                    segmentInd = 0;
                                    points = segments[segmentInd].points;
                                } else {
                                    segmentLength -= currentPoint.partialLength;
                                    points = null;
                                }
                            } else {
                                points = segments[segmentInd].points;
                            }
                        }
                        if (points) {
                            prevPoint = currentPoint;
                            currentPoint = points[pointInd];
                            partialLength = currentPoint.partialLength;
                        }
                    }
                }
                offf = letters[i].an / 2 - letters[i].add;
                matrixHelper.translate(-offf, 0, 0);
            } else {
                offf = letters[i].an/2 - letters[i].add;
                matrixHelper.translate(-offf,0,0);

                // Grouping alignment
                matrixHelper.translate(-alignment[0]*letters[i].an/200, -alignment[1]*yOff/100, 0);
            }

            lineLength += letters[i].l/2;
            for(j=0;j<jLen;j+=1){
                animatorProps = animators[j].a;
                if (animatorProps.t.propType) {
                    animatorSelector = animators[j].s;
                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);
                    //This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean "isNewLine"
                    if(xPos !== 0 || documentData.j !== 0) {
                        if(this._hasMaskedPath) {
                            if(mult.length) {
                                currentLength += animatorProps.t.v*mult[0];
                            } else {
                                currentLength += animatorProps.t.v*mult;
                            }
                        }else{
                            if(mult.length) {
                                xPos += animatorProps.t.v*mult[0];
                            } else {
                                xPos += animatorProps.t.v*mult;
                            }
                        }
                    }
                }
            }
            lineLength += letters[i].l/2;
            if(documentData.strokeWidthAnim) {
                sw = documentData.sw || 0;
            }
            if(documentData.strokeColorAnim) {
                if(documentData.sc){
                    sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];
                }else{
                    sc = [0,0,0];
                }
            }
            if(documentData.fillColorAnim && documentData.fc) {
                fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];
            }
            for(j=0;j<jLen;j+=1){
                animatorProps = animators[j].a;
                if (animatorProps.a.propType) {
                    animatorSelector = animators[j].s;
                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);

                    if(mult.length){
                        matrixHelper.translate(-animatorProps.a.v[0]*mult[0], -animatorProps.a.v[1]*mult[1], animatorProps.a.v[2]*mult[2]);
                    } else {
                        matrixHelper.translate(-animatorProps.a.v[0]*mult, -animatorProps.a.v[1]*mult, animatorProps.a.v[2]*mult);
                    }
                }
            }
            for(j=0;j<jLen;j+=1){
                animatorProps = animators[j].a;
                if (animatorProps.s.propType) {
                    animatorSelector = animators[j].s;
                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);
                    if(mult.length){
                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult[0]),1+((animatorProps.s.v[1]-1)*mult[1]),1);
                    } else {
                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult),1+((animatorProps.s.v[1]-1)*mult),1);
                    }
                }
            }
            for(j=0;j<jLen;j+=1) {
                animatorProps = animators[j].a;
                animatorSelector = animators[j].s;
                mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);
                if (animatorProps.sk.propType) {
                    if(mult.length) {
                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);
                    } else {
                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);
                    }
                }
                if (animatorProps.r.propType) {
                    if(mult.length) {
                        matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);
                    } else {
                        matrixHelper.rotateZ(-animatorProps.r.v * mult);
                    }
                }
                if (animatorProps.ry.propType) {

                    if(mult.length) {
                        matrixHelper.rotateY(animatorProps.ry.v*mult[1]);
                    }else{
                        matrixHelper.rotateY(animatorProps.ry.v*mult);
                    }
                }
                if (animatorProps.rx.propType) {
                    if(mult.length) {
                        matrixHelper.rotateX(animatorProps.rx.v*mult[0]);
                    } else {
                        matrixHelper.rotateX(animatorProps.rx.v*mult);
                    }
                }
                if (animatorProps.o.propType) {
                    if(mult.length) {
                        elemOpacity += ((animatorProps.o.v)*mult[0] - elemOpacity)*mult[0];
                    } else {
                        elemOpacity += ((animatorProps.o.v)*mult - elemOpacity)*mult;
                    }
                }
                if (documentData.strokeWidthAnim && animatorProps.sw.propType) {
                    if(mult.length) {
                        sw += animatorProps.sw.v*mult[0];
                    } else {
                        sw += animatorProps.sw.v*mult;
                    }
                }
                if (documentData.strokeColorAnim && animatorProps.sc.propType) {
                    for(k=0;k<3;k+=1){
                        if(mult.length) {
                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult[0];
                        } else {
                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult;
                        }
                    }
                }
                if (documentData.fillColorAnim && documentData.fc) {
                    if(animatorProps.fc.propType){
                        for(k=0;k<3;k+=1){
                            if(mult.length) {
                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult[0];
                            } else {
                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult;
                            }
                        }
                    }
                    if(animatorProps.fh.propType){
                        if(mult.length) {
                            fc = addHueToRGB(fc,animatorProps.fh.v*mult[0]);
                        } else {
                            fc = addHueToRGB(fc,animatorProps.fh.v*mult);
                        }
                    }
                    if(animatorProps.fs.propType){
                        if(mult.length) {
                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult[0]);
                        } else {
                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult);
                        }
                    }
                    if(animatorProps.fb.propType){
                        if(mult.length) {
                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult[0]);
                        } else {
                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult);
                        }
                    }
                }
            }

            for(j=0;j<jLen;j+=1){
                animatorProps = animators[j].a;

                if (animatorProps.p.propType) {
                    animatorSelector = animators[j].s;
                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);
                    if(this._hasMaskedPath) {
                        if(mult.length) {
                            matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);
                        } else {
                            matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);
                        }
                    }else{
                        if(mult.length) {
                            matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);
                        } else {
                            matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);
                        
                        }
                    }
                }
            }
            if(documentData.strokeWidthAnim){
                letterSw = sw < 0 ? 0 : sw;
            }
            if(documentData.strokeColorAnim){
                letterSc = 'rgb('+Math.round(sc[0]*255)+','+Math.round(sc[1]*255)+','+Math.round(sc[2]*255)+')';
            }
            if(documentData.fillColorAnim && documentData.fc){
                letterFc = 'rgb('+Math.round(fc[0]*255)+','+Math.round(fc[1]*255)+','+Math.round(fc[2]*255)+')';
            }

            if(this._hasMaskedPath) {
                matrixHelper.translate(0,-documentData.ls);

                matrixHelper.translate(0, alignment[1]*yOff/100 + yPos,0);
                if (textData.p.p) {
                    tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);
                    var rot = Math.atan(tanAngle) * 180 / Math.PI;
                    if (currentPoint.point[0] < prevPoint.point[0]) {
                        rot += 180;
                    }
                    matrixHelper.rotate(-rot * Math.PI / 180);
                }
                matrixHelper.translate(xPathPos, yPathPos, 0);
                currentLength -= alignment[0]*letters[i].an/200;
                if(letters[i+1] && ind !== letters[i+1].ind){
                    currentLength += letters[i].an / 2;
                    currentLength += documentData.tr/1000*documentData.finalSize;
                }
            }else{

                matrixHelper.translate(xPos,yPos,0);

                if(documentData.ps){
                    //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);
                    matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);
                }
                switch(documentData.j){
                    case 1:
                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]),0,0);
                        break;
                    case 2:
                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line])/2,0,0);
                        break;
                }
                matrixHelper.translate(0,-documentData.ls);
                matrixHelper.translate(offf,0,0);
                matrixHelper.translate(alignment[0]*letters[i].an/200,alignment[1]*yOff/100,0);
                xPos += letters[i].l + documentData.tr/1000*documentData.finalSize;
            }
            if(renderType === 'html'){
                letterM = matrixHelper.toCSS();
            }else if(renderType === 'svg'){
                letterM = matrixHelper.to2dCSS();
            }else{
                letterP = [matrixHelper.props[0],matrixHelper.props[1],matrixHelper.props[2],matrixHelper.props[3],matrixHelper.props[4],matrixHelper.props[5],matrixHelper.props[6],matrixHelper.props[7],matrixHelper.props[8],matrixHelper.props[9],matrixHelper.props[10],matrixHelper.props[11],matrixHelper.props[12],matrixHelper.props[13],matrixHelper.props[14],matrixHelper.props[15]];
            }
            letterO = elemOpacity;
        }

        if(renderedLettersCount <= i) {
            letterValue = new LetterProps(letterO,letterSw,letterSc,letterFc,letterM,letterP);
            this.renderedLetters.push(letterValue);
            renderedLettersCount += 1;
            this.lettersChangedFlag = true;
        } else {
            letterValue = this.renderedLetters[i];
            this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;
        }
    }
};

TextAnimatorProperty.prototype.getValue = function(){
	if(this._elem.globalData.frameId === this._frameId){
        return;
    }
    this._frameId = this._elem.globalData.frameId;
    this.iterateDynamicProperties();
};

TextAnimatorProperty.prototype.mHelper = new Matrix();
TextAnimatorProperty.prototype.defaultPropsArray = [];
extendPrototype([DynamicPropertyContainer], TextAnimatorProperty);
function TextAnimatorDataProperty(elem, animatorProps, container) {
	var defaultData = {propType:false};
	var getProp = PropertyFactory.getProp;
	var textAnimator_animatables = animatorProps.a;
	this.a = {
		r: textAnimator_animatables.r ? getProp(elem, textAnimator_animatables.r, 0, degToRads, container) : defaultData,
		rx: textAnimator_animatables.rx ? getProp(elem, textAnimator_animatables.rx, 0, degToRads, container) : defaultData,
		ry: textAnimator_animatables.ry ? getProp(elem, textAnimator_animatables.ry, 0, degToRads, container) : defaultData,
		sk: textAnimator_animatables.sk ? getProp(elem, textAnimator_animatables.sk, 0, degToRads, container) : defaultData,
		sa: textAnimator_animatables.sa ? getProp(elem, textAnimator_animatables.sa, 0, degToRads, container) : defaultData,
		s: textAnimator_animatables.s ? getProp(elem, textAnimator_animatables.s, 1, 0.01, container) : defaultData,
		a: textAnimator_animatables.a ? getProp(elem, textAnimator_animatables.a, 1, 0, container) : defaultData,
		o: textAnimator_animatables.o ? getProp(elem, textAnimator_animatables.o, 0, 0.01, container) : defaultData,
		p: textAnimator_animatables.p ? getProp(elem,textAnimator_animatables.p, 1, 0, container) : defaultData,
		sw: textAnimator_animatables.sw ? getProp(elem, textAnimator_animatables.sw, 0, 0, container) : defaultData,
		sc: textAnimator_animatables.sc ? getProp(elem, textAnimator_animatables.sc, 1, 0, container) : defaultData,
		fc: textAnimator_animatables.fc ? getProp(elem, textAnimator_animatables.fc, 1, 0, container) : defaultData,
		fh: textAnimator_animatables.fh ? getProp(elem, textAnimator_animatables.fh, 0, 0, container) : defaultData,
		fs: textAnimator_animatables.fs ? getProp(elem, textAnimator_animatables.fs, 0, 0.01, container) : defaultData,
		fb: textAnimator_animatables.fb ? getProp(elem, textAnimator_animatables.fb, 0, 0.01, container) : defaultData,
		t: textAnimator_animatables.t ? getProp(elem, textAnimator_animatables.t, 0, 0, container) : defaultData
	};

	this.s = TextSelectorProp.getTextSelectorProp(elem,animatorProps.s, container);
    this.s.t = animatorProps.s.t;
}
function LetterProps(o, sw, sc, fc, m, p){
    this.o = o;
    this.sw = sw;
    this.sc = sc;
    this.fc = fc;
    this.m = m;
    this.p = p;
    this._mdf = {
    	o: true,
    	sw: !!sw,
    	sc: !!sc,
    	fc: !!fc,
    	m: true,
    	p: true
    };
}

LetterProps.prototype.update = function(o, sw, sc, fc, m, p) {
	this._mdf.o = false;
	this._mdf.sw = false;
	this._mdf.sc = false;
	this._mdf.fc = false;
	this._mdf.m = false;
	this._mdf.p = false;
	var updated = false;

	if(this.o !== o) {
		this.o = o;
		this._mdf.o = true;
		updated = true;
	}
	if(this.sw !== sw) {
		this.sw = sw;
		this._mdf.sw = true;
		updated = true;
	}
	if(this.sc !== sc) {
		this.sc = sc;
		this._mdf.sc = true;
		updated = true;
	}
	if(this.fc !== fc) {
		this.fc = fc;
		this._mdf.fc = true;
		updated = true;
	}
	if(this.m !== m) {
		this.m = m;
		this._mdf.m = true;
		updated = true;
	}
	if(p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {
		this.p = p;
		this._mdf.p = true;
		updated = true;
	}
	return updated;
};
function TextProperty(elem, data){
	this._frameId = initialDefaultFrame;
	this.pv = '';
	this.v = '';
	this.kf = false;
	this._isFirstFrame = true;
	this._mdf = false;
    this.data = data;
	this.elem = elem;
    this.comp = this.elem.comp;
	this.keysIndex = 0;
    this.canResize = false;
    this.minimumFontSize = 1;
    this.effectsSequence = [];
	this.currentData = {
		ascent: 0,
        boxWidth: this.defaultBoxWidth,
        f: '',
        fStyle: '',
        fWeight: '',
        fc: '',
        j: '',
        justifyOffset: '',
        l: [],
        lh: 0,
        lineWidths: [],
        ls: '',
        of: '',
        s: '',
        sc: '',
        sw: 0,
        t: 0,
        tr: 0,
        sz:0,
        ps:null,
        fillColorAnim: false,
        strokeColorAnim: false,
        strokeWidthAnim: false,
        yOffset: 0,
        finalSize:0,
        finalText:[],
        finalLineHeight: 0,
        __complete: false

	};
    this.copyData(this.currentData, this.data.d.k[0].s);

    if(!this.searchProperty()) {
        this.completeTextData(this.currentData);
    }
}

TextProperty.prototype.defaultBoxWidth = [0,0];

TextProperty.prototype.copyData = function(obj, data) {
    for(var s in data) {
        if(data.hasOwnProperty(s)) {
            obj[s] = data[s];
        }
    }
    return obj;
}

TextProperty.prototype.setCurrentData = function(data){
    if(!data.__complete) {
        this.completeTextData(data);
    }
    this.currentData = data;
    this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth;
    this._mdf = true;
};

TextProperty.prototype.searchProperty = function() {
    return this.searchKeyframes();
};

TextProperty.prototype.searchKeyframes = function() {
    this.kf = this.data.d.k.length > 1;
    if(this.kf) {
        this.addEffect(this.getKeyframeValue.bind(this));
    }
    return this.kf;
}

TextProperty.prototype.addEffect = function(effectFunction) {
	this.effectsSequence.push(effectFunction);
    this.elem.addDynamicProperty(this);
};

TextProperty.prototype.getValue = function(_finalValue) {
    if((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {
        return;
    }
    this.currentData.t = this.data.d.k[this.keysIndex].s.t;
    var currentValue = this.currentData;
    var currentIndex = this.keysIndex;
    if(this.lock) {
        this.setCurrentData(this.currentData);
        return;
    }
    this.lock = true;
    this._mdf = false;
    var multipliedValue;
    var i, len = this.effectsSequence.length;
    var finalValue = _finalValue || this.data.d.k[this.keysIndex].s;
    for(i = 0; i < len; i += 1) {
        //Checking if index changed to prevent creating a new object every time the expression updates.
        if(currentIndex !== this.keysIndex) {
            finalValue = this.effectsSequence[i](finalValue, finalValue.t);
        } else {
            finalValue = this.effectsSequence[i](this.currentData, finalValue.t);
        }
    }
    if(currentValue !== finalValue) {
        this.setCurrentData(finalValue);
    }
    this.pv = this.v = this.currentData;
    this.lock = false;
    this.frameId = this.elem.globalData.frameId;
}

TextProperty.prototype.getKeyframeValue = function() {
    var textKeys = this.data.d.k, textDocumentData;
    var frameNum = this.elem.comp.renderedFrame;
    var i = 0, len = textKeys.length;
    while(i <= len - 1) {
        textDocumentData = textKeys[i].s;
        if(i === len - 1 || textKeys[i+1].t > frameNum){
            break;
        }
        i += 1;
    }
    if(this.keysIndex !== i) {
        this.keysIndex = i;
    }
    return this.data.d.k[this.keysIndex].s;
};

TextProperty.prototype.buildFinalText = function(text) {
    var combinedCharacters = FontManager.getCombinedCharacterCodes();
    var charactersArray = [];
    var i = 0, len = text.length;
    var charCode;
    while (i < len) {
        charCode = text.charCodeAt(i);
        if (combinedCharacters.indexOf(charCode) !== -1) {
            charactersArray[charactersArray.length - 1] += text.charAt(i);
        } else {
            if (charCode >= 0xD800 && charCode <= 0xDBFF) {
                charCode = text.charCodeAt(i + 1);
                if (charCode >= 0xDC00 && charCode <= 0xDFFF) {
                    charactersArray.push(text.substr(i, 2));
                    ++i;
                } else {
                    charactersArray.push(text.charAt(i));
                }
            } else {
                charactersArray.push(text.charAt(i));
            }
        }
        i += 1;
    }
    return charactersArray;
}

TextProperty.prototype.completeTextData = function(documentData) {
    documentData.__complete = true;
    var fontManager = this.elem.globalData.fontManager;
    var data = this.data;
    var letters = [];
    var i, len;
    var newLineFlag, index = 0, val;
    var anchorGrouping = data.m.g;
    var currentSize = 0, currentPos = 0, currentLine = 0, lineWidths = [];
    var lineWidth = 0;
    var maxLineWidth = 0;
    var j, jLen;
    var fontData = fontManager.getFontByName(documentData.f);
    var charData, cLength = 0;
    var styles = fontData.fStyle ? fontData.fStyle.split(' ') : [];

    var fWeight = 'normal', fStyle = 'normal';
    len = styles.length;
    var styleName;
    for(i=0;i<len;i+=1){
        styleName = styles[i].toLowerCase();
        switch(styleName) {
            case 'italic':
            fStyle = 'italic';
            break;
            case 'bold':
            fWeight = '700';
            break;
            case 'black':
            fWeight = '900';
            break;
            case 'medium':
            fWeight = '500';
            break;
            case 'regular':
            case 'normal':
            fWeight = '400';
            break;
            case 'light':
            case 'thin':
            fWeight = '200';
            break;
        }
    }
    documentData.fWeight = fontData.fWeight || fWeight;
    documentData.fStyle = fStyle;
    documentData.finalSize = documentData.s;
    documentData.finalText = this.buildFinalText(documentData.t);
    len = documentData.finalText.length;
    documentData.finalLineHeight = documentData.lh;
    var trackingOffset = documentData.tr/1000*documentData.finalSize;
    var charCode;
    if(documentData.sz){
        var flag = true;
        var boxWidth = documentData.sz[0];
        var boxHeight = documentData.sz[1];
        var currentHeight, finalText;
        while(flag) {
            finalText = this.buildFinalText(documentData.t);
            currentHeight = 0;
            lineWidth = 0;
            len = finalText.length;
            trackingOffset = documentData.tr/1000*documentData.finalSize;
            var lastSpaceIndex = -1;
            for(i=0;i<len;i+=1){
                charCode = finalText[i].charCodeAt(0);
                newLineFlag = false;
                if(finalText[i] === ' '){
                    lastSpaceIndex = i;
                }else if(charCode === 13 || charCode === 3){
                    lineWidth = 0;
                    newLineFlag = true;
                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;
                }
                if(fontManager.chars){
                    charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);
                    cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;
                }else{
                    //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;
                    cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);
                }
                if(lineWidth + cLength > boxWidth && finalText[i] !== ' '){
                    if(lastSpaceIndex === -1){
                        len += 1;
                    } else {
                        i = lastSpaceIndex;
                    }
                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;
                    finalText.splice(i, lastSpaceIndex === i ? 1 : 0,"\r");
                    //finalText = finalText.substr(0,i) + "\r" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);
                    lastSpaceIndex = -1;
                    lineWidth = 0;
                }else {
                    lineWidth += cLength;
                    lineWidth += trackingOffset;
                }
            }
            currentHeight += fontData.ascent*documentData.finalSize/100;
            if(this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {
                documentData.finalSize -= 1;
                documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;
            } else {
                documentData.finalText = finalText;
                len = documentData.finalText.length;
                flag = false;
            }
        }

    }
    lineWidth = - trackingOffset;
    cLength = 0;
    var uncollapsedSpaces = 0;
    var currentChar;
    for (i = 0;i < len ;i += 1) {
        newLineFlag = false;
        currentChar = documentData.finalText[i];
        charCode = currentChar.charCodeAt(0);
        if (charCode === 13 || charCode === 3) {
            uncollapsedSpaces = 0;
            lineWidths.push(lineWidth);
            maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;
            lineWidth = - 2 * trackingOffset;
            val = '';
            newLineFlag = true;
            currentLine += 1;
        }else{
            val = currentChar;
        }
        if(fontManager.chars){
            charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);
            cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;
        }else{
            //var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);
            //tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;
            cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);
        }

        //
        if(currentChar === ' '){
            uncollapsedSpaces += cLength + trackingOffset;
        } else {
            lineWidth += cLength + trackingOffset + uncollapsedSpaces;
            uncollapsedSpaces = 0;
        }
        letters.push({l:cLength,an:cLength,add:currentSize,n:newLineFlag, anIndexes:[], val: val, line: currentLine, animatorJustifyOffset: 0});
        if(anchorGrouping == 2){
            currentSize += cLength;
            if(val === '' || val === ' ' || i === len - 1){
                if(val === '' || val === ' '){
                    currentSize -= cLength;
                }
                while(currentPos<=i){
                    letters[currentPos].an = currentSize;
                    letters[currentPos].ind = index;
                    letters[currentPos].extra = cLength;
                    currentPos += 1;
                }
                index += 1;
                currentSize = 0;
            }
        }else if(anchorGrouping == 3){
            currentSize += cLength;
            if(val === '' || i === len - 1){
                if(val === ''){
                    currentSize -= cLength;
                }
                while(currentPos<=i){
                    letters[currentPos].an = currentSize;
                    letters[currentPos].ind = index;
                    letters[currentPos].extra = cLength;
                    currentPos += 1;
                }
                currentSize = 0;
                index += 1;
            }
        }else{
            letters[index].ind = index;
            letters[index].extra = 0;
            index += 1;
        }
    }
    documentData.l = letters;
    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;
    lineWidths.push(lineWidth);
    if(documentData.sz){
        documentData.boxWidth = documentData.sz[0];
        documentData.justifyOffset = 0;
    }else{
        documentData.boxWidth = maxLineWidth;
        switch(documentData.j){
            case 1:
                documentData.justifyOffset = - documentData.boxWidth;
                break;
            case 2:
                documentData.justifyOffset = - documentData.boxWidth/2;
                break;
            default:
                documentData.justifyOffset = 0;
        }
    }
    documentData.lineWidths = lineWidths;

    var animators = data.a, animatorData, letterData;
    jLen = animators.length;
    var based, ind, indexes = [];
    for(j=0;j<jLen;j+=1){
        animatorData = animators[j];
        if(animatorData.a.sc){
            documentData.strokeColorAnim = true;
        }
        if(animatorData.a.sw){
            documentData.strokeWidthAnim = true;
        }
        if(animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb){
            documentData.fillColorAnim = true;
        }
        ind = 0;
        based = animatorData.s.b;
        for(i=0;i<len;i+=1){
            letterData = letters[i];
            letterData.anIndexes[j] = ind;
            if((based == 1 && letterData.val !== '') || (based == 2 && letterData.val !== '' && letterData.val !== ' ') || (based == 3 && (letterData.n || letterData.val == ' ' || i == len - 1)) || (based == 4 && (letterData.n || i == len - 1))){
                if(animatorData.s.rn === 1){
                    indexes.push(ind);
                }
                ind += 1;
            }
        }
        data.a[j].s.totalChars = ind;
        var currentInd = -1, newInd;
        if(animatorData.s.rn === 1){
            for(i = 0; i < len; i += 1){
                letterData = letters[i];
                if(currentInd != letterData.anIndexes[j]){
                    currentInd = letterData.anIndexes[j];
                    newInd = indexes.splice(Math.floor(Math.random()*indexes.length),1)[0];
                }
                letterData.anIndexes[j] = newInd;
            }
        }
    }
    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize*1.2;
    documentData.ls = documentData.ls || 0;
    documentData.ascent = fontData.ascent*documentData.finalSize/100;
};

TextProperty.prototype.updateDocumentData = function(newData, index) {
	index = index === undefined ? this.keysIndex : index;
    var dData = this.copyData({}, this.data.d.k[index].s);
    dData = this.copyData(dData, newData);
    this.data.d.k[index].s = dData;
    this.recalculate(index);
    this.elem.addDynamicProperty(this);
};

TextProperty.prototype.recalculate = function(index) {
    var dData = this.data.d.k[index].s;
    dData.__complete = false;
    this.keysIndex = 0;
    this._isFirstFrame = true;
    this.getValue(dData);
}

TextProperty.prototype.canResizeFont = function(_canResize) {
    this.canResize = _canResize;
    this.recalculate(this.keysIndex);
    this.elem.addDynamicProperty(this);
};

TextProperty.prototype.setMinimumFontSize = function(_fontValue) {
    this.minimumFontSize = Math.floor(_fontValue) || 1;
    this.recalculate(this.keysIndex);
    this.elem.addDynamicProperty(this);
};

var TextSelectorProp = (function(){
    var max = Math.max;
    var min = Math.min;
    var floor = Math.floor;

    function TextSelectorProp(elem,data){
        this._currentTextLength = -1;
        this.k = false;
        this.data = data;
        this.elem = elem;
        this.comp = elem.comp;
        this.finalS = 0;
        this.finalE = 0;
        this.initDynamicPropertyContainer(elem);
        this.s = PropertyFactory.getProp(elem,data.s || {k:0},0,0,this);
        if('e' in data){
            this.e = PropertyFactory.getProp(elem,data.e,0,0,this);
        }else{
            this.e = {v:100};
        }
        this.o = PropertyFactory.getProp(elem,data.o || {k:0},0,0,this);
        this.xe = PropertyFactory.getProp(elem,data.xe || {k:0},0,0,this);
        this.ne = PropertyFactory.getProp(elem,data.ne || {k:0},0,0,this);
        this.a = PropertyFactory.getProp(elem,data.a,0,0.01,this);
        if(!this.dynamicProperties.length){
            this.getValue();
        }
    }

    TextSelectorProp.prototype = {
        getMult: function(ind) {
            if(this._currentTextLength !== this.elem.textProperty.currentData.l.length) {
                this.getValue();
            }
            //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);
            var x1 = 0;
            var y1 = 0;
            var x2 = 1;
            var y2 = 1;
            if(this.ne.v > 0) {
                x1 = this.ne.v / 100.0;
            }
            else {
                y1 = -this.ne.v / 100.0;
            }
            if(this.xe.v > 0) {
                x2 = 1.0 - this.xe.v / 100.0;
            }
            else {
                y2 = 1.0 + this.xe.v / 100.0;
            }
            var easer = BezierFactory.getBezierEasing(x1, y1, x2, y2).get;

            var mult = 0;
            var s = this.finalS;
            var e = this.finalE;
            var type = this.data.sh;
            if (type === 2){
                if (e === s) {
                    mult = ind >= e ? 1 : 0;
                } else {
                    mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));
                }
                mult = easer(mult);
            } else if(type === 3) {
                if (e === s) {
                    mult = ind >= e ? 0 : 1;
                }else{
                    mult = 1 - max(0, min(0.5 / (e - s) + (ind - s) / (e - s),1));
                }

                mult = easer(mult);
            } else if (type === 4) {
                if (e === s) {
                    mult = 0;
                } else {
                    mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));
                    if (mult < 0.5) {
                        mult *= 2;
                    } else {
                        mult = 1 - 2 * (mult - 0.5);
                    }
                }
                mult = easer(mult);
            } else if (type === 5) {
                if (e === s){
                    mult = 0;
                } else {
                    var tot = e - s;
                    /*ind += 0.5;
                    mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/
                    ind = min(max(0, ind + 0.5 - s), e - s);
                    var x = -tot/2+ind;
                    var a = tot/2;
                    mult = Math.sqrt(1 - (x * x) / (a * a));
                }
                mult = easer(mult);
            } else if (type === 6) {
                if (e === s){
                    mult = 0;
                } else {
                    ind = min(max(0, ind + 0.5 - s), e - s);
                    mult = (1 + (Math.cos((Math.PI + Math.PI * 2 * (ind) / (e - s))))) / 2;
                }
                mult = easer(mult);
            } else {
                if (ind >= floor(s)) {
                    if (ind - s < 0) {
                        mult = max(0, min(min(e, 1) - (s - ind), 1));
                    } else {
                        mult = max(0, min(e - ind, 1));
                    }
                }
                mult = easer(mult);
            }
            return mult*this.a.v;
        },
        getValue: function(newCharsFlag) {
            this.iterateDynamicProperties();
            this._mdf = newCharsFlag || this._mdf;
            this._currentTextLength = this.elem.textProperty.currentData.l.length || 0;
            if(newCharsFlag && this.data.r === 2) {
                this.e.v = this._currentTextLength;
            }
            var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars;
            var o = this.o.v/divisor;
            var s = this.s.v/divisor + o;
            var e = (this.e.v/divisor) + o;
            if(s>e){
                var _s = s;
                s = e;
                e = _s;
            }
            this.finalS = s;
            this.finalE = e;
        }
    }
    extendPrototype([DynamicPropertyContainer], TextSelectorProp);

    function getTextSelectorProp(elem, data,arr) {
        return new TextSelectorProp(elem, data, arr);
    }

    return {
        getTextSelectorProp: getTextSelectorProp
    };
}());

    
var pool_factory = (function() {
	return function(initialLength, _create, _release, _clone) {

		var _length = 0;
		var _maxLength = initialLength;
		var pool = createSizedArray(_maxLength);

		var ob = {
			newElement: newElement,
			release: release
		};

		function newElement(){
			var element;
			if(_length){
				_length -= 1;
				element = pool[_length];
			} else {
				element = _create();
			}
			return element;
		}

		function release(element) {
			if(_length === _maxLength) {
				pool = pooling.double(pool);
				_maxLength = _maxLength*2;
			}
			if (_release) {
				_release(element);
			}
			pool[_length] = element;
			_length += 1;
		}

		function clone() {
			var clonedElement = newElement();
			return _clone(clonedElement);
		}

		return ob;
	};
}());

var pooling = (function(){

	function double(arr){
		return arr.concat(createSizedArray(arr.length));
	}

	return {
		double: double
	};
}());
var point_pool = (function(){

	function create() {
		return createTypedArray('float32', 2);
	}
	return pool_factory(8, create);
}());
var shape_pool = (function(){

	function create() {
		return new ShapePath();
	}

	function release(shapePath) {
		var len = shapePath._length, i;
		for(i = 0; i < len; i += 1) {
			point_pool.release(shapePath.v[i]);
			point_pool.release(shapePath.i[i]);
			point_pool.release(shapePath.o[i]);
			shapePath.v[i] = null;
			shapePath.i[i] = null;
			shapePath.o[i] = null;
		}
		shapePath._length = 0;
		shapePath.c = false;
	}

	function clone(shape) {
		var cloned = factory.newElement();
		var i, len = shape._length === undefined ? shape.v.length : shape._length;
		cloned.setLength(len);
		cloned.c = shape.c;
		var pt;
		
		for(i = 0; i < len; i += 1) {
			cloned.setTripleAt(shape.v[i][0],shape.v[i][1],shape.o[i][0],shape.o[i][1],shape.i[i][0],shape.i[i][1], i);
		}
		return cloned;
	}

	var factory = pool_factory(4, create, release);
	factory.clone = clone;

	return factory;
}());
var shapeCollection_pool = (function(){
	var ob = {
		newShapeCollection: newShapeCollection,
		release: release
	};

	var _length = 0;
	var _maxLength = 4;
	var pool = createSizedArray(_maxLength);

	function newShapeCollection(){
		var shapeCollection;
		if(_length){
			_length -= 1;
			shapeCollection = pool[_length];
		} else {
			shapeCollection = new ShapeCollection();
		}
		return shapeCollection;
	}

	function release(shapeCollection) {
		var i, len = shapeCollection._length;
		for(i = 0; i < len; i += 1) {
			shape_pool.release(shapeCollection.shapes[i]);
		}
		shapeCollection._length = 0;

		if(_length === _maxLength) {
			pool = pooling.double(pool);
			_maxLength = _maxLength*2;
		}
		pool[_length] = shapeCollection;
		_length += 1;
	}

	return ob;
}());
var segments_length_pool = (function(){

	function create() {
		return {
			lengths: [],
			totalLength: 0
		};
	}

	function release(element) {
		var i, len = element.lengths.length;
		for(i=0;i<len;i+=1) {
			bezier_length_pool.release(element.lengths[i]);
		}
		element.lengths.length = 0;
	}

	return pool_factory(8, create, release);
}());
var bezier_length_pool = (function(){

	function create() {
		return {
            addedLength: 0,
            percents: createTypedArray('float32', defaultCurveSegments),
            lengths: createTypedArray('float32', defaultCurveSegments),
        };
	}
	return pool_factory(8, create);
}());
function BaseRenderer(){}
BaseRenderer.prototype.checkLayers = function(num){
    var i, len = this.layers.length, data;
    this.completeLayers = true;
    for (i = len - 1; i >= 0; i--) {
        if (!this.elements[i]) {
            data = this.layers[i];
            if(data.ip - data.st <= (num - this.layers[i].st) && data.op - data.st > (num - this.layers[i].st))
            {
                this.buildItem(i);
            }
        }
        this.completeLayers = this.elements[i] ? this.completeLayers:false;
    }
    this.checkPendingElements();
};

BaseRenderer.prototype.createItem = function(layer){
    switch(layer.ty){
        case 2:
            return this.createImage(layer);
        case 0:
            return this.createComp(layer);
        case 1:
            return this.createSolid(layer);
        case 3:
            return this.createNull(layer);
        case 4:
            return this.createShape(layer);
        case 5:
            return this.createText(layer);
        case 6:
            return this.createAudio(layer);
        case 13:
            return this.createCamera(layer);
    }
    return this.createNull(layer);
};

BaseRenderer.prototype.createCamera = function(){
    throw new Error('You\'re using a 3d camera. Try the html renderer.');
};

BaseRenderer.prototype.createAudio = function(data){
    return new AudioElement(data, this.globalData, this);
};

BaseRenderer.prototype.buildAllItems = function(){
    var i, len = this.layers.length;
    for(i=0;i<len;i+=1){
        this.buildItem(i);
    }
    this.checkPendingElements();
};

BaseRenderer.prototype.includeLayers = function(newLayers){
    this.completeLayers = false;
    var i, len = newLayers.length;
    var j, jLen = this.layers.length;
    for(i=0;i<len;i+=1){
        j = 0;
        while(j<jLen){
            if(this.layers[j].id == newLayers[i].id){
                this.layers[j] = newLayers[i];
                break;
            }
            j += 1;
        }
    }
};

BaseRenderer.prototype.setProjectInterface = function(pInterface){
    this.globalData.projectInterface = pInterface;
};

BaseRenderer.prototype.initItems = function(){
    if(!this.globalData.progressiveLoad){
        this.buildAllItems();
    }
};
BaseRenderer.prototype.buildElementParenting = function(element, parentName, hierarchy) {
    var elements = this.elements;
    var layers = this.layers;
    var i=0, len = layers.length;
    while (i < len) {
        if (layers[i].ind == parentName) {
            if (!elements[i] || elements[i] === true) {
                this.buildItem(i);
                this.addPendingElement(element);
            } else {
                hierarchy.push(elements[i]);
                elements[i].setAsParent();
                if(layers[i].parent !== undefined) {
                    this.buildElementParenting(element, layers[i].parent, hierarchy);
                } else {
                    element.setHierarchy(hierarchy);
                }
            }
        }
        i += 1;
    }
};

BaseRenderer.prototype.addPendingElement = function(element){
    this.pendingElements.push(element);
};

BaseRenderer.prototype.searchExtraCompositions = function(assets){
    var i, len = assets.length;
    for(i=0;i<len;i+=1){
        if(assets[i].xt){
            var comp = this.createComp(assets[i]);
            comp.initExpressions();
            this.globalData.projectInterface.registerComposition(comp);
        }
    }
};

BaseRenderer.prototype.setupGlobalData = function(animData, fontsContainer) {
    this.globalData.fontManager = new FontManager();
    this.globalData.fontManager.addChars(animData.chars);
    this.globalData.fontManager.addFonts(animData.fonts, fontsContainer);
    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);
    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);
    this.globalData.imageLoader = this.animationItem.imagePreloader;
    this.globalData.audioController = this.animationItem.audioController;
    this.globalData.frameId = 0;
    this.globalData.frameRate = animData.fr;
    this.globalData.nm = animData.nm;
    this.globalData.compSize = {
        w: animData.w,
        h: animData.h
    }
}
function SVGRenderer(animationItem, config){
    this.animationItem = animationItem;
    this.layers = null;
    this.renderedFrame = -1;
    this.svgElement = createNS('svg');
    var ariaLabel = '';
    if (config && config.title) {
        var titleElement = createNS('title');
        var titleId = createElementID();
        titleElement.setAttribute('id', titleId);
        titleElement.textContent = config.title;
        this.svgElement.appendChild(titleElement);
        ariaLabel += titleId;
    }
    if (config && config.description) {
        var descElement = createNS('desc');
        var descId = createElementID();
        descElement.setAttribute('id', descId);
        descElement.textContent = config.description;
        this.svgElement.appendChild(descElement);
        ariaLabel += ' ' + descId;
    }
    if (ariaLabel) {
        this.svgElement.setAttribute('aria-labelledby', ariaLabel)
    }
    var defs = createNS( 'defs');
    this.svgElement.appendChild(defs);
    var maskElement = createNS('g');
    this.svgElement.appendChild(maskElement);
    this.layerElement = maskElement;
    this.renderConfig = {
        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',
        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',
        progressiveLoad: (config && config.progressiveLoad) || false,
        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true,
        viewBoxOnly: (config && config.viewBoxOnly) || false,
        viewBoxSize: (config && config.viewBoxSize) || false,
        className: (config && config.className) || '',
        id: (config && config.id) || '',
        focusable: config && config.focusable,
        filterSize: {
            width: config && config.filterSize && config.filterSize.width || '100%',
            height: config && config.filterSize && config.filterSize.height || '100%',
            x: config && config.filterSize && config.filterSize.x || '0%',
            y: config && config.filterSize && config.filterSize.y || '0%',
        }
    };

    this.globalData = {
        _mdf: false,
        frameNum: -1,
        defs: defs,
        renderConfig: this.renderConfig
    };
    this.elements = [];
    this.pendingElements = [];
    this.destroyed = false;
    this.rendererType = 'svg';

}

extendPrototype([BaseRenderer],SVGRenderer);

SVGRenderer.prototype.createNull = function (data) {
    return new NullElement(data,this.globalData,this);
};

SVGRenderer.prototype.createShape = function (data) {
    return new SVGShapeElement(data,this.globalData,this);
};

SVGRenderer.prototype.createText = function (data) {
    return new SVGTextElement(data,this.globalData,this);

};

SVGRenderer.prototype.createImage = function (data) {
    return new IImageElement(data,this.globalData,this);
};

SVGRenderer.prototype.createComp = function (data) {
    return new SVGCompElement(data,this.globalData,this);

};

SVGRenderer.prototype.createSolid = function (data) {
    return new ISolidElement(data,this.globalData,this);
};

SVGRenderer.prototype.configAnimation = function(animData){
    this.svgElement.setAttribute('xmlns','http://www.w3.org/2000/svg');
    if(this.renderConfig.viewBoxSize) {
        this.svgElement.setAttribute('viewBox',this.renderConfig.viewBoxSize);
    } else {
        this.svgElement.setAttribute('viewBox','0 0 '+animData.w+' '+animData.h);
    }

    if(!this.renderConfig.viewBoxOnly) {
        this.svgElement.setAttribute('width',animData.w);
        this.svgElement.setAttribute('height',animData.h);
        this.svgElement.style.width = '100%';
        this.svgElement.style.height = '100%';
        this.svgElement.style.transform = 'translate3d(0,0,0)';
    }
    if (this.renderConfig.className) {
        this.svgElement.setAttribute('class', this.renderConfig.className);
    }
    if (this.renderConfig.id) {
        this.svgElement.setAttribute('id', this.renderConfig.id);
    }
    if (this.renderConfig.focusable !== undefined) {
        this.svgElement.setAttribute('focusable', this.renderConfig.focusable);
    }
    this.svgElement.setAttribute('preserveAspectRatio',this.renderConfig.preserveAspectRatio);
    //this.layerElement.style.transform = 'translate3d(0,0,0)';
    //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = "0px 0px 0px";
    this.animationItem.wrapper.appendChild(this.svgElement);
    //Mask animation
    var defs = this.globalData.defs;

    this.setupGlobalData(animData, defs);
    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;
    this.data = animData;

    var maskElement = createNS( 'clipPath');
    var rect = createNS('rect');
    rect.setAttribute('width',animData.w);
    rect.setAttribute('height',animData.h);
    rect.setAttribute('x',0);
    rect.setAttribute('y',0);
    var maskId = createElementID();
    maskElement.setAttribute('id', maskId);
    maskElement.appendChild(rect);
    this.layerElement.setAttribute("clip-path", "url(" + locationHref + "#"+maskId+")");

    defs.appendChild(maskElement);
    this.layers = animData.layers;
    this.elements = createSizedArray(animData.layers.length);
};


SVGRenderer.prototype.destroy = function () {
    this.animationItem.wrapper.innerText = '';
    this.layerElement = null;
    this.globalData.defs = null;
    var i, len = this.layers ? this.layers.length : 0;
    for (i = 0; i < len; i++) {
        if(this.elements[i]){
            this.elements[i].destroy();
        }
    }
    this.elements.length = 0;
    this.destroyed = true;
    this.animationItem = null;
};

SVGRenderer.prototype.updateContainerSize = function () {
};

SVGRenderer.prototype.buildItem  = function(pos){
    var elements = this.elements;
    if(elements[pos] || this.layers[pos].ty == 99){
        return;
    }
    elements[pos] = true;
    var element = this.createItem(this.layers[pos]);

    elements[pos] = element;
    if(expressionsPlugin){
        if(this.layers[pos].ty === 0){
            this.globalData.projectInterface.registerComposition(element);
        }
        element.initExpressions();
    }
    this.appendElementInPos(element,pos);
    if(this.layers[pos].tt){
        if(!this.elements[pos - 1] || this.elements[pos - 1] === true){
            this.buildItem(pos - 1);
            this.addPendingElement(element);
        } else {
            element.setMatte(elements[pos - 1].layerId);
        }
    }
};

SVGRenderer.prototype.checkPendingElements  = function(){
    while(this.pendingElements.length){
        var element = this.pendingElements.pop();
        element.checkParenting();
        if(element.data.tt){
            var i = 0, len = this.elements.length;
            while(i<len){
                if(this.elements[i] === element){
                    element.setMatte(this.elements[i - 1].layerId);
                    break;
                }
                i += 1;
            }
        }
    }
};

SVGRenderer.prototype.renderFrame = function(num){
    if(this.renderedFrame === num || this.destroyed){
        return;
    }
    if(num === null){
        num = this.renderedFrame;
    }else{
        this.renderedFrame = num;
    }
    // console.log('-------');
    // console.log('FRAME ',num);
    this.globalData.frameNum = num;
    this.globalData.frameId += 1;
    this.globalData.projectInterface.currentFrame = num;
    this.globalData._mdf = false;
    var i, len = this.layers.length;
    if(!this.completeLayers){
        this.checkLayers(num);
    }
    for (i = len - 1; i >= 0; i--) {
        if(this.completeLayers || this.elements[i]){
            this.elements[i].prepareFrame(num - this.layers[i].st);
        }
    }
    if(this.globalData._mdf) {
        for (i = 0; i < len; i += 1) {
            if(this.completeLayers || this.elements[i]){
                this.elements[i].renderFrame();
            }
        }
    }
};

SVGRenderer.prototype.appendElementInPos = function(element, pos){
    var newElement = element.getBaseElement();
    if(!newElement){
        return;
    }
    var i = 0;
    var nextElement;
    while(i<pos){
        if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement()){
            nextElement = this.elements[i].getBaseElement();
        }
        i += 1;
    }
    if(nextElement){
        this.layerElement.insertBefore(newElement, nextElement);
    } else {
        this.layerElement.appendChild(newElement);
    }
};

SVGRenderer.prototype.hide = function(){
    this.layerElement.style.display = 'none';
};

SVGRenderer.prototype.show = function(){
    this.layerElement.style.display = 'block';
};

function CanvasRenderer(animationItem, config){
    this.animationItem = animationItem;
    this.renderConfig = {
        clearCanvas: (config && config.clearCanvas !== undefined) ? config.clearCanvas : true,
        context: (config && config.context) || null,
        progressiveLoad: (config && config.progressiveLoad) || false,
        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',
        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',
        className: (config && config.className) || '',
        id: (config && config.id) || '',
    };
    this.renderConfig.dpr = (config && config.dpr) || 1;
    if (this.animationItem.wrapper) {
        this.renderConfig.dpr = (config && config.dpr) || window.devicePixelRatio || 1;
    }
    this.renderedFrame = -1;
    this.globalData = {
        frameNum: -1,
        _mdf: false,
        renderConfig: this.renderConfig,
        currentGlobalAlpha: -1
    };
    this.contextData = new CVContextData();
    this.elements = [];
    this.pendingElements = [];
    this.transformMat = new Matrix();
    this.completeLayers = false;
    this.rendererType = 'canvas';
}
extendPrototype([BaseRenderer],CanvasRenderer);

CanvasRenderer.prototype.createShape = function (data) {
    return new CVShapeElement(data, this.globalData, this);
};

CanvasRenderer.prototype.createText = function (data) {
    return new CVTextElement(data, this.globalData, this);
};

CanvasRenderer.prototype.createImage = function (data) {
    return new CVImageElement(data, this.globalData, this);
};

CanvasRenderer.prototype.createComp = function (data) {
    return new CVCompElement(data, this.globalData, this);
};

CanvasRenderer.prototype.createSolid = function (data) {
    return new CVSolidElement(data, this.globalData, this);
};

CanvasRenderer.prototype.createNull = SVGRenderer.prototype.createNull;

CanvasRenderer.prototype.ctxTransform = function(props){
    if(props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0){
        return;
    }
    if(!this.renderConfig.clearCanvas){
        this.canvasContext.transform(props[0],props[1],props[4],props[5],props[12],props[13]);
        return;
    }
    this.transformMat.cloneFromProps(props);
    var cProps = this.contextData.cTr.props;
    this.transformMat.transform(cProps[0],cProps[1],cProps[2],cProps[3],cProps[4],cProps[5],cProps[6],cProps[7],cProps[8],cProps[9],cProps[10],cProps[11],cProps[12],cProps[13],cProps[14],cProps[15]);
    //this.contextData.cTr.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);
    this.contextData.cTr.cloneFromProps(this.transformMat.props);
    var trProps = this.contextData.cTr.props;
    this.canvasContext.setTransform(trProps[0],trProps[1],trProps[4],trProps[5],trProps[12],trProps[13]);
};

CanvasRenderer.prototype.ctxOpacity = function(op){
    /*if(op === 1){
        return;
    }*/
    if(!this.renderConfig.clearCanvas){
        this.canvasContext.globalAlpha *= op < 0 ? 0 : op;
        this.globalData.currentGlobalAlpha = this.contextData.cO;
        return;
    }
    this.contextData.cO *= op < 0 ? 0 : op;
    if(this.globalData.currentGlobalAlpha !== this.contextData.cO) {
        this.canvasContext.globalAlpha = this.contextData.cO;
        this.globalData.currentGlobalAlpha = this.contextData.cO;
    }
};

CanvasRenderer.prototype.reset = function(){
    if(!this.renderConfig.clearCanvas){
        this.canvasContext.restore();
        return;
    }
    this.contextData.reset();
};

CanvasRenderer.prototype.save = function(actionFlag){
    if(!this.renderConfig.clearCanvas){
        this.canvasContext.save();
        return;
    }
    if(actionFlag){
        this.canvasContext.save();
    }
    var props = this.contextData.cTr.props;
    if(this.contextData._length <= this.contextData.cArrPos) {
        this.contextData.duplicate();
    }
    var i, arr = this.contextData.saved[this.contextData.cArrPos];
    for (i = 0; i < 16; i += 1) {
        arr[i] = props[i];
    }
    this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO;
    this.contextData.cArrPos += 1;
};

CanvasRenderer.prototype.restore = function(actionFlag){
    if(!this.renderConfig.clearCanvas){
        this.canvasContext.restore();
        return;
    }
    if(actionFlag){
        this.canvasContext.restore();
        this.globalData.blendMode = 'source-over';
    }
    this.contextData.cArrPos -= 1;
    var popped = this.contextData.saved[this.contextData.cArrPos];
    var i,arr = this.contextData.cTr.props;
    for(i=0;i<16;i+=1){
        arr[i] = popped[i];
    }
    this.canvasContext.setTransform(popped[0],popped[1],popped[4],popped[5],popped[12],popped[13]);
    popped = this.contextData.savedOp[this.contextData.cArrPos];
    this.contextData.cO = popped;
    if(this.globalData.currentGlobalAlpha !== popped) {
        this.canvasContext.globalAlpha = popped;
        this.globalData.currentGlobalAlpha = popped;
    }
};

CanvasRenderer.prototype.configAnimation = function(animData){
    if(this.animationItem.wrapper){
        this.animationItem.container = createTag('canvas');
        this.animationItem.container.style.width = '100%';
        this.animationItem.container.style.height = '100%';
        //this.animationItem.container.style.transform = 'translate3d(0,0,0)';
        //this.animationItem.container.style.webkitTransform = 'translate3d(0,0,0)';
        this.animationItem.container.style.transformOrigin = this.animationItem.container.style.mozTransformOrigin = this.animationItem.container.style.webkitTransformOrigin = this.animationItem.container.style['-webkit-transform'] = "0px 0px 0px";
        this.animationItem.wrapper.appendChild(this.animationItem.container);
        this.canvasContext = this.animationItem.container.getContext('2d');
        if(this.renderConfig.className) {
            this.animationItem.container.setAttribute('class', this.renderConfig.className);
        }
        if(this.renderConfig.id) {
            this.animationItem.container.setAttribute('id', this.renderConfig.id);
        }
    }else{
        this.canvasContext = this.renderConfig.context;
    }
    this.data = animData;
    this.layers = animData.layers;
    this.transformCanvas = {
        w: animData.w,
        h:animData.h,
        sx:0,
        sy:0,
        tx:0,
        ty:0
    };
    this.setupGlobalData(animData, document.body);
    this.globalData.canvasContext = this.canvasContext;
    this.globalData.renderer = this;
    this.globalData.isDashed = false;
    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;
    this.globalData.transformCanvas = this.transformCanvas;
    this.elements = createSizedArray(animData.layers.length);

    this.updateContainerSize();
};

CanvasRenderer.prototype.updateContainerSize = function () {
    this.reset();
    var elementWidth,elementHeight;
    if(this.animationItem.wrapper && this.animationItem.container){
        elementWidth = this.animationItem.wrapper.offsetWidth;
        elementHeight = this.animationItem.wrapper.offsetHeight;
        this.animationItem.container.setAttribute('width',elementWidth * this.renderConfig.dpr );
        this.animationItem.container.setAttribute('height',elementHeight * this.renderConfig.dpr);
    }else{
        elementWidth = this.canvasContext.canvas.width * this.renderConfig.dpr;
        elementHeight = this.canvasContext.canvas.height * this.renderConfig.dpr;
    }
    var elementRel,animationRel;
    if(this.renderConfig.preserveAspectRatio.indexOf('meet') !== -1 || this.renderConfig.preserveAspectRatio.indexOf('slice') !== -1){
        var par = this.renderConfig.preserveAspectRatio.split(' ');
        var fillType = par[1] || 'meet';
        var pos = par[0] || 'xMidYMid';
        var xPos = pos.substr(0,4);
        var yPos = pos.substr(4);
        elementRel = elementWidth/elementHeight;
        animationRel = this.transformCanvas.w/this.transformCanvas.h;
        if(animationRel>elementRel && fillType === 'meet' || animationRel<elementRel && fillType === 'slice'){
            this.transformCanvas.sx = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);
            this.transformCanvas.sy = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);
        }else{
            this.transformCanvas.sx = elementHeight/(this.transformCanvas.h / this.renderConfig.dpr);
            this.transformCanvas.sy = elementHeight/(this.transformCanvas.h / this.renderConfig.dpr);
        }

        if(xPos === 'xMid' && ((animationRel<elementRel && fillType==='meet') || (animationRel>elementRel && fillType === 'slice'))){
            this.transformCanvas.tx = (elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))/2*this.renderConfig.dpr;
        } else if(xPos === 'xMax' && ((animationRel<elementRel && fillType==='meet') || (animationRel>elementRel && fillType === 'slice'))){
            this.transformCanvas.tx = (elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))*this.renderConfig.dpr;
        } else {
            this.transformCanvas.tx = 0;
        }
        if(yPos === 'YMid' && ((animationRel>elementRel && fillType==='meet') || (animationRel<elementRel && fillType === 'slice'))){
            this.transformCanvas.ty = ((elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w))/2)*this.renderConfig.dpr;
        } else if(yPos === 'YMax' && ((animationRel>elementRel && fillType==='meet') || (animationRel<elementRel && fillType === 'slice'))){
            this.transformCanvas.ty = ((elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w)))*this.renderConfig.dpr;
        } else {
            this.transformCanvas.ty = 0;
        }

    }else if(this.renderConfig.preserveAspectRatio == 'none'){
        this.transformCanvas.sx = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);
        this.transformCanvas.sy = elementHeight/(this.transformCanvas.h/this.renderConfig.dpr);
        this.transformCanvas.tx = 0;
        this.transformCanvas.ty = 0;
    }else{
        this.transformCanvas.sx = this.renderConfig.dpr;
        this.transformCanvas.sy = this.renderConfig.dpr;
        this.transformCanvas.tx = 0;
        this.transformCanvas.ty = 0;
    }
    this.transformCanvas.props = [this.transformCanvas.sx,0,0,0,0,this.transformCanvas.sy,0,0,0,0,1,0,this.transformCanvas.tx,this.transformCanvas.ty,0,1];
    /*var i, len = this.elements.length;
    for(i=0;i<len;i+=1){
        if(this.elements[i] && this.elements[i].data.ty === 0){
            this.elements[i].resize(this.globalData.transformCanvas);
        }
    }*/
    this.ctxTransform(this.transformCanvas.props);
    this.canvasContext.beginPath();
    this.canvasContext.rect(0,0,this.transformCanvas.w,this.transformCanvas.h);
    this.canvasContext.closePath();
    this.canvasContext.clip();

    this.renderFrame(this.renderedFrame, true);
};

CanvasRenderer.prototype.destroy = function () {
    if(this.renderConfig.clearCanvas) {
        this.animationItem.wrapper.innerText = '';
    }
    var i, len = this.layers ? this.layers.length : 0;
    for (i = len - 1; i >= 0; i-=1) {
        if(this.elements[i]) {
            this.elements[i].destroy();
        }
    }
    this.elements.length = 0;
    this.globalData.canvasContext = null;
    this.animationItem.container = null;
    this.destroyed = true;
};

CanvasRenderer.prototype.renderFrame = function(num, forceRender){
    if((this.renderedFrame === num && this.renderConfig.clearCanvas === true && !forceRender) || this.destroyed || num === -1){
        return;
    }
    this.renderedFrame = num;
    this.globalData.frameNum = num - this.animationItem._isFirstFrame;
    this.globalData.frameId += 1;
    this.globalData._mdf = !this.renderConfig.clearCanvas || forceRender;
    this.globalData.projectInterface.currentFrame = num;

     // console.log('--------');
     // console.log('NEW: ',num);
    var i, len = this.layers.length;
    if(!this.completeLayers){
        this.checkLayers(num);
    }

    for (i = 0; i < len; i++) {
        if(this.completeLayers || this.elements[i]){
            this.elements[i].prepareFrame(num - this.layers[i].st);
        }
    }
    if(this.globalData._mdf) {
        if(this.renderConfig.clearCanvas === true){
            this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h);
        }else{
            this.save();
        }
        for (i = len - 1; i >= 0; i-=1) {
            if(this.completeLayers || this.elements[i]){
                this.elements[i].renderFrame();
            }
        }
        if(this.renderConfig.clearCanvas !== true){
            this.restore();
        }
    }
};

CanvasRenderer.prototype.buildItem = function(pos){
    var elements = this.elements;
    if(elements[pos] || this.layers[pos].ty == 99){
        return;
    }
    var element = this.createItem(this.layers[pos], this,this.globalData);
    elements[pos] = element;
    element.initExpressions();
    /*if(this.layers[pos].ty === 0){
        element.resize(this.globalData.transformCanvas);
    }*/
};

CanvasRenderer.prototype.checkPendingElements  = function(){
    while(this.pendingElements.length){
        var element = this.pendingElements.pop();
        element.checkParenting();
    }
};

CanvasRenderer.prototype.hide = function(){
    this.animationItem.container.style.display = 'none';
};

CanvasRenderer.prototype.show = function(){
    this.animationItem.container.style.display = 'block';
};

function HybridRenderer(animationItem, config){
    this.animationItem = animationItem;
    this.layers = null;
    this.renderedFrame = -1;
    this.renderConfig = {
        className: (config && config.className) || '',
        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',
        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true,
        filterSize: {
            width: config && config.filterSize && config.filterSize.width || '400%',
            height: config && config.filterSize && config.filterSize.height || '400%',
            x: config && config.filterSize && config.filterSize.x || '-100%',
            y: config && config.filterSize && config.filterSize.y || '-100%',
        }
    };
    this.globalData = {
        _mdf: false,
        frameNum: -1,
        renderConfig: this.renderConfig
    };
    this.pendingElements = [];
    this.elements = [];
    this.threeDElements = [];
    this.destroyed = false;
    this.camera = null;
    this.supports3d = true;
    this.rendererType = 'html';

}

extendPrototype([BaseRenderer],HybridRenderer);

HybridRenderer.prototype.buildItem = SVGRenderer.prototype.buildItem;

HybridRenderer.prototype.checkPendingElements  = function(){
    while(this.pendingElements.length){
        var element = this.pendingElements.pop();
        element.checkParenting();
    }
};

HybridRenderer.prototype.appendElementInPos = function(element, pos){
    var newDOMElement = element.getBaseElement();
    if(!newDOMElement){
        return;
    }
    var layer = this.layers[pos];
    if(!layer.ddd || !this.supports3d){
        if(this.threeDElements) {
            this.addTo3dContainer(newDOMElement,pos);
        } else {
            var i = 0;
            var nextDOMElement, nextLayer, tmpDOMElement;
            while(i<pos){
                if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement){
                    nextLayer = this.elements[i];
                    tmpDOMElement = this.layers[i].ddd ? this.getThreeDContainerByPos(i) : nextLayer.getBaseElement();
                    nextDOMElement = tmpDOMElement || nextDOMElement;
                }
                i += 1;
            }
            if(nextDOMElement){
                if(!layer.ddd || !this.supports3d){
                    this.layerElement.insertBefore(newDOMElement, nextDOMElement);
                }
            } else {
                if(!layer.ddd || !this.supports3d){
                    this.layerElement.appendChild(newDOMElement);
                }
            }
        }
        
    } else {
        this.addTo3dContainer(newDOMElement,pos);
    }
};

HybridRenderer.prototype.createShape = function (data) {
    if(!this.supports3d){
        return new SVGShapeElement(data, this.globalData, this);
    }
    return new HShapeElement(data, this.globalData, this);
};

HybridRenderer.prototype.createText = function (data) {
    if(!this.supports3d){
        return new SVGTextElement(data, this.globalData, this);
    }
    return new HTextElement(data, this.globalData, this);
};

HybridRenderer.prototype.createCamera = function (data) {
    this.camera = new HCameraElement(data, this.globalData, this);
    return this.camera;
};

HybridRenderer.prototype.createImage = function (data) {
    if(!this.supports3d){
        return new IImageElement(data, this.globalData, this);
    }
    return new HImageElement(data, this.globalData, this);
};

HybridRenderer.prototype.createComp = function (data) {
    if(!this.supports3d){
        return new SVGCompElement(data, this.globalData, this);
    }
    return new HCompElement(data, this.globalData, this);

};

HybridRenderer.prototype.createSolid = function (data) {
    if(!this.supports3d){
        return new ISolidElement(data, this.globalData, this);
    }
    return new HSolidElement(data, this.globalData, this);
};

HybridRenderer.prototype.createNull = SVGRenderer.prototype.createNull;

HybridRenderer.prototype.getThreeDContainerByPos = function(pos){
    var i = 0, len = this.threeDElements.length;
    while(i<len) {
        if(this.threeDElements[i].startPos <= pos && this.threeDElements[i].endPos >= pos) {
            return this.threeDElements[i].perspectiveElem;
        }
        i += 1;
    }
};

HybridRenderer.prototype.createThreeDContainer = function(pos, type){
    var perspectiveElem = createTag('div');
    styleDiv(perspectiveElem);
    var container = createTag('div');
    styleDiv(container);
    if(type === '3d') {
        perspectiveElem.style.width = this.globalData.compSize.w+'px';
        perspectiveElem.style.height = this.globalData.compSize.h+'px';
        perspectiveElem.style.transformOrigin = perspectiveElem.style.mozTransformOrigin = perspectiveElem.style.webkitTransformOrigin = "50% 50%";
        container.style.transform = container.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';
    }
    
    perspectiveElem.appendChild(container);
    //this.resizerElem.appendChild(perspectiveElem);
    var threeDContainerData = {
        container:container,
        perspectiveElem:perspectiveElem,
        startPos: pos,
        endPos: pos,
        type: type
    };
    this.threeDElements.push(threeDContainerData);
    return threeDContainerData;
};

HybridRenderer.prototype.build3dContainers = function(){
    var i, len = this.layers.length;
    var lastThreeDContainerData;
    var currentContainer = '';
    for(i=0;i<len;i+=1){
        if(this.layers[i].ddd && this.layers[i].ty !== 3){
            if(currentContainer !== '3d'){
                currentContainer = '3d';
                lastThreeDContainerData = this.createThreeDContainer(i,'3d');
            }
            lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos,i);
        } else {
            if(currentContainer !== '2d'){
                currentContainer = '2d';
                lastThreeDContainerData = this.createThreeDContainer(i,'2d');
            }
            lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos,i);
        }
    }
    len = this.threeDElements.length;
    for(i = len - 1; i >= 0; i --) {
        this.resizerElem.appendChild(this.threeDElements[i].perspectiveElem);
    }
};

HybridRenderer.prototype.addTo3dContainer = function(elem,pos){
    var i = 0, len = this.threeDElements.length;
    while(i<len){
        if(pos <= this.threeDElements[i].endPos){
            var j = this.threeDElements[i].startPos;
            var nextElement;
            while(j<pos){
                if(this.elements[j] && this.elements[j].getBaseElement){
                    nextElement = this.elements[j].getBaseElement();
                }
                j += 1;
            }
            if(nextElement){
                this.threeDElements[i].container.insertBefore(elem, nextElement);
            } else {
                this.threeDElements[i].container.appendChild(elem);
            }
            break;
        }
        i += 1;
    }
};

HybridRenderer.prototype.configAnimation = function(animData){
    var resizerElem = createTag('div');
    var wrapper = this.animationItem.wrapper;
    resizerElem.style.width = animData.w+'px';
    resizerElem.style.height = animData.h+'px';
    this.resizerElem = resizerElem;
    styleDiv(resizerElem);
    resizerElem.style.transformStyle = resizerElem.style.webkitTransformStyle = resizerElem.style.mozTransformStyle = "flat";
    if(this.renderConfig.className) {
      resizerElem.setAttribute('class', this.renderConfig.className);
    }
    wrapper.appendChild(resizerElem);

    resizerElem.style.overflow = 'hidden';
    var svg = createNS('svg');
    svg.setAttribute('width','1');
    svg.setAttribute('height','1');
    styleDiv(svg);
    this.resizerElem.appendChild(svg);
    var defs = createNS('defs');
    svg.appendChild(defs);
    this.data = animData;
    //Mask animation
    this.setupGlobalData(animData, svg);
    this.globalData.defs = defs;
    this.layers = animData.layers;
    this.layerElement = this.resizerElem;
    this.build3dContainers();
    this.updateContainerSize();
};

HybridRenderer.prototype.destroy = function () {
    this.animationItem.wrapper.innerText = '';
    this.animationItem.container = null;
    this.globalData.defs = null;
    var i, len = this.layers ? this.layers.length : 0;
    for (i = 0; i < len; i++) {
        this.elements[i].destroy();
    }
    this.elements.length = 0;
    this.destroyed = true;
    this.animationItem = null;
};

HybridRenderer.prototype.updateContainerSize = function () {
    var elementWidth = this.animationItem.wrapper.offsetWidth;
    var elementHeight = this.animationItem.wrapper.offsetHeight;
    var elementRel = elementWidth/elementHeight;
    var animationRel = this.globalData.compSize.w/this.globalData.compSize.h;
    var sx,sy,tx,ty;
    if(animationRel>elementRel){
        sx = elementWidth/(this.globalData.compSize.w);
        sy = elementWidth/(this.globalData.compSize.w);
        tx = 0;
        ty = ((elementHeight-this.globalData.compSize.h*(elementWidth/this.globalData.compSize.w))/2);
    }else{
        sx = elementHeight/(this.globalData.compSize.h);
        sy = elementHeight/(this.globalData.compSize.h);
        tx = (elementWidth-this.globalData.compSize.w*(elementHeight/this.globalData.compSize.h))/2;
        ty = 0;
    }
    this.resizerElem.style.transform = this.resizerElem.style.webkitTransform = 'matrix3d(' + sx + ',0,0,0,0,'+sy+',0,0,0,0,1,0,'+tx+','+ty+',0,1)';
};

HybridRenderer.prototype.renderFrame = SVGRenderer.prototype.renderFrame;

HybridRenderer.prototype.hide = function(){
    this.resizerElem.style.display = 'none';
};

HybridRenderer.prototype.show = function(){
    this.resizerElem.style.display = 'block';
};

HybridRenderer.prototype.initItems = function(){
    this.buildAllItems();
    if(this.camera){
        this.camera.setup();
    } else {
        var cWidth = this.globalData.compSize.w;
        var cHeight = this.globalData.compSize.h;
        var i, len = this.threeDElements.length;
        for(i=0;i<len;i+=1){
            this.threeDElements[i].perspectiveElem.style.perspective = this.threeDElements[i].perspectiveElem.style.webkitPerspective = Math.sqrt(Math.pow(cWidth,2) + Math.pow(cHeight,2)) + 'px';
        }
    }
};

HybridRenderer.prototype.searchExtraCompositions = function(assets){
    var i, len = assets.length;
    var floatingContainer = createTag('div');
    for(i=0;i<len;i+=1){
        if(assets[i].xt){
            var comp = this.createComp(assets[i],floatingContainer,this.globalData.comp,null);
            comp.initExpressions();
            this.globalData.projectInterface.registerComposition(comp);
        }
    }
};

function MaskElement(data,element,globalData) {
    this.data = data;
    this.element = element;
    this.globalData = globalData;
    this.storedData = [];
    this.masksProperties = this.data.masksProperties || [];
    this.maskElement = null;
    var defs = this.globalData.defs;
    var i, len = this.masksProperties ? this.masksProperties.length : 0;
    this.viewData = createSizedArray(len);
    this.solidPath = '';


    var path, properties = this.masksProperties;
    var count = 0;
    var currentMasks = [];
    var j, jLen;
    var layerId = createElementID();
    var rect, expansor, feMorph,x;
    var maskType = 'clipPath', maskRef = 'clip-path';
    for (i = 0; i < len; i++) {
        if((properties[i].mode !== 'a' && properties[i].mode !== 'n')|| properties[i].inv || properties[i].o.k !== 100 || properties[i].o.x){
            maskType = 'mask';
            maskRef = 'mask';
        }

        if((properties[i].mode == 's' || properties[i].mode == 'i') && count === 0){
            rect = createNS( 'rect');
            rect.setAttribute('fill', '#ffffff');
            rect.setAttribute('width', this.element.comp.data.w || 0);
            rect.setAttribute('height', this.element.comp.data.h || 0);
            currentMasks.push(rect);
        } else {
            rect = null;
        }

        path = createNS( 'path');
        if(properties[i].mode == 'n') {
            // TODO move this to a factory or to a constructor
            this.viewData[i] = {
                op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),
                prop: ShapePropertyFactory.getShapeProp(this.element,properties[i],3),
                elem: path,
                lastPath: ''
            };
            defs.appendChild(path);
            continue;
        }
        count += 1;

        path.setAttribute('fill', properties[i].mode === 's' ? '#000000':'#ffffff');
        path.setAttribute('clip-rule','nonzero');
        var filterID;

        if (properties[i].x.k !== 0) {
            maskType = 'mask';
            maskRef = 'mask';
            x = PropertyFactory.getProp(this.element,properties[i].x,0,null,this.element);
            filterID = createElementID();
            expansor = createNS('filter');
            expansor.setAttribute('id',filterID);
            feMorph = createNS('feMorphology');
            feMorph.setAttribute('operator','erode');
            feMorph.setAttribute('in','SourceGraphic');
            feMorph.setAttribute('radius','0');
            expansor.appendChild(feMorph);
            defs.appendChild(expansor);
            path.setAttribute('stroke', properties[i].mode === 's' ? '#000000':'#ffffff');
        } else {
            feMorph = null;
            x = null;
        }

        // TODO move this to a factory or to a constructor
        this.storedData[i] = {
             elem: path,
             x: x,
             expan: feMorph,
            lastPath: '',
            lastOperator:'',
            filterId:filterID,
            lastRadius:0
        };
        if(properties[i].mode == 'i'){
            jLen = currentMasks.length;
            var g = createNS('g');
            for(j=0;j<jLen;j+=1){
                g.appendChild(currentMasks[j]);
            }
            var mask = createNS('mask');
            mask.setAttribute('mask-type','alpha');
            mask.setAttribute('id',layerId+'_'+count);
            mask.appendChild(path);
            defs.appendChild(mask);
            g.setAttribute('mask','url(' + locationHref + '#'+layerId+'_'+count+')');

            currentMasks.length = 0;
            currentMasks.push(g);
        }else{
            currentMasks.push(path);
        }
        if(properties[i].inv && !this.solidPath){
            this.solidPath = this.createLayerSolidPath();
        }
        // TODO move this to a factory or to a constructor
        this.viewData[i] = {
            elem: path,
            lastPath: '',
            op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),
            prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3),
            invRect: rect
        };
        if(!this.viewData[i].prop.k){
            this.drawPath(properties[i],this.viewData[i].prop.v,this.viewData[i]);
        }
    }

    this.maskElement = createNS( maskType);

    len = currentMasks.length;
    for(i=0;i<len;i+=1){
        this.maskElement.appendChild(currentMasks[i]);
    }

    if(count > 0){
        this.maskElement.setAttribute('id', layerId);
        this.element.maskedElement.setAttribute(maskRef, "url(" + locationHref + "#" + layerId + ")");
        defs.appendChild(this.maskElement);
    }
    if (this.viewData.length) {
        this.element.addRenderableComponent(this);
    }

}

MaskElement.prototype.getMaskProperty = function(pos){
    return this.viewData[pos].prop;
};

MaskElement.prototype.renderFrame = function (isFirstFrame) {
    var finalMat = this.element.finalTransform.mat;
    var i, len = this.masksProperties.length;
    for (i = 0; i < len; i++) {
        if(this.viewData[i].prop._mdf || isFirstFrame){
            this.drawPath(this.masksProperties[i],this.viewData[i].prop.v,this.viewData[i]);
        }
        if(this.viewData[i].op._mdf || isFirstFrame){
            this.viewData[i].elem.setAttribute('fill-opacity',this.viewData[i].op.v);
        }
        if(this.masksProperties[i].mode !== 'n'){
            if(this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)){
                this.viewData[i].invRect.setAttribute('transform', finalMat.getInverseMatrix().to2dCSS())
            }
            if(this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)){
                var feMorph = this.storedData[i].expan;
                if(this.storedData[i].x.v < 0){
                    if(this.storedData[i].lastOperator !== 'erode'){
                        this.storedData[i].lastOperator = 'erode';
                        this.storedData[i].elem.setAttribute('filter','url(' + locationHref + '#'+this.storedData[i].filterId+')');
                    }
                    feMorph.setAttribute('radius',-this.storedData[i].x.v);
                }else{
                    if(this.storedData[i].lastOperator !== 'dilate'){
                        this.storedData[i].lastOperator = 'dilate';
                        this.storedData[i].elem.setAttribute('filter',null);
                    }
                    this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v*2);

                }
            }
        }
    }
};

MaskElement.prototype.getMaskelement = function () {
    return this.maskElement;
};

MaskElement.prototype.createLayerSolidPath = function(){
    var path = 'M0,0 ';
    path += ' h' + this.globalData.compSize.w ;
    path += ' v' + this.globalData.compSize.h ;
    path += ' h-' + this.globalData.compSize.w ;
    path += ' v-' + this.globalData.compSize.h + ' ';
    return path;
};

MaskElement.prototype.drawPath = function(pathData,pathNodes,viewData){
    var pathString = " M"+pathNodes.v[0][0]+','+pathNodes.v[0][1];
    var i, len;
    len = pathNodes._length;
    for(i=1;i<len;i+=1){
        //pathString += " C"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + " "+pathNodes.i[i][0]+','+pathNodes.i[i][1] + " "+pathNodes.v[i][0]+','+pathNodes.v[i][1];
        pathString += " C"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + " "+pathNodes.i[i][0]+','+pathNodes.i[i][1] + " "+pathNodes.v[i][0]+','+pathNodes.v[i][1];
    }
        //pathString += " C"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + " "+pathNodes.i[0][0]+','+pathNodes.i[0][1] + " "+pathNodes.v[0][0]+','+pathNodes.v[0][1];
    if(pathNodes.c && len > 1){
        pathString += " C"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + " "+pathNodes.i[0][0]+','+pathNodes.i[0][1] + " "+pathNodes.v[0][0]+','+pathNodes.v[0][1];
    }
    //pathNodes.__renderedString = pathString;

    if(viewData.lastPath !== pathString){
        var pathShapeValue = '';
        if(viewData.elem){
            if(pathNodes.c){
                pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;
            }
            viewData.elem.setAttribute('d',pathShapeValue);
        }
        viewData.lastPath = pathString;
    }
};

MaskElement.prototype.destroy = function(){
    this.element = null;
    this.globalData = null;
    this.maskElement = null;
    this.data = null;
    this.masksProperties = null;
};

/**
 * @file 
 * Handles AE's layer parenting property.
 *
 */

function HierarchyElement(){}

HierarchyElement.prototype = {
	/**
     * @function 
     * Initializes hierarchy properties
     *
     */
	initHierarchy: function() {
		//element's parent list
	    this.hierarchy = [];
	    //if element is parent of another layer _isParent will be true
	    this._isParent = false;
	    this.checkParenting();
	},
	/**
     * @function 
     * Sets layer's hierarchy.
     * @param {array} hierarch
     * layer's parent list
     *
     */ 
	setHierarchy: function(hierarchy){
	    this.hierarchy = hierarchy;
	},
	/**
     * @function 
     * Sets layer as parent.
     *
     */ 
	setAsParent: function() {
	    this._isParent = true;
	},
	/**
     * @function 
     * Searches layer's parenting chain
     *
     */ 
	checkParenting: function(){
	    if (this.data.parent !== undefined){
	        this.comp.buildElementParenting(this, this.data.parent, []);
	    }
	}
};
/**
 * @file 
 * Handles element's layer frame update.
 * Checks layer in point and out point
 *
 */

function FrameElement(){}

FrameElement.prototype = {
    /**
     * @function 
     * Initializes frame related properties.
     *
     */
    initFrame: function(){
        //set to true when inpoint is rendered
        this._isFirstFrame = false;
        //list of animated properties
        this.dynamicProperties = [];
        // If layer has been modified in current tick this will be true
        this._mdf = false;
    },
    /**
     * @function 
     * Calculates all dynamic values
     *
     * @param {number} num
     * current frame number in Layer's time
     * @param {boolean} isVisible
     * if layers is currently in range
     * 
     */
    prepareProperties: function(num, isVisible) {
        var i, len = this.dynamicProperties.length;
        for (i = 0;i < len; i += 1) {
            if (isVisible || (this._isParent && this.dynamicProperties[i].propType === 'transform')) {
                this.dynamicProperties[i].getValue();
                if (this.dynamicProperties[i]._mdf) {
                    this.globalData._mdf = true;
                    this._mdf = true;
                }
            }
        }
    },
    addDynamicProperty: function(prop) {
        if(this.dynamicProperties.indexOf(prop) === -1) {
            this.dynamicProperties.push(prop);
        }
    }
};
function TransformElement(){}

TransformElement.prototype = {
    initTransform: function() {
        this.finalTransform = {
            mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {o:0},
            _matMdf: false,
            _opMdf: false,
            mat: new Matrix()
        };
        if (this.data.ao) {
            this.finalTransform.mProp.autoOriented = true;
        }

        //TODO: check TYPE 11: Guided elements
        if (this.data.ty !== 11) {
            //this.createElements();
        }
    },
    renderTransform: function() {

        this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;
        this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;

        if (this.hierarchy) {
            var mat;
            var finalMat = this.finalTransform.mat;
            var i = 0, len = this.hierarchy.length;
            //Checking if any of the transformation matrices in the hierarchy chain has changed.
            if (!this.finalTransform._matMdf) {
                while (i < len) {
                    if (this.hierarchy[i].finalTransform.mProp._mdf) {
                        this.finalTransform._matMdf = true;
                        break;
                    }
                    i += 1;
                }
            }
            
            if (this.finalTransform._matMdf) {
                mat = this.finalTransform.mProp.v.props;
                finalMat.cloneFromProps(mat);
                for (i = 0; i < len; i += 1) {
                    mat = this.hierarchy[i].finalTransform.mProp.v.props;
                    finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);
                }
            }
        }
    },
    globalToLocal: function(pt) {
        var transforms = [];
        transforms.push(this.finalTransform);
        var flag = true;
        var comp = this.comp;
        while (flag) {
            if (comp.finalTransform) {
                if (comp.data.hasMask) {
                    transforms.splice(0, 0, comp.finalTransform);
                }
                comp = comp.comp;
            } else {
                flag = false;
            }
        }
        var i, len = transforms.length,ptNew;
        for (i = 0; i < len; i += 1) {
            ptNew = transforms[i].mat.applyToPointArray(0, 0, 0);
            //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);
            pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];
        }
        return pt;
    },
    mHelper: new Matrix()
};
function RenderableElement(){

}

RenderableElement.prototype = {
    initRenderable: function() {
        //layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange
        this.isInRange = false;
        //layer's display state
        this.hidden = false;
        // If layer's transparency equals 0, it can be hidden
        this.isTransparent = false;
        //list of animated components
        this.renderableComponents = [];
    },
    addRenderableComponent: function(component) {
        if(this.renderableComponents.indexOf(component) === -1) {
            this.renderableComponents.push(component);
        }
    },
    removeRenderableComponent: function(component) {
        if(this.renderableComponents.indexOf(component) !== -1) {
            this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1);
        }
    },
    prepareRenderableFrame: function(num) {
        this.checkLayerLimits(num);
    },
    checkTransparency: function(){
        if(this.finalTransform.mProp.o.v <= 0) {
            if(!this.isTransparent && this.globalData.renderConfig.hideOnTransparent){
                this.isTransparent = true;
                this.hide();
            }
        } else if(this.isTransparent) {
            this.isTransparent = false;
            this.show();
        }
    },
    /**
     * @function 
     * Initializes frame related properties.
     *
     * @param {number} num
     * current frame number in Layer's time
     * 
     */
    checkLayerLimits: function(num) {
        if(this.data.ip - this.data.st <= num && this.data.op - this.data.st > num)
        {
            if(this.isInRange !== true){
                this.globalData._mdf = true;
                this._mdf = true;
                this.isInRange = true;
                this.show();
            }
        } else {
            if(this.isInRange !== false){
                this.globalData._mdf = true;
                this.isInRange = false;
                this.hide();
            }
        }
    },
    renderRenderable: function() {
        var i, len = this.renderableComponents.length;
        for(i = 0; i < len; i += 1) {
            this.renderableComponents[i].renderFrame(this._isFirstFrame);
        }
        /*this.maskManager.renderFrame(this.finalTransform.mat);
        this.renderableEffectsManager.renderFrame(this._isFirstFrame);*/
    },
    sourceRectAtTime: function(){
        return {
            top:0,
            left:0,
            width:100,
            height:100
        };
    },
    getLayerSize: function(){
        if(this.data.ty === 5){
            return {w:this.data.textData.width,h:this.data.textData.height};
        }else{
            return {w:this.data.width,h:this.data.height};
        }
    }
};
function RenderableDOMElement() {}

(function(){
    var _prototype = {
        initElement: function(data,globalData,comp) {
            this.initFrame();
            this.initBaseData(data, globalData, comp);
            this.initTransform(data, globalData, comp);
            this.initHierarchy();
            this.initRenderable();
            this.initRendererElement();
            this.createContainerElements();
            this.createRenderableComponents();
            this.createContent();
            this.hide();
        },
        hide: function(){
            if (!this.hidden && (!this.isInRange || this.isTransparent)) {
                var elem = this.baseElement || this.layerElement;
                elem.style.display = 'none';
                this.hidden = true;
            }
        },
        show: function(){
            if (this.isInRange && !this.isTransparent){
                if (!this.data.hd) {
                    var elem = this.baseElement || this.layerElement;
                    elem.style.display = 'block';
                }
                this.hidden = false;
                this._isFirstFrame = true;
            }
        },
        renderFrame: function() {
            //If it is exported as hidden (data.hd === true) no need to render
            //If it is not visible no need to render
            if (this.data.hd || this.hidden) {
                return;
            }
            this.renderTransform();
            this.renderRenderable();
            this.renderElement();
            this.renderInnerContent();
            if (this._isFirstFrame) {
                this._isFirstFrame = false;
            }
        },
        renderInnerContent: function() {},
        prepareFrame: function(num) {
            this._mdf = false;
            this.prepareRenderableFrame(num);
            this.prepareProperties(num, this.isInRange);
            this.checkTransparency();
        },
        destroy: function(){
            this.innerElem =  null;
            this.destroyBaseElement();
        }
    };
    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);
}());
function ProcessedElement(element, position) {
	this.elem = element;
	this.pos = position;
}
function SVGStyleData(data, level) {
	this.data = data;
	this.type = data.ty;
	this.d = '';
	this.lvl = level;
	this._mdf = false;
	this.closed = data.hd === true;
	this.pElem = createNS('path');
	this.msElem = null;
}

SVGStyleData.prototype.reset = function() {
	this.d = '';
	this._mdf = false;
};
function SVGShapeData(transformers, level, shape) {
    this.caches = [];
    this.styles = [];
    this.transformers = transformers;
    this.lStr = '';
    this.sh = shape;
    this.lvl = level;
    //TODO find if there are some cases where _isAnimated can be false. 
    // For now, since shapes add up with other shapes. They have to be calculated every time.
    // One way of finding out is checking if all styles associated to this shape depend only of this shape
    this._isAnimated = !!shape.k;
    // TODO: commenting this for now since all shapes are animated
    var i = 0, len = transformers.length;
    while(i < len) {
    	if(transformers[i].mProps.dynamicProperties.length) {
    		this._isAnimated = true;
    		break;
    	}
    	i += 1;
    }
}

SVGShapeData.prototype.setAsAnimated = function() {
    this._isAnimated = true;
}
function SVGTransformData(mProps, op, container) {
	this.transform = {
		mProps: mProps,
		op: op,
		container: container
	};
	this.elements = [];
    this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;
}
function SVGStrokeStyleData(elem, data, styleOb){
	this.initDynamicPropertyContainer(elem);
	this.getValue = this.iterateDynamicProperties;
	this.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);
	this.w = PropertyFactory.getProp(elem,data.w,0,null,this);
	this.d = new DashProperty(elem,data.d||{},'svg',this);
	this.c = PropertyFactory.getProp(elem,data.c,1,255,this);
	this.style = styleOb;
    this._isAnimated = !!this._isAnimated;
}

extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);
function SVGFillStyleData(elem, data, styleOb){
	this.initDynamicPropertyContainer(elem);
	this.getValue = this.iterateDynamicProperties;
	this.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);
	this.c = PropertyFactory.getProp(elem,data.c,1,255,this);
	this.style = styleOb;
}

extendPrototype([DynamicPropertyContainer], SVGFillStyleData);
function SVGGradientFillStyleData(elem, data, styleOb){
    this.initDynamicPropertyContainer(elem);
    this.getValue = this.iterateDynamicProperties;
    this.initGradientData(elem, data, styleOb);
}

SVGGradientFillStyleData.prototype.initGradientData = function(elem, data, styleOb){
    this.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);
    this.s = PropertyFactory.getProp(elem,data.s,1,null,this);
    this.e = PropertyFactory.getProp(elem,data.e,1,null,this);
    this.h = PropertyFactory.getProp(elem,data.h||{k:0},0,0.01,this);
    this.a = PropertyFactory.getProp(elem,data.a||{k:0},0,degToRads,this);
    this.g = new GradientProperty(elem,data.g,this);
    this.style = styleOb;
    this.stops = [];
    this.setGradientData(styleOb.pElem, data);
    this.setGradientOpacity(data, styleOb);
    this._isAnimated = !!this._isAnimated;

};

SVGGradientFillStyleData.prototype.setGradientData = function(pathElement,data){

    var gradientId = createElementID();
    var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');
    gfill.setAttribute('id',gradientId);
    gfill.setAttribute('spreadMethod','pad');
    gfill.setAttribute('gradientUnits','userSpaceOnUse');
    var stops = [];
    var stop, j, jLen;
    jLen = data.g.p*4;
    for(j=0;j<jLen;j+=4){
        stop = createNS('stop');
        gfill.appendChild(stop);
        stops.push(stop);
    }
    pathElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(' + locationHref + '#'+gradientId+')');
    
    this.gf = gfill;
    this.cst = stops;
};

SVGGradientFillStyleData.prototype.setGradientOpacity = function(data, styleOb){
    if(this.g._hasOpacity && !this.g._collapsable){
        var stop, j, jLen;
        var mask = createNS("mask");
        var maskElement = createNS( 'path');
        mask.appendChild(maskElement);
        var opacityId = createElementID();
        var maskId = createElementID();
        mask.setAttribute('id',maskId);
        var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');
        opFill.setAttribute('id',opacityId);
        opFill.setAttribute('spreadMethod','pad');
        opFill.setAttribute('gradientUnits','userSpaceOnUse');
        jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;
        var stops = this.stops;
        for(j=data.g.p*4;j<jLen;j+=2){
            stop = createNS('stop');
            stop.setAttribute('stop-color','rgb(255,255,255)');
            opFill.appendChild(stop);
            stops.push(stop);
        }
        maskElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(' + locationHref + '#'+opacityId+')');
        this.of = opFill;
        this.ms = mask;
        this.ost = stops;
        this.maskId = maskId;
        styleOb.msElem = maskElement;
    }
};

extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);
function SVGGradientStrokeStyleData(elem, data, styleOb){
	this.initDynamicPropertyContainer(elem);
	this.getValue = this.iterateDynamicProperties;
	this.w = PropertyFactory.getProp(elem,data.w,0,null,this);
	this.d = new DashProperty(elem,data.d||{},'svg',this);
    this.initGradientData(elem, data, styleOb);
    this._isAnimated = !!this._isAnimated;
}

extendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);
function ShapeGroupData() {
	this.it = [];
    this.prevViewData = [];
    this.gr = createNS('g');
}
var SVGElementsRenderer = (function() {
	var _identityMatrix = new Matrix();
	var _matrixHelper = new Matrix();

	var ob = {
		createRenderFunction: createRenderFunction
	}

	function createRenderFunction(data) {
	    var ty = data.ty;
	    switch(data.ty) {
	        case 'fl':
	        return renderFill;
	        case 'gf':
	        return renderGradient;
	        case 'gs':
	        return renderGradientStroke;
	        case 'st':
	        return renderStroke;
	        case 'sh':
	        case 'el':
	        case 'rc':
	        case 'sr':
	        return renderPath;
	        case 'tr':
	        return renderContentTransform;
	    }
	}

	function renderContentTransform(styleData, itemData, isFirstFrame) {
	    if(isFirstFrame || itemData.transform.op._mdf){
	        itemData.transform.container.setAttribute('opacity',itemData.transform.op.v);
	    }
	    if(isFirstFrame || itemData.transform.mProps._mdf){
	        itemData.transform.container.setAttribute('transform',itemData.transform.mProps.v.to2dCSS());
	    }
	}

	function renderPath(styleData, itemData, isFirstFrame) {
	    var j, jLen,pathStringTransformed,redraw,pathNodes,l, lLen = itemData.styles.length;
	    var lvl = itemData.lvl;
	    var paths, mat, props, iterations, k;
	    for(l=0;l<lLen;l+=1){
	        redraw = itemData.sh._mdf || isFirstFrame;
	        if(itemData.styles[l].lvl < lvl){
	            mat = _matrixHelper.reset();
	            iterations = lvl - itemData.styles[l].lvl;
	            k = itemData.transformers.length-1;
	            while(!redraw && iterations > 0) {
	                redraw = itemData.transformers[k].mProps._mdf || redraw;
	                iterations --;
	                k --;
	            }
	            if(redraw) {
	                iterations = lvl - itemData.styles[l].lvl;
	                k = itemData.transformers.length-1;
	                while(iterations > 0) {
	                    props = itemData.transformers[k].mProps.v.props;
	                    mat.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);
	                    iterations --;
	                    k --;
	                }
	            }
	        } else {
	            mat = _identityMatrix;
	        }
	        paths = itemData.sh.paths;
	        jLen = paths._length;
	        if(redraw){
	            pathStringTransformed = '';
	            for(j=0;j<jLen;j+=1){
	                pathNodes = paths.shapes[j];
	                if(pathNodes && pathNodes._length){
	                    pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);
	                }
	            }
	            itemData.caches[l] = pathStringTransformed;
	        } else {
	            pathStringTransformed = itemData.caches[l];
	        }
	        itemData.styles[l].d += styleData.hd === true ? '' : pathStringTransformed;
	        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;
	    }
	}

	function renderFill (styleData,itemData, isFirstFrame){
	    var styleElem = itemData.style;

	    if(itemData.c._mdf || isFirstFrame){
	        styleElem.pElem.setAttribute('fill','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');
	    }
	    if(itemData.o._mdf || isFirstFrame){
	        styleElem.pElem.setAttribute('fill-opacity',itemData.o.v);
	    }
	};

	function renderGradientStroke (styleData, itemData, isFirstFrame) {
	    renderGradient(styleData, itemData, isFirstFrame);
	    renderStroke(styleData, itemData, isFirstFrame);
	}

	function renderGradient(styleData, itemData, isFirstFrame) {
	    var gfill = itemData.gf;
	    var hasOpacity = itemData.g._hasOpacity;
	    var pt1 = itemData.s.v, pt2 = itemData.e.v;

	    if (itemData.o._mdf || isFirstFrame) {
	        var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';
	        itemData.style.pElem.setAttribute(attr, itemData.o.v);
	    }
	    if (itemData.s._mdf || isFirstFrame) {
	        var attr1 = styleData.t === 1 ? 'x1' : 'cx';
	        var attr2 = attr1 === 'x1' ? 'y1' : 'cy';
	        gfill.setAttribute(attr1, pt1[0]);
	        gfill.setAttribute(attr2, pt1[1]);
	        if (hasOpacity && !itemData.g._collapsable) {
	            itemData.of.setAttribute(attr1, pt1[0]);
	            itemData.of.setAttribute(attr2, pt1[1]);
	        }
	    }
	    var stops, i, len, stop;
	    if (itemData.g._cmdf || isFirstFrame) {
	        stops = itemData.cst;
	        var cValues = itemData.g.c;
	        len = stops.length;
	        for (i = 0; i < len; i += 1){
	            stop = stops[i];
	            stop.setAttribute('offset', cValues[i * 4] + '%');
	            stop.setAttribute('stop-color','rgb('+ cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ','+cValues[i * 4 + 3] + ')');
	        }
	    }
	    if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {
	        var oValues = itemData.g.o;
	        if(itemData.g._collapsable) {
	            stops = itemData.cst;
	        } else {
	            stops = itemData.ost;
	        }
	        len = stops.length;
	        for (i = 0; i < len; i += 1) {
	            stop = stops[i];
	            if(!itemData.g._collapsable) {
	                stop.setAttribute('offset', oValues[i * 2] + '%');
	            }
	            stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);
	        }
	    }
	    if (styleData.t === 1) {
	        if (itemData.e._mdf  || isFirstFrame) {
	            gfill.setAttribute('x2', pt2[0]);
	            gfill.setAttribute('y2', pt2[1]);
	            if (hasOpacity && !itemData.g._collapsable) {
	                itemData.of.setAttribute('x2', pt2[0]);
	                itemData.of.setAttribute('y2', pt2[1]);
	            }
	        }
	    } else {
	        var rad;
	        if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {
	            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));
	            gfill.setAttribute('r', rad);
	            if(hasOpacity && !itemData.g._collapsable){
	                itemData.of.setAttribute('r', rad);
	            }
	        }
	        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {
	            if (!rad) {
	                rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));
	            }
	            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);

	            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99: itemData.h.v;
	            var dist = rad * percent;
	            var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];
	            var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];
	            gfill.setAttribute('fx', x);
	            gfill.setAttribute('fy', y);
	            if (hasOpacity && !itemData.g._collapsable) {
	                itemData.of.setAttribute('fx', x);
	                itemData.of.setAttribute('fy', y);
	            }
	        }
	        //gfill.setAttribute('fy','200');
	    }
	};

	function renderStroke(styleData, itemData, isFirstFrame) {
	    var styleElem = itemData.style;
	    var d = itemData.d;
	    if (d && (d._mdf || isFirstFrame) && d.dashStr) {
	        styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr);
	        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0]);
	    }
	    if(itemData.c && (itemData.c._mdf || isFirstFrame)){
	        styleElem.pElem.setAttribute('stroke','rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')');
	    }
	    if(itemData.o._mdf || isFirstFrame){
	        styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);
	    }
	    if(itemData.w._mdf || isFirstFrame){
	        styleElem.pElem.setAttribute('stroke-width', itemData.w.v);
	        if(styleElem.msElem){
	            styleElem.msElem.setAttribute('stroke-width', itemData.w.v);
	        }
	    }
	};

	return ob;
}())
function ShapeTransformManager() {
	this.sequences = {};
	this.sequenceList = [];
    this.transform_key_count = 0;
}

ShapeTransformManager.prototype = {
	addTransformSequence: function(transforms) {
		var i, len = transforms.length;
		var key = '_';
		for(i = 0; i < len; i += 1) {
			key += transforms[i].transform.key + '_';
		}
		var sequence = this.sequences[key];
		if(!sequence) {
			sequence = {
				transforms: [].concat(transforms),
				finalTransform: new Matrix(),
				_mdf: false
			};
			this.sequences[key] = sequence;
			this.sequenceList.push(sequence);
		}
		return sequence;
	},
	processSequence: function(sequence, isFirstFrame) {
		var i = 0, len = sequence.transforms.length, _mdf = isFirstFrame;
		while (i < len && !isFirstFrame) {
			if (sequence.transforms[i].transform.mProps._mdf) {
				_mdf = true;
				break;
			}
			i += 1
		}
		if (_mdf) {
			var props;
			sequence.finalTransform.reset();
			for (i = len - 1; i >= 0; i -= 1) {
		        props = sequence.transforms[i].transform.mProps.v.props;
		        sequence.finalTransform.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);
			}
		}
		sequence._mdf = _mdf;
		
	},
	processSequences: function(isFirstFrame) {
		var i, len = this.sequenceList.length;
		for (i = 0; i < len; i += 1) {
			this.processSequence(this.sequenceList[i], isFirstFrame);
		}

	},
	getNewKey: function() {
		return '_' + this.transform_key_count++;
	}
}
function CVShapeData(element, data, styles, transformsManager) {
    this.styledShapes = [];
    this.tr = [0,0,0,0,0,0];
    var ty = 4;
    if(data.ty == 'rc'){
        ty = 5;
    }else if(data.ty == 'el'){
        ty = 6;
    }else if(data.ty == 'sr'){
        ty = 7;
    }
    this.sh = ShapePropertyFactory.getShapeProp(element,data,ty,element);
    var i , len = styles.length,styledShape;
    for (i = 0; i < len; i += 1) {
        if (!styles[i].closed) {
            styledShape = {
                transforms: transformsManager.addTransformSequence(styles[i].transforms),
                trNodes: []
            }
            this.styledShapes.push(styledShape);
            styles[i].elements.push(styledShape);
        }
    }
}

CVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated;
function BaseElement(){
}

BaseElement.prototype = {
    checkMasks: function(){
        if(!this.data.hasMask){
            return false;
        }
        var i = 0, len = this.data.masksProperties.length;
        while(i<len) {
            if((this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false)) {
                return true;
            }
            i += 1;
        }
        return false;
    },
    initExpressions: function(){
        this.layerInterface = LayerExpressionInterface(this);
        if(this.data.hasMask && this.maskManager) {
            this.layerInterface.registerMaskInterface(this.maskManager);
        }
        var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);
        this.layerInterface.registerEffectsInterface(effectsInterface);

        if(this.data.ty === 0 || this.data.xt){
            this.compInterface = CompExpressionInterface(this);
        } else if(this.data.ty === 4){
            this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData,this.itemsData,this.layerInterface);
            this.layerInterface.content = this.layerInterface.shapeInterface;
        } else if(this.data.ty === 5){
            this.layerInterface.textInterface = TextExpressionInterface(this);
            this.layerInterface.text = this.layerInterface.textInterface;
        }
    },
    setBlendMode: function(){
        var blendModeValue = getBlendMode(this.data.bm);
        var elem = this.baseElement || this.layerElement;

        elem.style['mix-blend-mode'] = blendModeValue;
    },
    initBaseData: function(data, globalData, comp){
        this.globalData = globalData;
        this.comp = comp;
        this.data = data;
        this.layerId = createElementID();
        
        //Stretch factor for old animations missing this property.
        if(!this.data.sr){
            this.data.sr = 1;
        }
        // effects manager
        this.effectsManager = new EffectsManager(this.data,this,this.dynamicProperties);
        
    },
    getType: function(){
        return this.type;
    }
    ,sourceRectAtTime: function(){}
}
function NullElement(data,globalData,comp){
    this.initFrame();
	this.initBaseData(data, globalData, comp);
    this.initFrame();
    this.initTransform(data, globalData, comp);
    this.initHierarchy();
}

NullElement.prototype.prepareFrame = function(num) {
    this.prepareProperties(num, true);
};

NullElement.prototype.renderFrame = function() {
};

NullElement.prototype.getBaseElement = function() {
	return null;
};

NullElement.prototype.destroy = function() {
};

NullElement.prototype.sourceRectAtTime = function() {
};

NullElement.prototype.hide = function() {
};

extendPrototype([BaseElement,TransformElement,HierarchyElement,FrameElement], NullElement);

function SVGBaseElement(){
}

SVGBaseElement.prototype = {
    initRendererElement: function() {
        this.layerElement = createNS('g');
    },
    createContainerElements: function(){
        this.matteElement = createNS('g');
        this.transformedElement = this.layerElement;
        this.maskedElement = this.layerElement;
        this._sizeChanged = false;
        var layerElementParent = null;
        //If this layer acts as a mask for the following layer
        var filId, fil, gg;
        if (this.data.td) {
            if (this.data.td == 3 || this.data.td == 1) {
                var masker = createNS('mask');
                masker.setAttribute('id', this.layerId);
                masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha');
                masker.appendChild(this.layerElement);
                layerElementParent = masker;
                this.globalData.defs.appendChild(masker);
                // This is only for IE and Edge when mask if of type alpha
                if (!featureSupport.maskType && this.data.td == 1) {
                    masker.setAttribute('mask-type', 'luminance');
                    filId = createElementID();
                    fil = filtersFactory.createFilter(filId);
                    this.globalData.defs.appendChild(fil);
                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());
                    gg = createNS('g');
                    gg.appendChild(this.layerElement);
                    layerElementParent = gg;
                    masker.appendChild(gg);
                    gg.setAttribute('filter','url(' + locationHref + '#' + filId + ')');
                }
            } else if(this.data.td == 2) {
                var maskGroup = createNS('mask');
                maskGroup.setAttribute('id', this.layerId);
                maskGroup.setAttribute('mask-type','alpha');
                var maskGrouper = createNS('g');
                maskGroup.appendChild(maskGrouper);
                filId = createElementID();
                fil = filtersFactory.createFilter(filId);
                ////

                // This solution doesn't work on Android when meta tag with viewport attribute is set
                /*var feColorMatrix = createNS('feColorMatrix');
                feColorMatrix.setAttribute('type', 'matrix');
                feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');
                feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');
                fil.appendChild(feColorMatrix);*/
                ////
                var feCTr = createNS('feComponentTransfer');
                feCTr.setAttribute('in','SourceGraphic');
                fil.appendChild(feCTr);
                var feFunc = createNS('feFuncA');
                feFunc.setAttribute('type','table');
                feFunc.setAttribute('tableValues','1.0 0.0');
                feCTr.appendChild(feFunc);
                ////
                this.globalData.defs.appendChild(fil);
                var alphaRect = createNS('rect');
                alphaRect.setAttribute('width',  this.comp.data.w);
                alphaRect.setAttribute('height', this.comp.data.h);
                alphaRect.setAttribute('x','0');
                alphaRect.setAttribute('y','0');
                alphaRect.setAttribute('fill','#ffffff');
                alphaRect.setAttribute('opacity','0');
                maskGrouper.setAttribute('filter', 'url(' + locationHref + '#'+filId+')');
                maskGrouper.appendChild(alphaRect);
                maskGrouper.appendChild(this.layerElement);
                layerElementParent = maskGrouper;
                if (!featureSupport.maskType) {
                    maskGroup.setAttribute('mask-type', 'luminance');
                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());
                    gg = createNS('g');
                    maskGrouper.appendChild(alphaRect);
                    gg.appendChild(this.layerElement);
                    layerElementParent = gg;
                    maskGrouper.appendChild(gg);
                }
                this.globalData.defs.appendChild(maskGroup);
            }
        } else if (this.data.tt) {
            this.matteElement.appendChild(this.layerElement);
            layerElementParent = this.matteElement;
            this.baseElement = this.matteElement;
        } else {
            this.baseElement = this.layerElement;
        }
        if (this.data.ln) {
            this.layerElement.setAttribute('id', this.data.ln);
        }
        if (this.data.cl) {
            this.layerElement.setAttribute('class', this.data.cl);
        }
        //Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped
        if (this.data.ty === 0 && !this.data.hd) {
            var cp = createNS( 'clipPath');
            var pt = createNS('path');
            pt.setAttribute('d','M0,0 L' + this.data.w + ',0' + ' L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');
            var clipId = createElementID();
            cp.setAttribute('id',clipId);
            cp.appendChild(pt);
            this.globalData.defs.appendChild(cp);

            if (this.checkMasks()) {
                var cpGroup = createNS('g');
                cpGroup.setAttribute('clip-path','url(' + locationHref + '#'+clipId + ')');
                cpGroup.appendChild(this.layerElement);
                this.transformedElement = cpGroup;
                if (layerElementParent) {
                    layerElementParent.appendChild(this.transformedElement);
                } else {
                    this.baseElement = this.transformedElement;
                }
            } else {
                this.layerElement.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');
            }
            
        }
        if (this.data.bm !== 0) {
            this.setBlendMode();
        }

    },
    renderElement: function() {
        if (this.finalTransform._matMdf) {
            this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS());
        }
        if (this.finalTransform._opMdf) {
            this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v);
        }
    },
    destroyBaseElement: function() {
        this.layerElement = null;
        this.matteElement = null;
        this.maskManager.destroy();
    },
    getBaseElement: function() {
        if (this.data.hd) {
            return null;
        }
        return this.baseElement;
    },
    createRenderableComponents: function() {
        this.maskManager = new MaskElement(this.data, this, this.globalData);
        this.renderableEffectsManager = new SVGEffects(this);
    },
    setMatte: function(id) {
        if (!this.matteElement) {
            return;
        }
        this.matteElement.setAttribute("mask", "url(" + locationHref + "#" + id + ")");
    }
};
function IShapeElement(){
}

IShapeElement.prototype = {
    addShapeToModifiers: function(data) {
        var i, len = this.shapeModifiers.length;
        for(i=0;i<len;i+=1){
            this.shapeModifiers[i].addShape(data);
        }
    },
    isShapeInAnimatedModifiers: function(data) {
        var i = 0, len = this.shapeModifiers.length;
        while(i < len) {
            if(this.shapeModifiers[i].isAnimatedWithShape(data)) {
                return true;
            }
        }
        return false;
    },
    renderModifiers: function() {
        if(!this.shapeModifiers.length){
            return;
        }
        var i, len = this.shapes.length;
        for(i=0;i<len;i+=1){
            this.shapes[i].sh.reset();
        }

        len = this.shapeModifiers.length;
        for(i=len-1;i>=0;i-=1){
            this.shapeModifiers[i].processShapes(this._isFirstFrame);
        }
    },
    lcEnum: {
        '1': 'butt',
        '2': 'round',
        '3': 'square'
    },
    ljEnum: {
        '1': 'miter',
        '2': 'round',
        '3': 'bevel'
    },
    searchProcessedElement: function(elem){
        var elements = this.processedElements;
        var i = 0, len = elements.length;
        while (i < len) {
            if (elements[i].elem === elem) {
                return elements[i].pos;
            }
            i += 1;
        }
        return 0;
    },
    addProcessedElement: function(elem, pos){
        var elements = this.processedElements;
        var i = elements.length;
        while(i) {
            i -= 1;
            if (elements[i].elem === elem) {
                elements[i].pos = pos;
                return;
            }
        }
        elements.push(new ProcessedElement(elem, pos));
    },
    prepareFrame: function(num) {
        this.prepareRenderableFrame(num);
        this.prepareProperties(num, this.isInRange);
    }
};
function ITextElement(){
}

ITextElement.prototype.initElement = function(data,globalData,comp){
    this.lettersChangedFlag = true;
    this.initFrame();
    this.initBaseData(data, globalData, comp);
    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);
    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);
    this.initTransform(data, globalData, comp);
    this.initHierarchy();
    this.initRenderable();
    this.initRendererElement();
    this.createContainerElements();
    this.createRenderableComponents();
    this.createContent();
    this.hide();
    this.textAnimator.searchProperties(this.dynamicProperties);
};

ITextElement.prototype.prepareFrame = function(num) {
    this._mdf = false;
    this.prepareRenderableFrame(num);
    this.prepareProperties(num, this.isInRange);
    if(this.textProperty._mdf || this.textProperty._isFirstFrame) {
        this.buildNewText();
        this.textProperty._isFirstFrame = false;
        this.textProperty._mdf = false;
    }
};

ITextElement.prototype.createPathShape = function(matrixHelper, shapes) {
    var j,jLen = shapes.length;
    var k, kLen, pathNodes;
    var shapeStr = '';
    for(j=0;j<jLen;j+=1){
        pathNodes = shapes[j].ks.k;
        shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);
    }
    return shapeStr;
};

ITextElement.prototype.updateDocumentData = function(newData, index) {
    this.textProperty.updateDocumentData(newData, index);
};

ITextElement.prototype.canResizeFont = function(_canResize) {
    this.textProperty.canResizeFont(_canResize);
};

ITextElement.prototype.setMinimumFontSize = function(_fontSize) {
    this.textProperty.setMinimumFontSize(_fontSize);
};

ITextElement.prototype.applyTextPropertiesToMatrix = function(documentData, matrixHelper, lineNumber, xPos, yPos) {
    if(documentData.ps){
        matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);
    }
    matrixHelper.translate(0,-documentData.ls,0);
    switch(documentData.j){
        case 1:
            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]),0,0);
            break;
        case 2:
            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber] )/2,0,0);
            break;
    }
    matrixHelper.translate(xPos, yPos, 0);
};


ITextElement.prototype.buildColor = function(colorData) {
    return 'rgb(' + Math.round(colorData[0]*255) + ',' + Math.round(colorData[1]*255) + ',' + Math.round(colorData[2]*255) + ')';
};

ITextElement.prototype.emptyProp = new LetterProps();

ITextElement.prototype.destroy = function(){
    
};
function ICompElement(){}

extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);

ICompElement.prototype.initElement = function(data,globalData,comp) {
    this.initFrame();
    this.initBaseData(data, globalData, comp);
    this.initTransform(data, globalData, comp);
    this.initRenderable();
    this.initHierarchy();
    this.initRendererElement();
    this.createContainerElements();
    this.createRenderableComponents();
    if(this.data.xt || !globalData.progressiveLoad){
        this.buildAllItems();
    }
    this.hide();
};

/*ICompElement.prototype.hide = function(){
    if(!this.hidden){
        this.hideElement();
        var i,len = this.elements.length;
        for( i = 0; i < len; i+=1 ){
            if(this.elements[i]){
                this.elements[i].hide();
            }
        }
    }
};*/

ICompElement.prototype.prepareFrame = function(num){
    this._mdf = false;
    this.prepareRenderableFrame(num);
    this.prepareProperties(num, this.isInRange);
    if(!this.isInRange && !this.data.xt){
        return;
    }

    if (!this.tm._placeholder) {
        var timeRemapped = this.tm.v;
        if(timeRemapped === this.data.op){
            timeRemapped = this.data.op - 1;
        }
        this.renderedFrame = timeRemapped;
    } else {
        this.renderedFrame = num/this.data.sr;
    }
    var i,len = this.elements.length;
    if(!this.completeLayers){
        this.checkLayers(this.renderedFrame);
    }
    //This iteration needs to be backwards because of how expressions connect between each other
    for( i = len - 1; i >= 0; i -= 1 ){
        if(this.completeLayers || this.elements[i]){
            this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);
            if(this.elements[i]._mdf) {
                this._mdf = true;
            }
        }
    }
};

ICompElement.prototype.renderInnerContent = function() {
    var i,len = this.layers.length;
    for( i = 0; i < len; i += 1 ){
        if(this.completeLayers || this.elements[i]){
            this.elements[i].renderFrame();
        }
    }
};

ICompElement.prototype.setElements = function(elems){
    this.elements = elems;
};

ICompElement.prototype.getElements = function(){
    return this.elements;
};

ICompElement.prototype.destroyElements = function(){
    var i,len = this.layers.length;
    for( i = 0; i < len; i+=1 ){
        if(this.elements[i]){
            this.elements[i].destroy();
        }
    }
};

ICompElement.prototype.destroy = function(){
    this.destroyElements();
    this.destroyBaseElement();
};

function IImageElement(data,globalData,comp){
    this.assetData = globalData.getAssetData(data.refId);
    this.initElement(data,globalData,comp);
    this.sourceRect = {top:0,left:0,width:this.assetData.w,height:this.assetData.h};
}

extendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], IImageElement);

IImageElement.prototype.createContent = function(){

    var assetPath = this.globalData.getAssetsPath(this.assetData);

    this.innerElem = createNS('image');
    this.innerElem.setAttribute('width',this.assetData.w+"px");
    this.innerElem.setAttribute('height',this.assetData.h+"px");
    this.innerElem.setAttribute('preserveAspectRatio',this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio);
    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);
    
    this.layerElement.appendChild(this.innerElem);
};

IImageElement.prototype.sourceRectAtTime = function() {
	return this.sourceRect;
}
function ISolidElement(data,globalData,comp){
    this.initElement(data,globalData,comp);
}
extendPrototype([IImageElement], ISolidElement);

ISolidElement.prototype.createContent = function(){

    var rect = createNS('rect');
    ////rect.style.width = this.data.sw;
    ////rect.style.height = this.data.sh;
    ////rect.style.fill = this.data.sc;
    rect.setAttribute('width',this.data.sw);
    rect.setAttribute('height',this.data.sh);
    rect.setAttribute('fill',this.data.sc);
    this.layerElement.appendChild(rect);
};
function AudioElement(data,globalData,comp){
    this.initFrame();
    this.initRenderable();
    this.assetData = globalData.getAssetData(data.refId);
	this.initBaseData(data, globalData, comp);
	this._isPlaying = false;
	this._canPlay = false;
	var assetPath = this.globalData.getAssetsPath(this.assetData);
    this.audio = this.globalData.audioController.createAudio(assetPath);
    this._currentTime = 0;
    this.globalData.audioController.addAudio(this);
    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate,this) : {_placeholder:true};
}

AudioElement.prototype.prepareFrame = function(num) {
    this.prepareRenderableFrame(num, true);
    this.prepareProperties(num, true);
    if (!this.tm._placeholder) {
        var timeRemapped = this.tm.v;
        this._currentTime = timeRemapped;
    } else {
        this._currentTime = num / this.data.sr;
    }
};

extendPrototype([RenderableElement,BaseElement,FrameElement], AudioElement);

AudioElement.prototype.renderFrame = function() {
	if (this.isInRange && this._canPlay) {
		if (!this._isPlaying) {
			this.audio.play();
			this.audio.seek(this._currentTime / this.globalData.frameRate);
			this._isPlaying = true;
		} else if (!this.audio.playing()
			|| Math.abs(this._currentTime / this.globalData.frameRate - this.audio.seek()) > 0.1
		) {
			this.audio.seek(this._currentTime / this.globalData.frameRate)
		}
	}
};

AudioElement.prototype.show = function() {
	// this.audio.play()
};

AudioElement.prototype.hide = function() {
	this.audio.pause();
	this._isPlaying = false;
};

AudioElement.prototype.pause = function() {
	this.audio.pause();
	this._isPlaying = false;
	this._canPlay = false;
};

AudioElement.prototype.resume = function() {
	this._canPlay = true;
};

AudioElement.prototype.setRate = function(rateValue) {
	this.audio.rate(rateValue);
};

AudioElement.prototype.volume = function(volumeValue) {
	this.audio.volume(volumeValue);
};

AudioElement.prototype.getBaseElement = function() {
	return null;
};

AudioElement.prototype.destroy = function() {
};

AudioElement.prototype.sourceRectAtTime = function() {
};

AudioElement.prototype.initExpressions = function() {
};


function SVGCompElement(data,globalData,comp){
    this.layers = data.layers;
    this.supports3d = true;
    this.completeLayers = false;
    this.pendingElements = [];
    this.elements = this.layers ? createSizedArray(this.layers.length) : [];
    //this.layerElement = createNS('g');
    this.initElement(data,globalData,comp);
    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this) : {_placeholder:true};
}

extendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement);
function SVGTextElement(data,globalData,comp){
    this.textSpans = [];
    this.renderType = 'svg';
    this.initElement(data,globalData,comp);
}

extendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], SVGTextElement);

SVGTextElement.prototype.createContent = function(){

    if (this.data.singleShape && !this.globalData.fontManager.chars) {
        this.textContainer = createNS('text');
    }
};

SVGTextElement.prototype.buildTextContents = function(textArray) {
    var i = 0, len = textArray.length;
    var textContents = [], currentTextContent = '';
    while (i < len) {
        if(textArray[i] === String.fromCharCode(13) || textArray[i] === String.fromCharCode(3)) {
            textContents.push(currentTextContent);
            currentTextContent = '';
        } else {
            currentTextContent += textArray[i];
        }
        i += 1;
    }
    textContents.push(currentTextContent);
    return textContents;
}

SVGTextElement.prototype.buildNewText = function(){
    var i, len;

    var documentData = this.textProperty.currentData;
    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);
    if(documentData.fc) {
        this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));
    }else{
        this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');
    }
    if(documentData.sc){
        this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));
        this.layerElement.setAttribute('stroke-width', documentData.sw);
    }
    this.layerElement.setAttribute('font-size', documentData.finalSize);
    var fontData = this.globalData.fontManager.getFontByName(documentData.f);
    if(fontData.fClass){
        this.layerElement.setAttribute('class',fontData.fClass);
    } else {
        this.layerElement.setAttribute('font-family', fontData.fFamily);
        var fWeight = documentData.fWeight, fStyle = documentData.fStyle;
        this.layerElement.setAttribute('font-style', fStyle);
        this.layerElement.setAttribute('font-weight', fWeight);
    }
    this.layerElement.setAttribute('aria-label', documentData.t);

    var letters = documentData.l || [];
    var usesGlyphs = !!this.globalData.fontManager.chars;
    len = letters.length;

    var tSpan;
    var matrixHelper = this.mHelper;
    var shapes, shapeStr = '', singleShape = this.data.singleShape;
    var xPos = 0, yPos = 0, firstLine = true;
    var trackingOffset = documentData.tr/1000*documentData.finalSize;
    if(singleShape && !usesGlyphs && !documentData.sz) {
        var tElement = this.textContainer;
        var justify = 'start';
        switch(documentData.j) {
            case 1:
                justify = 'end';
                break;
            case 2:
                justify = 'middle';
                break;
        }
        tElement.setAttribute('text-anchor',justify);
        tElement.setAttribute('letter-spacing',trackingOffset);
        var textContent = this.buildTextContents(documentData.finalText);
        len = textContent.length;
        yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;
        for ( i = 0; i < len; i += 1) {
            tSpan = this.textSpans[i] || createNS('tspan');
            tSpan.textContent = textContent[i];
            tSpan.setAttribute('x', 0);
            tSpan.setAttribute('y', yPos);
            tSpan.style.display = 'inherit';
            tElement.appendChild(tSpan);
            this.textSpans[i] = tSpan;
            yPos += documentData.finalLineHeight;
        }
        
        this.layerElement.appendChild(tElement);
    } else {
        var cachedSpansLength = this.textSpans.length;
        var shapeData, charData;
        for (i = 0; i < len; i += 1) {
            if(!usesGlyphs || !singleShape || i === 0){
                tSpan = cachedSpansLength > i ? this.textSpans[i] : createNS(usesGlyphs?'path':'text');
                if (cachedSpansLength <= i) {
                    tSpan.setAttribute('stroke-linecap', 'butt');
                    tSpan.setAttribute('stroke-linejoin','round');
                    tSpan.setAttribute('stroke-miterlimit','4');
                    this.textSpans[i] = tSpan;
                    this.layerElement.appendChild(tSpan);
                }
                tSpan.style.display = 'inherit';
            }
            
            matrixHelper.reset();
            matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);
            if (singleShape) {
                if(letters[i].n) {
                    xPos = -trackingOffset;
                    yPos += documentData.yOffset;
                    yPos += firstLine ? 1 : 0;
                    firstLine = false;
                }
                this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);
                xPos += letters[i].l || 0;
                //xPos += letters[i].val === ' ' ? 0 : trackingOffset;
                xPos += trackingOffset;
            }
            if(usesGlyphs) {
                charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);
                shapeData = charData && charData.data || {};
                shapes = shapeData.shapes ? shapeData.shapes[0].it : [];
                if(!singleShape){
                    tSpan.setAttribute('d',this.createPathShape(matrixHelper,shapes));
                } else {
                    shapeStr += this.createPathShape(matrixHelper,shapes);
                }
            } else {
                if(singleShape) {
                    tSpan.setAttribute("transform", "translate(" + matrixHelper.props[12] + "," + matrixHelper.props[13] + ")");
                }
                tSpan.textContent = letters[i].val;
                tSpan.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space","preserve");
            }
            //
        }
        if (singleShape && tSpan) {
            tSpan.setAttribute('d',shapeStr);
        }
    }
    while (i < this.textSpans.length){
        this.textSpans[i].style.display = 'none';
        i += 1;
    }
    
    this._sizeChanged = true;
};

SVGTextElement.prototype.sourceRectAtTime = function(time){
    this.prepareFrame(this.comp.renderedFrame - this.data.st);
    this.renderInnerContent();
    if(this._sizeChanged){
        this._sizeChanged = false;
        var textBox = this.layerElement.getBBox();
        this.bbox = {
            top: textBox.y,
            left: textBox.x,
            width: textBox.width,
            height: textBox.height
        };
    }
    return this.bbox;
};

SVGTextElement.prototype.renderInnerContent = function(){

    if(!this.data.singleShape){
        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);
        if(this.lettersChangedFlag || this.textAnimator.lettersChangedFlag){
            this._sizeChanged = true;
            var  i,len;
            var renderedLetters = this.textAnimator.renderedLetters;

            var letters = this.textProperty.currentData.l;

            len = letters.length;
            var renderedLetter, textSpan;
            for(i=0;i<len;i+=1){
                if(letters[i].n){
                    continue;
                }
                renderedLetter = renderedLetters[i];
                textSpan = this.textSpans[i];
                if(renderedLetter._mdf.m) {
                    textSpan.setAttribute('transform',renderedLetter.m);
                }
                if(renderedLetter._mdf.o) {
                    textSpan.setAttribute('opacity',renderedLetter.o);
                }
                if(renderedLetter._mdf.sw){
                    textSpan.setAttribute('stroke-width',renderedLetter.sw);
                }
                if(renderedLetter._mdf.sc){
                    textSpan.setAttribute('stroke',renderedLetter.sc);
                }
                if(renderedLetter._mdf.fc){
                    textSpan.setAttribute('fill',renderedLetter.fc);
                }
            }
        }
    }
};

function SVGShapeElement(data,globalData,comp){
    //List of drawable elements
    this.shapes = [];
    // Full shape data
    this.shapesData = data.shapes;
    //List of styles that will be applied to shapes
    this.stylesList = [];
    //List of modifiers that will be applied to shapes
    this.shapeModifiers = [];
    //List of items in shape tree
    this.itemsData = [];
    //List of items in previous shape tree
    this.processedElements = [];
    // List of animated components
    this.animatedContents = [];
    this.initElement(data,globalData,comp);
    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.
    // List of elements that have been created
    this.prevViewData = [];
    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.
}

extendPrototype([BaseElement,TransformElement,SVGBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableDOMElement], SVGShapeElement);

SVGShapeElement.prototype.initSecondaryElement = function() {
};

SVGShapeElement.prototype.identityMatrix = new Matrix();

SVGShapeElement.prototype.buildExpressionInterface = function(){};

SVGShapeElement.prototype.createContent = function(){
    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);
    this.filterUniqueShapes();
};

/*
This method searches for multiple shapes that affect a single element and one of them is animated
*/
SVGShapeElement.prototype.filterUniqueShapes = function(){
    var i, len = this.shapes.length, shape;
    var j, jLen = this.stylesList.length;
    var style, count = 0;
    var tempShapes = [];
    var areAnimated = false;
    for(j = 0; j < jLen; j += 1) {
        style = this.stylesList[j];
        areAnimated = false;
        tempShapes.length = 0;
        for(i = 0; i < len; i += 1) {
            shape = this.shapes[i];
            if(shape.styles.indexOf(style) !== -1) {
                tempShapes.push(shape);
                areAnimated = shape._isAnimated || areAnimated;
            }
        }
        if(tempShapes.length > 1 && areAnimated) {
            this.setShapesAsAnimated(tempShapes);
        }
    }
}

SVGShapeElement.prototype.setShapesAsAnimated = function(shapes){
    var i, len = shapes.length;
    for(i = 0; i < len; i += 1) {
        shapes[i].setAsAnimated();
    }
}

SVGShapeElement.prototype.createStyleElement = function(data, level){
    //TODO: prevent drawing of hidden styles
    var elementData;
    var styleOb = new SVGStyleData(data, level);

    var pathElement = styleOb.pElem;
    if(data.ty === 'st') {
        elementData = new SVGStrokeStyleData(this, data, styleOb);
    } else if(data.ty === 'fl') {
        elementData = new SVGFillStyleData(this, data, styleOb);
    } else if(data.ty === 'gf' || data.ty === 'gs') {
        var gradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;
        elementData = new gradientConstructor(this, data, styleOb);
        this.globalData.defs.appendChild(elementData.gf);
        if (elementData.maskId) {
            this.globalData.defs.appendChild(elementData.ms);
            this.globalData.defs.appendChild(elementData.of);
            pathElement.setAttribute('mask','url(' + locationHref + '#' + elementData.maskId + ')');
        }
    }
    
    if(data.ty === 'st' || data.ty === 'gs') {
        pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round');
        pathElement.setAttribute('stroke-linejoin',this.ljEnum[data.lj] || 'round');
        pathElement.setAttribute('fill-opacity','0');
        if(data.lj === 1) {
            pathElement.setAttribute('stroke-miterlimit',data.ml);
        }
    }

    if(data.r === 2) {
        pathElement.setAttribute('fill-rule', 'evenodd');
    }

    if(data.ln){
        pathElement.setAttribute('id',data.ln);
    }
    if(data.cl){
        pathElement.setAttribute('class',data.cl);
    }
    if(data.bm){
        pathElement.style['mix-blend-mode'] = getBlendMode(data.bm);
    }
    this.stylesList.push(styleOb);
    this.addToAnimatedContents(data, elementData);
    return elementData;
};

SVGShapeElement.prototype.createGroupElement = function(data) {
    var elementData = new ShapeGroupData();
    if(data.ln){
        elementData.gr.setAttribute('id',data.ln);
    }
    if(data.cl){
        elementData.gr.setAttribute('class',data.cl);
    }
    if(data.bm){
        elementData.gr.style['mix-blend-mode'] = getBlendMode(data.bm);
    }
    return elementData;
};

SVGShapeElement.prototype.createTransformElement = function(data, container) {
    var transformProperty = TransformPropertyFactory.getTransformProperty(this,data,this);
    var elementData = new SVGTransformData(transformProperty, transformProperty.o, container);
    this.addToAnimatedContents(data, elementData);
    return elementData;
};

SVGShapeElement.prototype.createShapeElement = function(data, ownTransformers, level) {
    var ty = 4;
    if(data.ty === 'rc'){
        ty = 5;
    }else if(data.ty === 'el'){
        ty = 6;
    }else if(data.ty === 'sr'){
        ty = 7;
    }
    var shapeProperty = ShapePropertyFactory.getShapeProp(this,data,ty,this);
    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);
    this.shapes.push(elementData);
    this.addShapeToModifiers(elementData);
    this.addToAnimatedContents(data, elementData);
    return elementData;
};

SVGShapeElement.prototype.addToAnimatedContents = function(data, element) {
    var i = 0, len = this.animatedContents.length;
    while(i < len) {
        if(this.animatedContents[i].element === element) {
            return;
        }
        i += 1;
    }
    this.animatedContents.push({
        fn: SVGElementsRenderer.createRenderFunction(data),
        element: element,
        data: data
    });
};

SVGShapeElement.prototype.setElementStyles = function(elementData){
    var arr = elementData.styles;
    var j, jLen = this.stylesList.length;
    for (j = 0; j < jLen; j += 1) {
        if (!this.stylesList[j].closed) {
            arr.push(this.stylesList[j]);
        }
    }
};

SVGShapeElement.prototype.reloadShapes = function(){
    this._isFirstFrame = true;
    var i, len = this.itemsData.length;
    for( i = 0; i < len; i += 1) {
        this.prevViewData[i] = this.itemsData[i];
    }
    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);
    this.filterUniqueShapes();
    len = this.dynamicProperties.length;
    for(i = 0; i < len; i += 1) {
        this.dynamicProperties[i].getValue();
    }
    this.renderModifiers();
};

SVGShapeElement.prototype.searchShapes = function(arr,itemsData,prevViewData,container, level, transformers, render){
    var ownTransformers = [].concat(transformers);
    var i, len = arr.length - 1;
    var j, jLen;
    var ownStyles = [], ownModifiers = [], styleOb, currentTransform, modifier, processedPos;
    for(i=len;i>=0;i-=1){
        processedPos = this.searchProcessedElement(arr[i]);
        if(!processedPos){
            arr[i]._render = render;
        } else {
            itemsData[i] = prevViewData[processedPos - 1];
        }
        if(arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs'){
            if(!processedPos){
                itemsData[i] = this.createStyleElement(arr[i], level);
            } else {
                itemsData[i].style.closed = false;
            }
            if(arr[i]._render){
                container.appendChild(itemsData[i].style.pElem);
            }
            ownStyles.push(itemsData[i].style);
        }else if(arr[i].ty == 'gr'){
            if(!processedPos){
                itemsData[i] = this.createGroupElement(arr[i]);
            } else {
                jLen = itemsData[i].it.length;
                for(j=0;j<jLen;j+=1){
                    itemsData[i].prevViewData[j] = itemsData[i].it[j];
                }
            }
            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,itemsData[i].gr, level + 1, ownTransformers, render);
            if(arr[i]._render){
                container.appendChild(itemsData[i].gr);
            }
        }else if(arr[i].ty == 'tr'){
            if(!processedPos){
                itemsData[i] = this.createTransformElement(arr[i], container);
            }
            currentTransform = itemsData[i].transform;
            ownTransformers.push(currentTransform);
        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){
            if(!processedPos){
                itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);
            }
            this.setElementStyles(itemsData[i]);

        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'ms' || arr[i].ty == 'pb'){
            if(!processedPos){
                modifier = ShapeModifiers.getModifier(arr[i].ty);
                modifier.init(this,arr[i]);
                itemsData[i] = modifier;
                this.shapeModifiers.push(modifier);
            } else {
                modifier = itemsData[i];
                modifier.closed = false;
            }
            ownModifiers.push(modifier);
        }else if(arr[i].ty == 'rp'){
            if(!processedPos){
                modifier = ShapeModifiers.getModifier(arr[i].ty);
                itemsData[i] = modifier;
                modifier.init(this,arr,i,itemsData);
                this.shapeModifiers.push(modifier);
                render = false;
            }else{
                modifier = itemsData[i];
                modifier.closed = true;
            }
            ownModifiers.push(modifier);
        }
        this.addProcessedElement(arr[i], i + 1);
    }
    len = ownStyles.length;
    for(i=0;i<len;i+=1){
        ownStyles[i].closed = true;
    }
    len = ownModifiers.length;
    for(i=0;i<len;i+=1){
        ownModifiers[i].closed = true;
    }
};

SVGShapeElement.prototype.renderInnerContent = function() {
    this.renderModifiers();
    var i, len = this.stylesList.length;
    for(i=0;i<len;i+=1){
        this.stylesList[i].reset();
    }
    this.renderShape();

    for (i = 0; i < len; i += 1) {
        if (this.stylesList[i]._mdf || this._isFirstFrame) {
            if(this.stylesList[i].msElem){
                this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d);
                //Adding M0 0 fixes same mask bug on all browsers
                this.stylesList[i].d = 'M0 0' + this.stylesList[i].d;
            }
            this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0');
        }
    }
};

SVGShapeElement.prototype.renderShape = function() {
    var i, len = this.animatedContents.length;
    var animatedContent;
    for(i = 0; i < len; i += 1) {
        animatedContent = this.animatedContents[i];
        if((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {
            animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame);
        }
    }
}

SVGShapeElement.prototype.destroy = function(){
    this.destroyBaseElement();
    this.shapesData = null;
    this.itemsData = null;
};

function SVGTintFilter(filter, filterManager){
    this.filterManager = filterManager;
    var feColorMatrix = createNS('feColorMatrix');
    feColorMatrix.setAttribute('type','matrix');
    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');
    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');
    feColorMatrix.setAttribute('result','f1');
    filter.appendChild(feColorMatrix);
    feColorMatrix = createNS('feColorMatrix');
    feColorMatrix.setAttribute('type','matrix');
    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');
    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');
    feColorMatrix.setAttribute('result','f2');
    filter.appendChild(feColorMatrix);
    this.matrixFilter = feColorMatrix;
    if(filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k){
        var feMerge = createNS('feMerge');
        filter.appendChild(feMerge);
        var feMergeNode;
        feMergeNode = createNS('feMergeNode');
        feMergeNode.setAttribute('in','SourceGraphic');
        feMerge.appendChild(feMergeNode);
        feMergeNode = createNS('feMergeNode');
        feMergeNode.setAttribute('in','f2');
        feMerge.appendChild(feMergeNode);
    }
}

SVGTintFilter.prototype.renderFrame = function(forceRender){
    if(forceRender || this.filterManager._mdf){
        var colorBlack = this.filterManager.effectElements[0].p.v;
        var colorWhite = this.filterManager.effectElements[1].p.v;
        var opacity = this.filterManager.effectElements[2].p.v/100;
        this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');
    }
};
function SVGFillFilter(filter, filterManager){
    this.filterManager = filterManager;
    var feColorMatrix = createNS('feColorMatrix');
    feColorMatrix.setAttribute('type','matrix');
    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');
    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');
    filter.appendChild(feColorMatrix);
    this.matrixFilter = feColorMatrix;
}
SVGFillFilter.prototype.renderFrame = function(forceRender){
    if(forceRender || this.filterManager._mdf){
        var color = this.filterManager.effectElements[2].p.v;
        var opacity = this.filterManager.effectElements[6].p.v;
        this.matrixFilter.setAttribute('values','0 0 0 0 '+color[0]+' 0 0 0 0 '+color[1]+' 0 0 0 0 '+color[2]+' 0 0 0 '+opacity+' 0');
    }
};
function SVGGaussianBlurEffect(filter, filterManager){
    // Outset the filter region by 100% on all sides to accommodate blur expansion.
    filter.setAttribute('x','-100%');
    filter.setAttribute('y','-100%');
    filter.setAttribute('width','300%');
    filter.setAttribute('height','300%');

    this.filterManager = filterManager;
    var feGaussianBlur = createNS('feGaussianBlur');
    filter.appendChild(feGaussianBlur);
    this.feGaussianBlur = feGaussianBlur;
}

SVGGaussianBlurEffect.prototype.renderFrame = function(forceRender){
    if(forceRender || this.filterManager._mdf){
        // Empirical value, matching AE's blur appearance.
        var kBlurrinessToSigma = 0.3;
        var sigma = this.filterManager.effectElements[0].p.v * kBlurrinessToSigma;

        // Dimensions mapping:
        //
        //   1 -> horizontal & vertical
        //   2 -> horizontal only
        //   3 -> vertical only
        //
        var dimensions = this.filterManager.effectElements[1].p.v;
        var sigmaX = (dimensions == 3) ? 0 : sigma;
        var sigmaY = (dimensions == 2) ? 0 : sigma;

        this.feGaussianBlur.setAttribute('stdDeviation', sigmaX + " " + sigmaY);

        // Repeat edges mapping:
        //
        //   0 -> off -> duplicate
        //   1 -> on  -> wrap
        var edgeMode = (this.filterManager.effectElements[2].p.v == 1) ? 'wrap' : 'duplicate';
        this.feGaussianBlur.setAttribute('edgeMode', edgeMode);
    }
}
function SVGStrokeEffect(elem, filterManager){
    this.initialized = false;
    this.filterManager = filterManager;
    this.elem = elem;
    this.paths = [];
}

SVGStrokeEffect.prototype.initialize = function(){

    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;
    var path,groupPath, i, len;
    if(this.filterManager.effectElements[1].p.v === 1){
        len = this.elem.maskManager.masksProperties.length;
        i = 0;
    } else {
        i = this.filterManager.effectElements[0].p.v - 1;
        len = i + 1;
    }
    groupPath = createNS('g'); 
    groupPath.setAttribute('fill','none');
    groupPath.setAttribute('stroke-linecap','round');
    groupPath.setAttribute('stroke-dashoffset',1);
    for(i;i<len;i+=1){
        path = createNS('path');
        groupPath.appendChild(path);
        this.paths.push({p:path,m:i});
    }
    if(this.filterManager.effectElements[10].p.v === 3){
        var mask = createNS('mask');
        var id = createElementID();
        mask.setAttribute('id',id);
        mask.setAttribute('mask-type','alpha');
        mask.appendChild(groupPath);
        this.elem.globalData.defs.appendChild(mask);
        var g = createNS('g');
        g.setAttribute('mask','url(' + locationHref + '#'+id+')');
        while (elemChildren[0]) {
            g.appendChild(elemChildren[0]);
        }
        this.elem.layerElement.appendChild(g);
        this.masker = mask;
        groupPath.setAttribute('stroke','#fff');
    } else if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){
        if(this.filterManager.effectElements[10].p.v === 2){
            elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;
            while(elemChildren.length){
                this.elem.layerElement.removeChild(elemChildren[0]);
            }
        }
        this.elem.layerElement.appendChild(groupPath);
        this.elem.layerElement.removeAttribute('mask');
        groupPath.setAttribute('stroke','#fff');
    }
    this.initialized = true;
    this.pathMasker = groupPath;
};

SVGStrokeEffect.prototype.renderFrame = function(forceRender){
    if(!this.initialized){
        this.initialize();
    }
    var i, len = this.paths.length;
    var mask, path;
    for(i=0;i<len;i+=1){
        if(this.paths[i].m === -1) {
            continue;
        }
        mask = this.elem.maskManager.viewData[this.paths[i].m];
        path = this.paths[i].p;
        if(forceRender || this.filterManager._mdf || mask.prop._mdf){
            path.setAttribute('d',mask.lastPath);
        }
        if(forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf){
            var dasharrayValue;
            if(this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100){
                var s = Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;
                var e = Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;
                var l = path.getTotalLength();
                dasharrayValue = '0 0 0 ' + l*s + ' ';
                var lineLength = l*(e-s);
                var segment = 1+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;
                var units = Math.floor(lineLength/segment);
                var j;
                for(j=0;j<units;j+=1){
                    dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100 + ' ';
                }
                dasharrayValue += '0 ' + l*10 + ' 0 0';
            } else {
                dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;
            }
            path.setAttribute('stroke-dasharray',dasharrayValue);
        }
    }
    if(forceRender || this.filterManager.effectElements[4].p._mdf){
        this.pathMasker.setAttribute('stroke-width',this.filterManager.effectElements[4].p.v*2);
    }
    
    if(forceRender || this.filterManager.effectElements[6].p._mdf){
        this.pathMasker.setAttribute('opacity',this.filterManager.effectElements[6].p.v);
    }
    if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){
        if(forceRender || this.filterManager.effectElements[3].p._mdf){
            var color = this.filterManager.effectElements[3].p.v;
            this.pathMasker.setAttribute('stroke','rgb('+bm_floor(color[0]*255)+','+bm_floor(color[1]*255)+','+bm_floor(color[2]*255)+')');
        }
    }
};
function SVGTritoneFilter(filter, filterManager){
    this.filterManager = filterManager;
    var feColorMatrix = createNS('feColorMatrix');
    feColorMatrix.setAttribute('type','matrix');
    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');
    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');
    feColorMatrix.setAttribute('result','f1');
    filter.appendChild(feColorMatrix);
    var feComponentTransfer = createNS('feComponentTransfer');
    feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');
    filter.appendChild(feComponentTransfer);
    this.matrixFilter = feComponentTransfer;
    var feFuncR = createNS('feFuncR');
    feFuncR.setAttribute('type','table');
    feComponentTransfer.appendChild(feFuncR);
    this.feFuncR = feFuncR;
    var feFuncG = createNS('feFuncG');
    feFuncG.setAttribute('type','table');
    feComponentTransfer.appendChild(feFuncG);
    this.feFuncG = feFuncG;
    var feFuncB = createNS('feFuncB');
    feFuncB.setAttribute('type','table');
    feComponentTransfer.appendChild(feFuncB);
    this.feFuncB = feFuncB;
}

SVGTritoneFilter.prototype.renderFrame = function(forceRender){
    if(forceRender || this.filterManager._mdf){
        var color1 = this.filterManager.effectElements[0].p.v;
        var color2 = this.filterManager.effectElements[1].p.v;
        var color3 = this.filterManager.effectElements[2].p.v;
        var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];
        var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];
        var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];
        this.feFuncR.setAttribute('tableValues', tableR);
        this.feFuncG.setAttribute('tableValues', tableG);
        this.feFuncB.setAttribute('tableValues', tableB);
        //var opacity = this.filterManager.effectElements[2].p.v/100;
        //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');
    }
};
function SVGProLevelsFilter(filter, filterManager){
    this.filterManager = filterManager;
    var effectElements = this.filterManager.effectElements;
    var feComponentTransfer = createNS('feComponentTransfer');
    var feFuncR, feFuncG, feFuncB;
    
    if(effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1){
        this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);
    }
    if(effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1){
        this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);
    }
    if(effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1){
        this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);
    }
    if(effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1){
        this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);
    }
    
    if(this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA){
        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');
        filter.appendChild(feComponentTransfer);
        feComponentTransfer = createNS('feComponentTransfer');
    }

    if(effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1){

        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');
        filter.appendChild(feComponentTransfer);
        this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);
        this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);
        this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);
    }
}

SVGProLevelsFilter.prototype.createFeFunc = function(type, feComponentTransfer) {
    var feFunc = createNS(type);
    feFunc.setAttribute('type','table');
    feComponentTransfer.appendChild(feFunc);
    return feFunc;
};

SVGProLevelsFilter.prototype.getTableValue = function(inputBlack, inputWhite, gamma, outputBlack, outputWhite) {
    var cnt = 0;
    var segments = 256;
    var perc;
    var min = Math.min(inputBlack, inputWhite);
    var max = Math.max(inputBlack, inputWhite);
    var table = Array.call(null,{length:segments});
    var colorValue;
    var pos = 0;
    var outputDelta = outputWhite - outputBlack; 
    var inputDelta = inputWhite - inputBlack; 
    while(cnt <= 256) {
        perc = cnt/256;
        if(perc <= min){
            colorValue = inputDelta < 0 ? outputWhite : outputBlack;
        } else if(perc >= max){
            colorValue = inputDelta < 0 ? outputBlack : outputWhite;
        } else {
            colorValue = (outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma));
        }
        table[pos++] = colorValue;
        cnt += 256/(segments-1);
    }
    return table.join(' ');
};

SVGProLevelsFilter.prototype.renderFrame = function(forceRender){
    if(forceRender || this.filterManager._mdf){
        var val, cnt, perc, bezier;
        var effectElements = this.filterManager.effectElements;
        if(this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)){
            val = this.getTableValue(effectElements[3].p.v,effectElements[4].p.v,effectElements[5].p.v,effectElements[6].p.v,effectElements[7].p.v);
            this.feFuncRComposed.setAttribute('tableValues',val);
            this.feFuncGComposed.setAttribute('tableValues',val);
            this.feFuncBComposed.setAttribute('tableValues',val);
        }


        if(this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)){
            val = this.getTableValue(effectElements[10].p.v,effectElements[11].p.v,effectElements[12].p.v,effectElements[13].p.v,effectElements[14].p.v);
            this.feFuncR.setAttribute('tableValues',val);
        }

        if(this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)){
            val = this.getTableValue(effectElements[17].p.v,effectElements[18].p.v,effectElements[19].p.v,effectElements[20].p.v,effectElements[21].p.v);
            this.feFuncG.setAttribute('tableValues',val);
        }

        if(this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)){
            val = this.getTableValue(effectElements[24].p.v,effectElements[25].p.v,effectElements[26].p.v,effectElements[27].p.v,effectElements[28].p.v);
            this.feFuncB.setAttribute('tableValues',val);
        }

        if(this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)){
            val = this.getTableValue(effectElements[31].p.v,effectElements[32].p.v,effectElements[33].p.v,effectElements[34].p.v,effectElements[35].p.v);
            this.feFuncA.setAttribute('tableValues',val);
        }
        
    }
};
function SVGDropShadowEffect(filter, filterManager) {
    var filterSize = filterManager.container.globalData.renderConfig.filterSize
    filter.setAttribute('x', filterSize.x);
    filter.setAttribute('y', filterSize.y);
    filter.setAttribute('width', filterSize.width);
    filter.setAttribute('height', filterSize.height);
    this.filterManager = filterManager;

    var feGaussianBlur = createNS('feGaussianBlur');
    feGaussianBlur.setAttribute('in','SourceAlpha');
    feGaussianBlur.setAttribute('result','drop_shadow_1');
    feGaussianBlur.setAttribute('stdDeviation','0');
    this.feGaussianBlur = feGaussianBlur;
    filter.appendChild(feGaussianBlur);

    var feOffset = createNS('feOffset');
    feOffset.setAttribute('dx','25');
    feOffset.setAttribute('dy','0');
    feOffset.setAttribute('in','drop_shadow_1');
    feOffset.setAttribute('result','drop_shadow_2');
    this.feOffset = feOffset;
    filter.appendChild(feOffset);
    var feFlood = createNS('feFlood');
    feFlood.setAttribute('flood-color','#00ff00');
    feFlood.setAttribute('flood-opacity','1');
    feFlood.setAttribute('result','drop_shadow_3');
    this.feFlood = feFlood;
    filter.appendChild(feFlood);

    var feComposite = createNS('feComposite');
    feComposite.setAttribute('in','drop_shadow_3');
    feComposite.setAttribute('in2','drop_shadow_2');
    feComposite.setAttribute('operator','in');
    feComposite.setAttribute('result','drop_shadow_4');
    filter.appendChild(feComposite);


    var feMerge = createNS('feMerge');
    filter.appendChild(feMerge);
    var feMergeNode;
    feMergeNode = createNS('feMergeNode');
    feMerge.appendChild(feMergeNode);
    feMergeNode = createNS('feMergeNode');
    feMergeNode.setAttribute('in','SourceGraphic');
    this.feMergeNode = feMergeNode;
    this.feMerge = feMerge;
    this.originalNodeAdded = false;
    feMerge.appendChild(feMergeNode);
}

SVGDropShadowEffect.prototype.renderFrame = function(forceRender){
    if(forceRender || this.filterManager._mdf){
        if(forceRender || this.filterManager.effectElements[4].p._mdf){
            this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);
        }
        if(forceRender || this.filterManager.effectElements[0].p._mdf){
            var col = this.filterManager.effectElements[0].p.v;
            this.feFlood.setAttribute('flood-color',rgbToHex(Math.round(col[0]*255),Math.round(col[1]*255),Math.round(col[2]*255)));
        }
        if(forceRender || this.filterManager.effectElements[1].p._mdf){
            this.feFlood.setAttribute('flood-opacity',this.filterManager.effectElements[1].p.v/255);
        }
        if(forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf){
            var distance = this.filterManager.effectElements[3].p.v;
            var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;
            var x = distance * Math.cos(angle);
            var y = distance * Math.sin(angle);
            this.feOffset.setAttribute('dx', x);
            this.feOffset.setAttribute('dy', y);
        }
        /*if(forceRender || this.filterManager.effectElements[5].p._mdf){
            if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {
                this.feMerge.removeChild(this.feMergeNode);
                this.originalNodeAdded = false;
            } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {
                this.feMerge.appendChild(this.feMergeNode);
                this.originalNodeAdded = true;
            }
        }*/
    }
};
var _svgMatteSymbols = [];

function SVGMatte3Effect(filterElem, filterManager, elem){
    this.initialized = false;
    this.filterManager = filterManager;
    this.filterElem = filterElem;
    this.elem = elem;
    elem.matteElement = createNS('g');
    elem.matteElement.appendChild(elem.layerElement);
    elem.matteElement.appendChild(elem.transformedElement);
    elem.baseElement = elem.matteElement;
}

SVGMatte3Effect.prototype.findSymbol = function(mask) {
    var i = 0, len = _svgMatteSymbols.length;
    while(i < len) {
        if(_svgMatteSymbols[i] === mask) {
            return _svgMatteSymbols[i];
        }
        i += 1;
    }
    return null;
};

SVGMatte3Effect.prototype.replaceInParent = function(mask, symbolId) {
    var parentNode = mask.layerElement.parentNode;
    if(!parentNode) {
        return;
    }
    var children = parentNode.children;
    var i = 0, len = children.length;
    while (i < len) {
        if (children[i] === mask.layerElement) {
            break;
        }
        i += 1;
    }
    var nextChild;
    if (i <= len - 2) {
        nextChild = children[i + 1];
    }
    var useElem = createNS('use');
    useElem.setAttribute('href', '#' + symbolId);
    if(nextChild) {
        parentNode.insertBefore(useElem, nextChild);
    } else {
        parentNode.appendChild(useElem);
    }
};

SVGMatte3Effect.prototype.setElementAsMask = function(elem, mask) {
    if(!this.findSymbol(mask)) {
        var symbolId = createElementID();
        var masker = createNS('mask');
        masker.setAttribute('id', mask.layerId);
        masker.setAttribute('mask-type', 'alpha');
        _svgMatteSymbols.push(mask);
        var defs = elem.globalData.defs;
        defs.appendChild(masker);
        var symbol = createNS('symbol');
        symbol.setAttribute('id', symbolId);
        this.replaceInParent(mask, symbolId);
        symbol.appendChild(mask.layerElement);
        defs.appendChild(symbol);
        var useElem = createNS('use');
        useElem.setAttribute('href', '#' + symbolId);
        masker.appendChild(useElem);
        mask.data.hd = false;
        mask.show();
    }
    elem.setMatte(mask.layerId);
};

SVGMatte3Effect.prototype.initialize = function() {
    var ind = this.filterManager.effectElements[0].p.v;
    var elements = this.elem.comp.elements;
    var i = 0, len = elements.length;
    while (i < len) {
    	if (elements[i] && elements[i].data.ind === ind) {
    		this.setElementAsMask(this.elem, elements[i]);
    	}
    	i += 1;
    }
    this.initialized = true;
};

SVGMatte3Effect.prototype.renderFrame = function() {
	if(!this.initialized) {
		this.initialize();
	}
};
function SVGEffects(elem){
    var i, len = elem.data.ef ? elem.data.ef.length : 0;
    var filId = createElementID();
    var fil = filtersFactory.createFilter(filId);
    var count = 0;
    this.filters = [];
    var filterManager;
    for(i=0;i<len;i+=1){
        filterManager = null;
        if(elem.data.ef[i].ty === 20){
            count += 1;
            filterManager = new SVGTintFilter(fil, elem.effectsManager.effectElements[i]);
        }else if(elem.data.ef[i].ty === 21){
            count += 1;
            filterManager = new SVGFillFilter(fil, elem.effectsManager.effectElements[i]);
        }else if(elem.data.ef[i].ty === 22){
            filterManager = new SVGStrokeEffect(elem, elem.effectsManager.effectElements[i]);
        }else if(elem.data.ef[i].ty === 23){
            count += 1;
            filterManager = new SVGTritoneFilter(fil, elem.effectsManager.effectElements[i]);
        }else if(elem.data.ef[i].ty === 24){
            count += 1;
            filterManager = new SVGProLevelsFilter(fil, elem.effectsManager.effectElements[i]);
        }else if(elem.data.ef[i].ty === 25){
            count += 1;
            filterManager = new SVGDropShadowEffect(fil, elem.effectsManager.effectElements[i]);
        }else if(elem.data.ef[i].ty === 28){
            //count += 1;
            filterManager = new SVGMatte3Effect(fil, elem.effectsManager.effectElements[i], elem);
        }else if(elem.data.ef[i].ty === 29){
            count += 1;
            filterManager = new SVGGaussianBlurEffect(fil, elem.effectsManager.effectElements[i]);
        }
        if(filterManager) {
            this.filters.push(filterManager);
        }
    }
    if(count){
        elem.globalData.defs.appendChild(fil);
        elem.layerElement.setAttribute('filter','url(' + locationHref + '#'+filId+')');
    }
    if (this.filters.length) {
        elem.addRenderableComponent(this);
    }
}

SVGEffects.prototype.renderFrame = function(_isFirstFrame){
    var i, len = this.filters.length;
    for(i=0;i<len;i+=1){
        this.filters[i].renderFrame(_isFirstFrame);
    }
};
function CVContextData() {
	this.saved = [];
    this.cArrPos = 0;
    this.cTr = new Matrix();
    this.cO = 1;
    var i, len = 15;
    this.savedOp = createTypedArray('float32', len);
    for(i=0;i<len;i+=1){
        this.saved[i] = createTypedArray('float32', 16);
    }
    this._length = len;
}

CVContextData.prototype.duplicate = function() {
	var newLength = this._length * 2;
	var currentSavedOp = this.savedOp;
    this.savedOp = createTypedArray('float32', newLength);
    this.savedOp.set(currentSavedOp);
    var i = 0;
    for(i = this._length; i < newLength; i += 1) {
        this.saved[i] = createTypedArray('float32', 16);
    }
    this._length = newLength;
};

CVContextData.prototype.reset = function() {
	this.cArrPos = 0;
	this.cTr.reset();
    this.cO = 1;
};
function CVBaseElement(){
}

CVBaseElement.prototype = {
    createElements: function(){},
    initRendererElement: function(){},
    createContainerElements: function(){
        this.canvasContext = this.globalData.canvasContext;
        this.renderableEffectsManager = new CVEffects(this);
    },
    createContent: function(){},
    setBlendMode: function(){
        var globalData = this.globalData;
        if(globalData.blendMode !== this.data.bm) {
            globalData.blendMode = this.data.bm;
            var blendModeValue = getBlendMode(this.data.bm);
            globalData.canvasContext.globalCompositeOperation = blendModeValue;
        }
    },
    createRenderableComponents: function(){
        this.maskManager = new CVMaskElement(this.data, this);
    },
    hideElement: function(){
        if (!this.hidden && (!this.isInRange || this.isTransparent)) {
            this.hidden = true;
        }
    },
    showElement: function(){
        if (this.isInRange && !this.isTransparent){
            this.hidden = false;
            this._isFirstFrame = true;
            this.maskManager._isFirstFrame = true;
        }
    },
    renderFrame: function() {
        if (this.hidden || this.data.hd) {
            return;
        }
        this.renderTransform();
        this.renderRenderable();
        this.setBlendMode();
        var forceRealStack = this.data.ty === 0;
        this.globalData.renderer.save(forceRealStack);
        this.globalData.renderer.ctxTransform(this.finalTransform.mat.props);
        this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v);
        this.renderInnerContent();
        this.globalData.renderer.restore(forceRealStack);
        if(this.maskManager.hasMasks) {
            this.globalData.renderer.restore(true);
        }
        if (this._isFirstFrame) {
            this._isFirstFrame = false;
        }
    },
    destroy: function(){
        this.canvasContext = null;
        this.data = null;
        this.globalData = null;
        this.maskManager.destroy();
    },
    mHelper: new Matrix()
};
CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement;
CVBaseElement.prototype.show = CVBaseElement.prototype.showElement;

function CVImageElement(data, globalData, comp){
    this.assetData = globalData.getAssetData(data.refId);
    this.img = globalData.imageLoader.getImage(this.assetData);
    this.initElement(data,globalData,comp);
}
extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement);

CVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement;
CVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;

CVImageElement.prototype.createContent = function(){

    if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {
        var canvas = createTag('canvas');
        canvas.width = this.assetData.w;
        canvas.height = this.assetData.h;
        var ctx = canvas.getContext('2d');

        var imgW = this.img.width;
        var imgH = this.img.height;
        var imgRel = imgW / imgH;
        var canvasRel = this.assetData.w/this.assetData.h;
        var widthCrop, heightCrop;
        var par = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;
        if((imgRel > canvasRel && par === 'xMidYMid slice') || (imgRel < canvasRel && par !== 'xMidYMid slice')) {
            heightCrop = imgH;
            widthCrop = heightCrop*canvasRel;
        } else {
            widthCrop = imgW;
            heightCrop = widthCrop/canvasRel;
        }
        ctx.drawImage(this.img,(imgW-widthCrop)/2,(imgH-heightCrop)/2,widthCrop,heightCrop,0,0,this.assetData.w,this.assetData.h);
        this.img = canvas;
    }

};

CVImageElement.prototype.renderInnerContent = function(parentMatrix){
    this.canvasContext.drawImage(this.img, 0, 0);
};

CVImageElement.prototype.destroy = function(){
    this.img = null;
};
function CVCompElement(data, globalData, comp) {
    this.completeLayers = false;
    this.layers = data.layers;
    this.pendingElements = [];
    this.elements = createSizedArray(this.layers.length);
    this.initElement(data, globalData, comp);
    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate, this) : {_placeholder:true};
}

extendPrototype([CanvasRenderer, ICompElement, CVBaseElement], CVCompElement);

CVCompElement.prototype.renderInnerContent = function() {
    var ctx = this.canvasContext;
    ctx.beginPath();
    ctx.moveTo(0, 0);
    ctx.lineTo(this.data.w, 0);
    ctx.lineTo(this.data.w, this.data.h);
    ctx.lineTo(0, this.data.h);
    ctx.lineTo(0, 0);
    ctx.clip();
    var i,len = this.layers.length;
    for( i = len - 1; i >= 0; i -= 1 ){
        if(this.completeLayers || this.elements[i]){
            this.elements[i].renderFrame();
        }
    }
};

CVCompElement.prototype.destroy = function(){
    var i,len = this.layers.length;
    for( i = len - 1; i >= 0; i -= 1 ){
        if(this.elements[i]) {
            this.elements[i].destroy();
        }
    }
    this.layers = null;
    this.elements = null;
};

function CVMaskElement(data,element){
    this.data = data;
    this.element = element;
    this.masksProperties = this.data.masksProperties || [];
    this.viewData = createSizedArray(this.masksProperties.length);
    var i, len = this.masksProperties.length, hasMasks = false;
    for (i = 0; i < len; i++) {
        if(this.masksProperties[i].mode !== 'n'){
            hasMasks = true;
        }
        this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element,this.masksProperties[i],3);
    }
    this.hasMasks = hasMasks;
    if(hasMasks) {
        this.element.addRenderableComponent(this);
    }
}

CVMaskElement.prototype.renderFrame = function () {
    if(!this.hasMasks){
        return;
    }
    var transform = this.element.finalTransform.mat;
    var ctx = this.element.canvasContext;
    var i, len = this.masksProperties.length;
    var pt,pts,data;
    ctx.beginPath();
    for (i = 0; i < len; i++) {
        if(this.masksProperties[i].mode !== 'n'){
            if (this.masksProperties[i].inv) {
                ctx.moveTo(0, 0);
                ctx.lineTo(this.element.globalData.compSize.w, 0);
                ctx.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h);
                ctx.lineTo(0, this.element.globalData.compSize.h);
                ctx.lineTo(0, 0);
            }
            data = this.viewData[i].v;
            pt = transform.applyToPointArray(data.v[0][0],data.v[0][1],0);
            ctx.moveTo(pt[0], pt[1]);
            var j, jLen = data._length;
            for (j = 1; j < jLen; j++) {
                pts = transform.applyToTriplePoints(data.o[j - 1], data.i[j], data.v[j]);
                ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);
            }
            pts = transform.applyToTriplePoints(data.o[j - 1], data.i[0], data.v[0]);
            ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);
        }
    }
    this.element.globalData.renderer.save(true);
    ctx.clip();
};

CVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty;

CVMaskElement.prototype.destroy = function(){
    this.element = null;
};
function CVShapeElement(data, globalData, comp) {
    this.shapes = [];
    this.shapesData = data.shapes;
    this.stylesList = [];
    this.itemsData = [];
    this.prevViewData = [];
    this.shapeModifiers = [];
    this.processedElements = [];
    this.transformsManager = new ShapeTransformManager();
    this.initElement(data, globalData, comp);
}

extendPrototype([BaseElement,TransformElement,CVBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableElement], CVShapeElement);

CVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement;

CVShapeElement.prototype.transformHelper = {opacity:1,_opMdf:false};

CVShapeElement.prototype.dashResetter = [];

CVShapeElement.prototype.createContent = function(){
    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData, true, []);
};

CVShapeElement.prototype.createStyleElement = function(data, transforms) {
    var styleElem = {
        data: data,
        type: data.ty,
        preTransforms: this.transformsManager.addTransformSequence(transforms),
        transforms: [],
        elements: [],
        closed: data.hd === true
    };
    var elementData = {};
    if(data.ty == 'fl' || data.ty == 'st'){
        elementData.c = PropertyFactory.getProp(this,data.c,1,255,this);
        if(!elementData.c.k){
            styleElem.co = 'rgb('+bm_floor(elementData.c.v[0])+','+bm_floor(elementData.c.v[1])+','+bm_floor(elementData.c.v[2])+')';
        }
    } else if (data.ty === 'gf' || data.ty === 'gs') {
        elementData.s = PropertyFactory.getProp(this,data.s,1,null,this);
        elementData.e = PropertyFactory.getProp(this,data.e,1,null,this);
        elementData.h = PropertyFactory.getProp(this,data.h||{k:0},0,0.01,this);
        elementData.a = PropertyFactory.getProp(this,data.a||{k:0},0,degToRads,this);
        elementData.g = new GradientProperty(this,data.g,this);
    }
    elementData.o = PropertyFactory.getProp(this,data.o,0,0.01,this);
    if(data.ty == 'st' || data.ty == 'gs') {
        styleElem.lc = this.lcEnum[data.lc] || 'round';
        styleElem.lj = this.ljEnum[data.lj] || 'round';
        if(data.lj == 1) {
            styleElem.ml = data.ml;
        }
        elementData.w = PropertyFactory.getProp(this,data.w,0,null,this);
        if(!elementData.w.k){
            styleElem.wi = elementData.w.v;
        }
        if(data.d){
            var d = new DashProperty(this,data.d,'canvas', this);
            elementData.d = d;
            if(!elementData.d.k){
                styleElem.da = elementData.d.dashArray;
                styleElem.do = elementData.d.dashoffset[0];
            }
        }
    } else {
        styleElem.r = data.r === 2 ? 'evenodd' : 'nonzero';
    }
    this.stylesList.push(styleElem);
    elementData.style = styleElem;
    return elementData;
};

CVShapeElement.prototype.createGroupElement = function(data) {
    var elementData = {
        it: [],
        prevViewData: []
    };
    return elementData;
};

CVShapeElement.prototype.createTransformElement = function(data) {
    var elementData = {
        transform : {
            opacity: 1,
            _opMdf:false,
            key: this.transformsManager.getNewKey(),
            op: PropertyFactory.getProp(this,data.o,0,0.01,this),
            mProps: TransformPropertyFactory.getTransformProperty(this,data,this)
        }
    };
    return elementData;
};

CVShapeElement.prototype.createShapeElement = function(data) {
    var elementData = new CVShapeData(this, data, this.stylesList, this.transformsManager);
    
    this.shapes.push(elementData);
    this.addShapeToModifiers(elementData);
    return elementData;
};

CVShapeElement.prototype.reloadShapes = function() {
    this._isFirstFrame = true;
    var i, len = this.itemsData.length;
    for (i = 0; i < len; i += 1) {
        this.prevViewData[i] = this.itemsData[i];
    }
    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData, true, []);
    len = this.dynamicProperties.length;
    for (i = 0; i < len; i += 1) {
        this.dynamicProperties[i].getValue();
    }
    this.renderModifiers();
    this.transformsManager.processSequences(this._isFirstFrame);
};

CVShapeElement.prototype.addTransformToStyleList = function(transform) {
    var i, len = this.stylesList.length;
    for (i = 0; i < len; i += 1) {
        if(!this.stylesList[i].closed) {
            this.stylesList[i].transforms.push(transform);
        }
    }
}

CVShapeElement.prototype.removeTransformFromStyleList = function() {
    var i, len = this.stylesList.length;
    for (i = 0; i < len; i += 1) {
        if(!this.stylesList[i].closed) {
            this.stylesList[i].transforms.pop();
        }
    }
}

CVShapeElement.prototype.closeStyles = function(styles) {
    var i, len = styles.length, j, jLen;
    for (i = 0; i < len; i += 1) {
        styles[i].closed = true;
    }
}

CVShapeElement.prototype.searchShapes = function(arr,itemsData, prevViewData, shouldRender, transforms){
    var i, len = arr.length - 1;
    var j, jLen;
    var ownStyles = [], ownModifiers = [], processedPos, modifier, currentTransform;
    var ownTransforms = [].concat(transforms);
    for(i=len;i>=0;i-=1){
        processedPos = this.searchProcessedElement(arr[i]);
        if(!processedPos){
            arr[i]._shouldRender = shouldRender;
        } else {
            itemsData[i] = prevViewData[processedPos - 1];
        }
        if(arr[i].ty == 'fl' || arr[i].ty == 'st'|| arr[i].ty == 'gf'|| arr[i].ty == 'gs'){
            if(!processedPos){
                itemsData[i] = this.createStyleElement(arr[i], ownTransforms);
            } else {
                itemsData[i].style.closed = false;
            }
            
            ownStyles.push(itemsData[i].style);
        }else if(arr[i].ty == 'gr'){
            if(!processedPos){
                itemsData[i] = this.createGroupElement(arr[i]);
            } else {
                jLen = itemsData[i].it.length;
                for(j=0;j<jLen;j+=1){
                    itemsData[i].prevViewData[j] = itemsData[i].it[j];
                }
            }
            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData, shouldRender, ownTransforms);
        }else if(arr[i].ty == 'tr'){
            if(!processedPos){
                currentTransform = this.createTransformElement(arr[i]);
                itemsData[i] = currentTransform;
            }
            ownTransforms.push(itemsData[i]);
            this.addTransformToStyleList(itemsData[i]);
        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){
            if(!processedPos){
                itemsData[i] = this.createShapeElement(arr[i]);
            }
            
        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'pb'){
            if(!processedPos){
                modifier = ShapeModifiers.getModifier(arr[i].ty);
                modifier.init(this,arr[i]);
                itemsData[i] = modifier;
                this.shapeModifiers.push(modifier);
            } else {
                modifier = itemsData[i];
                modifier.closed = false;
            }
            ownModifiers.push(modifier);
        } else if(arr[i].ty == 'rp'){
            if(!processedPos){
                modifier = ShapeModifiers.getModifier(arr[i].ty);
                itemsData[i] = modifier;
                modifier.init(this,arr,i,itemsData);
                this.shapeModifiers.push(modifier);
                shouldRender = false;
            }else{
                modifier = itemsData[i];
                modifier.closed = true;
            }
            ownModifiers.push(modifier);
        }
        this.addProcessedElement(arr[i], i + 1);
    }
    this.removeTransformFromStyleList();
    this.closeStyles(ownStyles);
    len = ownModifiers.length;
    for(i=0;i<len;i+=1){
        ownModifiers[i].closed = true;
    }
};

CVShapeElement.prototype.renderInnerContent = function() {
    this.transformHelper.opacity = 1;
    this.transformHelper._opMdf = false;
    this.renderModifiers();
    this.transformsManager.processSequences(this._isFirstFrame);
    this.renderShape(this.transformHelper,this.shapesData,this.itemsData,true);
};

CVShapeElement.prototype.renderShapeTransform = function(parentTransform, groupTransform) {
    var props, groupMatrix;
    if(parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {
        groupTransform.opacity = parentTransform.opacity;
        groupTransform.opacity *= groupTransform.op.v;
        groupTransform._opMdf = true;
    }
};

CVShapeElement.prototype.drawLayer = function() {
    var i, len = this.stylesList.length;
    var j, jLen, k, kLen,elems,nodes, renderer = this.globalData.renderer, ctx = this.globalData.canvasContext, type, currentStyle;
    for(i=0;i<len;i+=1){
        currentStyle = this.stylesList[i];
        type = currentStyle.type;

        //Skipping style when
        //Stroke width equals 0
        //style should not be rendered (extra unused repeaters)
        //current opacity equals 0
        //global opacity equals 0
        if(((type === 'st' || type === 'gs') && currentStyle.wi === 0) || !currentStyle.data._shouldRender || currentStyle.coOp === 0 || this.globalData.currentGlobalAlpha === 0){
            continue;
        }
        renderer.save();
        elems = currentStyle.elements;
        if(type === 'st' || type === 'gs'){
            ctx.strokeStyle = type === 'st' ? currentStyle.co : currentStyle.grd;
            ctx.lineWidth = currentStyle.wi;
            ctx.lineCap = currentStyle.lc;
            ctx.lineJoin = currentStyle.lj;
            ctx.miterLimit = currentStyle.ml || 0;
        } else {
            ctx.fillStyle = type === 'fl' ? currentStyle.co : currentStyle.grd;
        }
        renderer.ctxOpacity(currentStyle.coOp);
        if(type !== 'st' && type !== 'gs'){
            ctx.beginPath();
        }
        renderer.ctxTransform(currentStyle.preTransforms.finalTransform.props);
        jLen = elems.length;
        for(j=0;j<jLen;j+=1){
            if(type === 'st' || type === 'gs'){
                ctx.beginPath();
                if(currentStyle.da){
                    ctx.setLineDash(currentStyle.da);
                    ctx.lineDashOffset = currentStyle.do;
                }
            }
            nodes = elems[j].trNodes;
            kLen = nodes.length;

            for(k=0;k<kLen;k+=1){
                if(nodes[k].t == 'm'){
                    ctx.moveTo(nodes[k].p[0],nodes[k].p[1]);
                }else if(nodes[k].t == 'c'){
                    ctx.bezierCurveTo(nodes[k].pts[0],nodes[k].pts[1],nodes[k].pts[2],nodes[k].pts[3],nodes[k].pts[4],nodes[k].pts[5]);
                }else{
                    ctx.closePath();
                }
            }
            if(type === 'st' || type === 'gs'){
                ctx.stroke();
                if(currentStyle.da){
                    ctx.setLineDash(this.dashResetter);
                }
            }
        }
        if(type !== 'st' && type !== 'gs'){
            ctx.fill(currentStyle.r);
        }
        renderer.restore();
    }
};

CVShapeElement.prototype.renderShape = function(parentTransform,items,data,isMain){
    var i, len = items.length - 1;
    var groupTransform;
    groupTransform = parentTransform;
    for(i=len;i>=0;i-=1){
        if(items[i].ty == 'tr'){
            groupTransform = data[i].transform;
            this.renderShapeTransform(parentTransform, groupTransform);
        }else if(items[i].ty == 'sh' || items[i].ty == 'el' || items[i].ty == 'rc' || items[i].ty == 'sr'){
            this.renderPath(items[i],data[i]);
        }else if(items[i].ty == 'fl'){
            this.renderFill(items[i],data[i],groupTransform);
        }else if(items[i].ty == 'st'){
            this.renderStroke(items[i],data[i],groupTransform);
        }else if(items[i].ty == 'gf' || items[i].ty == 'gs'){
            this.renderGradientFill(items[i],data[i],groupTransform);
        }else if(items[i].ty == 'gr'){
            this.renderShape(groupTransform,items[i].it,data[i].it);
        }else if(items[i].ty == 'tm'){
            //
        }
    }
    if(isMain){
        this.drawLayer();
    }
    
};

CVShapeElement.prototype.renderStyledShape = function(styledShape, shape){
    if(this._isFirstFrame || shape._mdf || styledShape.transforms._mdf) {
        var shapeNodes = styledShape.trNodes;
        var paths = shape.paths;
        var i, len, j, jLen = paths._length;
        shapeNodes.length = 0;
        var groupTransformMat = styledShape.transforms.finalTransform;
        for (j = 0; j < jLen; j += 1) {
            var pathNodes = paths.shapes[j];
            if(pathNodes && pathNodes.v){
                len = pathNodes._length;
                for (i = 1; i < len; i += 1) {
                    if (i === 1) {
                        shapeNodes.push({
                            t: 'm',
                            p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)
                        });
                    }
                    shapeNodes.push({
                        t: 'c',
                        pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[i], pathNodes.v[i])
                    });
                }
                if (len === 1) {
                    shapeNodes.push({
                        t: 'm',
                        p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)
                    });
                }
                if (pathNodes.c && len) {
                    shapeNodes.push({
                        t: 'c',
                        pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[0], pathNodes.v[0])
                    });
                    shapeNodes.push({
                        t: 'z'
                    });
                }
            }
        }
        styledShape.trNodes = shapeNodes;
    }
}

CVShapeElement.prototype.renderPath = function(pathData,itemData){
    if(pathData.hd !== true && pathData._shouldRender) {
        var i, len = itemData.styledShapes.length;
        for (i = 0; i < len; i += 1) {
            this.renderStyledShape(itemData.styledShapes[i], itemData.sh);
        }
    }
};

CVShapeElement.prototype.renderFill = function(styleData,itemData, groupTransform){
    var styleElem = itemData.style;

    if (itemData.c._mdf || this._isFirstFrame) {
        styleElem.co = 'rgb(' 
        + bm_floor(itemData.c.v[0]) + ',' 
        + bm_floor(itemData.c.v[1]) + ',' 
        + bm_floor(itemData.c.v[2]) + ')';
    }
    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {
        styleElem.coOp = itemData.o.v * groupTransform.opacity;
    }
};

CVShapeElement.prototype.renderGradientFill = function(styleData,itemData, groupTransform){
    var styleElem = itemData.style;
    if(!styleElem.grd || itemData.g._mdf || itemData.s._mdf || itemData.e._mdf || (styleData.t !== 1 && (itemData.h._mdf || itemData.a._mdf))) {
        var ctx = this.globalData.canvasContext;
        var grd;
        var pt1 = itemData.s.v, pt2 = itemData.e.v;
        if (styleData.t === 1) {
            grd = ctx.createLinearGradient(pt1[0], pt1[1], pt2[0], pt2[1]);
        } else {
            var rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));
            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);

            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99: itemData.h.v;
            var dist = rad * percent;
            var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];
            var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];
            var grd = ctx.createRadialGradient(x, y, 0, pt1[0], pt1[1], rad);
        }

        var i, len = styleData.g.p;
        var cValues = itemData.g.c;
        var opacity = 1;

        for (i = 0; i < len; i += 1){
            if(itemData.g._hasOpacity && itemData.g._collapsable) {
                opacity = itemData.g.o[i*2 + 1];
            }
            grd.addColorStop(cValues[i * 4] / 100,'rgba('+ cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ','+cValues[i * 4 + 3] + ',' + opacity + ')');
        }
        styleElem.grd = grd;
    }
    styleElem.coOp = itemData.o.v*groupTransform.opacity;
    
};

CVShapeElement.prototype.renderStroke = function(styleData,itemData, groupTransform){
    var styleElem = itemData.style;
    var d = itemData.d;
    if(d && (d._mdf  || this._isFirstFrame)){
        styleElem.da = d.dashArray;
        styleElem.do = d.dashoffset[0];
    }
    if(itemData.c._mdf || this._isFirstFrame){
        styleElem.co = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';
    }
    if(itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame){
        styleElem.coOp = itemData.o.v*groupTransform.opacity;
    }
    if(itemData.w._mdf || this._isFirstFrame){
        styleElem.wi = itemData.w.v;
    }
};


CVShapeElement.prototype.destroy = function(){
    this.shapesData = null;
    this.globalData = null;
    this.canvasContext = null;
    this.stylesList.length = 0;
    this.itemsData.length = 0;
};


function CVSolidElement(data, globalData, comp) {
    this.initElement(data,globalData,comp);
}
extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement);

CVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement;
CVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;

CVSolidElement.prototype.renderInnerContent = function() {
    var ctx = this.canvasContext;
    ctx.fillStyle = this.data.sc;
    ctx.fillRect(0, 0, this.data.sw, this.data.sh);
    //
};
function CVTextElement(data, globalData, comp){
    this.textSpans = [];
    this.yOffset = 0;
    this.fillColorAnim = false;
    this.strokeColorAnim = false;
    this.strokeWidthAnim = false;
    this.stroke = false;
    this.fill = false;
    this.justifyOffset = 0;
    this.currentRender = null;
    this.renderType = 'canvas';
    this.values = {
        fill: 'rgba(0,0,0,0)',
        stroke: 'rgba(0,0,0,0)',
        sWidth: 0,
        fValue: ''
    };
    this.initElement(data,globalData,comp);
}
extendPrototype([BaseElement,TransformElement,CVBaseElement,HierarchyElement,FrameElement,RenderableElement,ITextElement], CVTextElement);

CVTextElement.prototype.tHelper = createTag('canvas').getContext('2d');

CVTextElement.prototype.buildNewText = function(){
    var documentData = this.textProperty.currentData;
    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);

    var hasFill = false;
    if(documentData.fc) {
        hasFill = true;
        this.values.fill = this.buildColor(documentData.fc);
    }else{
        this.values.fill = 'rgba(0,0,0,0)';
    }
    this.fill = hasFill;
    var hasStroke = false;
    if(documentData.sc){
        hasStroke = true;
        this.values.stroke = this.buildColor(documentData.sc);
        this.values.sWidth = documentData.sw;
    }
    var fontData = this.globalData.fontManager.getFontByName(documentData.f);
    var i, len;
    var letters = documentData.l;
    var matrixHelper = this.mHelper;
    this.stroke = hasStroke;
    this.values.fValue = documentData.finalSize + 'px '+ this.globalData.fontManager.getFontByName(documentData.f).fFamily;
    len = documentData.finalText.length;
    //this.tHelper.font = this.values.fValue;
    var charData, shapeData, k, kLen, shapes, j, jLen, pathNodes, commands, pathArr, singleShape = this.data.singleShape;
    var trackingOffset = documentData.tr/1000*documentData.finalSize;
    var xPos = 0, yPos = 0, firstLine = true;
    var cnt = 0;
    for (i = 0; i < len; i += 1) {
        charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);
        shapeData = charData && charData.data || {};
        matrixHelper.reset();
        if(singleShape && letters[i].n) {
            xPos = -trackingOffset;
            yPos += documentData.yOffset;
            yPos += firstLine ? 1 : 0;
            firstLine = false;
        }

        shapes = shapeData.shapes ? shapeData.shapes[0].it : [];
        jLen = shapes.length;
        matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);
        if(singleShape){
            this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);
        }
        commands = createSizedArray(jLen);
        for(j=0;j<jLen;j+=1){
            kLen = shapes[j].ks.k.i.length;
            pathNodes = shapes[j].ks.k;
            pathArr = [];
            for(k=1;k<kLen;k+=1){
                if(k==1){
                    pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));
                }
                pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToY(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToX(pathNodes.v[k][0],pathNodes.v[k][1],0),matrixHelper.applyToY(pathNodes.v[k][0],pathNodes.v[k][1],0));
            }
            pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToY(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));
            commands[j] = pathArr;
        }
        if(singleShape){
            xPos += letters[i].l;
            xPos += trackingOffset;
        }
        if(this.textSpans[cnt]){
            this.textSpans[cnt].elem = commands;
        } else {
            this.textSpans[cnt] = {elem: commands};
        }
        cnt +=1;
    }
};

CVTextElement.prototype.renderInnerContent = function(){
    var ctx = this.canvasContext;
    var finalMat = this.finalTransform.mat.props;
    ctx.font = this.values.fValue;
    ctx.lineCap = 'butt';
    ctx.lineJoin = 'miter';
    ctx.miterLimit = 4;

    if(!this.data.singleShape){
        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);
    }

    var  i,len, j, jLen, k, kLen;
    var renderedLetters = this.textAnimator.renderedLetters;

    var letters = this.textProperty.currentData.l;

    len = letters.length;
    var renderedLetter;
    var lastFill = null, lastStroke = null, lastStrokeW = null, commands, pathArr;
    for(i=0;i<len;i+=1){
        if(letters[i].n){
            continue;
        }
        renderedLetter = renderedLetters[i];
        if(renderedLetter){
            this.globalData.renderer.save();
            this.globalData.renderer.ctxTransform(renderedLetter.p);
            this.globalData.renderer.ctxOpacity(renderedLetter.o);
        }
        if(this.fill){
            if(renderedLetter && renderedLetter.fc){
                if(lastFill !== renderedLetter.fc){
                    lastFill = renderedLetter.fc;
                    ctx.fillStyle = renderedLetter.fc;
                }
            }else if(lastFill !== this.values.fill){
                lastFill = this.values.fill;
                ctx.fillStyle = this.values.fill;
            }
            commands = this.textSpans[i].elem;
            jLen = commands.length;
            this.globalData.canvasContext.beginPath();
            for(j=0;j<jLen;j+=1) {
                pathArr = commands[j];
                kLen = pathArr.length;
                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);
                for (k = 2; k < kLen; k += 6) {
                    this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);
                }
            }
            this.globalData.canvasContext.closePath();
            this.globalData.canvasContext.fill();
            ///ctx.fillText(this.textSpans[i].val,0,0);
        }
        if(this.stroke){
            if(renderedLetter && renderedLetter.sw){
                if(lastStrokeW !== renderedLetter.sw){
                    lastStrokeW = renderedLetter.sw;
                    ctx.lineWidth = renderedLetter.sw;
                }
            }else if(lastStrokeW !== this.values.sWidth){
                lastStrokeW = this.values.sWidth;
                ctx.lineWidth = this.values.sWidth;
            }
            if(renderedLetter && renderedLetter.sc){
                if(lastStroke !== renderedLetter.sc){
                    lastStroke = renderedLetter.sc;
                    ctx.strokeStyle = renderedLetter.sc;
                }
            }else if(lastStroke !== this.values.stroke){
                lastStroke = this.values.stroke;
                ctx.strokeStyle = this.values.stroke;
            }
            commands = this.textSpans[i].elem;
            jLen = commands.length;
            this.globalData.canvasContext.beginPath();
            for(j=0;j<jLen;j+=1) {
                pathArr = commands[j];
                kLen = pathArr.length;
                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);
                for (k = 2; k < kLen; k += 6) {
                    this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);
                }
            }
            this.globalData.canvasContext.closePath();
            this.globalData.canvasContext.stroke();
            ///ctx.strokeText(letters[i].val,0,0);
        }
        if(renderedLetter) {
            this.globalData.renderer.restore();
        }
    }
};
function CVEffects() {

}
CVEffects.prototype.renderFrame = function(){};
function HBaseElement(data,globalData,comp){}
HBaseElement.prototype = {
    checkBlendMode: function(){},
    initRendererElement: function(){
        this.baseElement = createTag(this.data.tg || 'div');
        if(this.data.hasMask) {
            this.svgElement = createNS('svg');
            this.layerElement = createNS('g');
            this.maskedElement = this.layerElement;
            this.svgElement.appendChild(this.layerElement);
            this.baseElement.appendChild(this.svgElement);
        } else {
            this.layerElement = this.baseElement;
        }
        styleDiv(this.baseElement);
    },
    createContainerElements: function(){
        this.renderableEffectsManager = new CVEffects(this);
        this.transformedElement = this.baseElement;
        this.maskedElement = this.layerElement;
        if (this.data.ln) {
            this.layerElement.setAttribute('id',this.data.ln);
        }
        if (this.data.cl) {
            this.layerElement.setAttribute('class', this.data.cl);
        }
        if (this.data.bm !== 0) {
            this.setBlendMode();
        }
    },
    renderElement: function() {
        if(this.finalTransform._matMdf){
            this.transformedElement.style.transform = this.transformedElement.style.webkitTransform = this.finalTransform.mat.toCSS();
        }
        if(this.finalTransform._opMdf){
            this.transformedElement.style.opacity = this.finalTransform.mProp.o.v;
        }
    },
    renderFrame: function() {
        //If it is exported as hidden (data.hd === true) no need to render
        //If it is not visible no need to render
        if (this.data.hd || this.hidden) {
            return;
        }
        this.renderTransform();
        this.renderRenderable();
        this.renderElement();
        this.renderInnerContent();
        if (this._isFirstFrame) {
            this._isFirstFrame = false;
        }
    },
    destroy: function(){
        this.layerElement = null;
        this.transformedElement = null;
        if(this.matteElement) {
            this.matteElement = null;
        }
        if(this.maskManager) {
            this.maskManager.destroy();
            this.maskManager = null;
        }
    },
    createRenderableComponents: function(){
        this.maskManager = new MaskElement(this.data, this, this.globalData);
    },
    addEffects: function(){
    },
    setMatte: function(){}
};
HBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement;
HBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy;
HBaseElement.prototype.buildElementParenting = HybridRenderer.prototype.buildElementParenting;
function HSolidElement(data,globalData,comp){
    this.initElement(data,globalData,comp);
}
extendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], HSolidElement);

HSolidElement.prototype.createContent = function(){
    var rect;
    if(this.data.hasMask){
        rect = createNS('rect');
        rect.setAttribute('width',this.data.sw);
        rect.setAttribute('height',this.data.sh);
        rect.setAttribute('fill',this.data.sc);
        this.svgElement.setAttribute('width',this.data.sw);
        this.svgElement.setAttribute('height',this.data.sh);
    } else {
        rect = createTag('div');
        rect.style.width = this.data.sw + 'px';
        rect.style.height = this.data.sh + 'px';
        rect.style.backgroundColor = this.data.sc;
    }
    this.layerElement.appendChild(rect);
};

function HCompElement(data,globalData,comp){
    this.layers = data.layers;
    this.supports3d = !data.hasMask;
    this.completeLayers = false;
    this.pendingElements = [];
    this.elements = this.layers ? createSizedArray(this.layers.length) : [];
    this.initElement(data,globalData,comp);
    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this) : {_placeholder:true};
}

extendPrototype([HybridRenderer, ICompElement, HBaseElement], HCompElement);
HCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements;

HCompElement.prototype.createContainerElements = function(){
    this._createBaseContainerElements();
    //divElement.style.clip = 'rect(0px, '+this.data.w+'px, '+this.data.h+'px, 0px)';
    if(this.data.hasMask){
        this.svgElement.setAttribute('width',this.data.w);
        this.svgElement.setAttribute('height',this.data.h);
        this.transformedElement = this.baseElement;
    } else {
        this.transformedElement = this.layerElement;
    }
};

HCompElement.prototype.addTo3dContainer = function(elem,pos) {
    var j = 0;
    var nextElement;
    while(j<pos){
        if(this.elements[j] && this.elements[j].getBaseElement){
            nextElement = this.elements[j].getBaseElement();
        }
        j += 1;
    }
    if(nextElement){
        this.layerElement.insertBefore(elem, nextElement);
    } else {
        this.layerElement.appendChild(elem);
    }
}

function HShapeElement(data,globalData,comp){
    //List of drawable elements
    this.shapes = [];
    // Full shape data
    this.shapesData = data.shapes;
    //List of styles that will be applied to shapes
    this.stylesList = [];
    //List of modifiers that will be applied to shapes
    this.shapeModifiers = [];
    //List of items in shape tree
    this.itemsData = [];
    //List of items in previous shape tree
    this.processedElements = [];
    // List of animated components
    this.animatedContents = [];
    this.shapesContainer = createNS('g');
    this.initElement(data,globalData,comp);
    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.
    // List of elements that have been created
    this.prevViewData = [];
    this.currentBBox = {
        x:999999,
        y: -999999,
        h: 0,
        w: 0
    };
}
extendPrototype([BaseElement,TransformElement,HSolidElement,SVGShapeElement,HBaseElement,HierarchyElement,FrameElement,RenderableElement], HShapeElement);
HShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent;

HShapeElement.prototype.createContent = function(){
    var cont;
    this.baseElement.style.fontSize = 0;
    if (this.data.hasMask) {
        this.layerElement.appendChild(this.shapesContainer);
        cont = this.svgElement;
    } else {
        cont = createNS('svg');
        var size = this.comp.data ? this.comp.data : this.globalData.compSize;
        cont.setAttribute('width',size.w);
        cont.setAttribute('height',size.h);
        cont.appendChild(this.shapesContainer);
        this.layerElement.appendChild(cont);
    }

    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.shapesContainer,0, [], true);
    this.filterUniqueShapes();
    this.shapeCont = cont;
};

HShapeElement.prototype.getTransformedPoint = function(transformers, point) {
    var i, len = transformers.length;
    for(i = 0; i < len; i += 1) {
        point = transformers[i].mProps.v.applyToPointArray(point[0], point[1], 0);
    }
    return point;
}

HShapeElement.prototype.calculateShapeBoundingBox = function(item, boundingBox) {
    var shape = item.sh.v;
    var transformers = item.transformers;
    var i, len = shape._length, vPoint, oPoint, nextIPoint, nextVPoint, bounds;
    if (len <= 1) {
        return;
    }
    for (i = 0; i < len - 1; i += 1) {
        vPoint = this.getTransformedPoint(transformers, shape.v[i]);
        oPoint = this.getTransformedPoint(transformers, shape.o[i]);
        nextIPoint = this.getTransformedPoint(transformers, shape.i[i + 1]);
        nextVPoint = this.getTransformedPoint(transformers, shape.v[i + 1]);
        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);
    }
    if(shape.c) {
        vPoint = this.getTransformedPoint(transformers, shape.v[i]);
        oPoint = this.getTransformedPoint(transformers, shape.o[i]);
        nextIPoint = this.getTransformedPoint(transformers, shape.i[0]);
        nextVPoint = this.getTransformedPoint(transformers, shape.v[0]);
        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);
    }
}

HShapeElement.prototype.checkBounds = function(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox) {
    this.getBoundsOfCurve(vPoint, oPoint, nextIPoint, nextVPoint);
    var bounds = this.shapeBoundingBox;
    boundingBox.x = bm_min(bounds.left, boundingBox.x);
    boundingBox.xMax = bm_max(bounds.right, boundingBox.xMax);
    boundingBox.y = bm_min(bounds.top, boundingBox.y);
    boundingBox.yMax = bm_max(bounds.bottom, boundingBox.yMax);
}

HShapeElement.prototype.shapeBoundingBox = {
    left:0,
    right:0,
    top:0,
    bottom:0,
}

HShapeElement.prototype.tempBoundingBox = {
    x:0,
    xMax:0,
    y:0,
    yMax:0,
    width:0,
    height:0
}

HShapeElement.prototype.getBoundsOfCurve = function(p0, p1, p2, p3) {

    var bounds = [[p0[0],p3[0]], [p0[1],p3[1]]];

    for (var a, b, c, t, b2ac, t1, t2, i = 0; i < 2; ++i) {

      b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];
      a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];
      c = 3 * p1[i] - 3 * p0[i];

      b = b | 0;
      a = a | 0;
      c = c | 0;

      if (a === 0) {

        if (b === 0) {
          continue;
        }

        t = -c / b;

        if (0 < t && t < 1) {
          bounds[i].push(this.calculateF(t,p0,p1,p2,p3,i));
        }
        continue;
      }

      b2ac = b * b - 4 * c * a;

      if (b2ac < 0) {
        continue;
      }

      t1 = (-b + bm_sqrt(b2ac))/(2 * a);
      if (0 < t1 && t1 < 1) bounds[i].push(this.calculateF(t1,p0,p1,p2,p3,i));

      t2 = (-b - bm_sqrt(b2ac))/(2 * a);
      if (0 < t2 && t2 < 1) bounds[i].push(this.calculateF(t2,p0,p1,p2,p3,i));

    }

    this.shapeBoundingBox.left = bm_min.apply(null, bounds[0]);
    this.shapeBoundingBox.top = bm_min.apply(null, bounds[1]);
    this.shapeBoundingBox.right = bm_max.apply(null, bounds[0]);
    this.shapeBoundingBox.bottom = bm_max.apply(null, bounds[1]);
  };

  HShapeElement.prototype.calculateF = function(t, p0, p1, p2, p3, i) {
    return bm_pow(1-t, 3) * p0[i]
        + 3 * bm_pow(1-t, 2) * t * p1[i]
        + 3 * (1-t) * bm_pow(t, 2) * p2[i]
        + bm_pow(t, 3) * p3[i];
  }

HShapeElement.prototype.calculateBoundingBox = function(itemsData, boundingBox) {
    var i, len = itemsData.length, path;
    for(i = 0; i < len; i += 1) {
        if(itemsData[i] && itemsData[i].sh) {
            this.calculateShapeBoundingBox(itemsData[i], boundingBox)
        } else if(itemsData[i] && itemsData[i].it) {
            this.calculateBoundingBox(itemsData[i].it, boundingBox)
        }
    }
}

HShapeElement.prototype.currentBoxContains = function(box) {
    return this.currentBBox.x <= box.x 
    && this.currentBBox.y <= box.y 
    && this.currentBBox.width + this.currentBBox.x >= box.x + box.width
    && this.currentBBox.height + this.currentBBox.y >= box.y + box.height
}

HShapeElement.prototype.renderInnerContent = function() {
    this._renderShapeFrame();

    if(!this.hidden && (this._isFirstFrame || this._mdf)) {
        var tempBoundingBox = this.tempBoundingBox;
        var max = 999999;
        tempBoundingBox.x = max;
        tempBoundingBox.xMax = -max;
        tempBoundingBox.y = max;
        tempBoundingBox.yMax = -max;
        this.calculateBoundingBox(this.itemsData, tempBoundingBox);
        tempBoundingBox.width = tempBoundingBox.xMax < tempBoundingBox.x ? 0 : tempBoundingBox.xMax - tempBoundingBox.x;
        tempBoundingBox.height = tempBoundingBox.yMax < tempBoundingBox.y ? 0 : tempBoundingBox.yMax - tempBoundingBox.y;
        //var tempBoundingBox = this.shapeCont.getBBox();
        if(this.currentBoxContains(tempBoundingBox)) {
            return;
        }
        var changed = false;
        if(this.currentBBox.w !== tempBoundingBox.width){
            this.currentBBox.w = tempBoundingBox.width;
            this.shapeCont.setAttribute('width',tempBoundingBox.width);
            changed = true;
        }
        if(this.currentBBox.h !== tempBoundingBox.height){
            this.currentBBox.h = tempBoundingBox.height;
            this.shapeCont.setAttribute('height',tempBoundingBox.height);
            changed = true;
        }
        if(changed  || this.currentBBox.x !== tempBoundingBox.x  || this.currentBBox.y !== tempBoundingBox.y){
            this.currentBBox.w = tempBoundingBox.width;
            this.currentBBox.h = tempBoundingBox.height;
            this.currentBBox.x = tempBoundingBox.x;
            this.currentBBox.y = tempBoundingBox.y;

            this.shapeCont.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);
            this.shapeCont.style.transform = this.shapeCont.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';
        }
    }

};
function HTextElement(data,globalData,comp){
    this.textSpans = [];
    this.textPaths = [];
    this.currentBBox = {
        x:999999,
        y: -999999,
        h: 0,
        w: 0
    };
    this.renderType = 'svg';
    this.isMasked = false;
    this.initElement(data,globalData,comp);

}
extendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], HTextElement);

HTextElement.prototype.createContent = function(){
    this.isMasked = this.checkMasks();
    if(this.isMasked){
        this.renderType = 'svg';
        this.compW = this.comp.data.w;
        this.compH = this.comp.data.h;
        this.svgElement.setAttribute('width',this.compW);
        this.svgElement.setAttribute('height',this.compH);
        var g = createNS('g');
        this.maskedElement.appendChild(g);
        this.innerElem = g;
    } else {
        this.renderType = 'html';
        this.innerElem = this.layerElement;
    }

    this.checkParenting();

};

HTextElement.prototype.buildNewText = function(){
    var documentData = this.textProperty.currentData;
    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);
    var innerElemStyle = this.innerElem.style;
    innerElemStyle.color = innerElemStyle.fill = documentData.fc ? this.buildColor(documentData.fc) : 'rgba(0,0,0,0)';
    if(documentData.sc){
        innerElemStyle.stroke = this.buildColor(documentData.sc);
        innerElemStyle.strokeWidth = documentData.sw+'px';
    }
    var fontData = this.globalData.fontManager.getFontByName(documentData.f);
    if(!this.globalData.fontManager.chars){
        innerElemStyle.fontSize = documentData.finalSize+'px';
        innerElemStyle.lineHeight = documentData.finalSize+'px';
        if(fontData.fClass){
            this.innerElem.className = fontData.fClass;
        } else {
            innerElemStyle.fontFamily = fontData.fFamily;
            var fWeight = documentData.fWeight, fStyle = documentData.fStyle;
            innerElemStyle.fontStyle = fStyle;
            innerElemStyle.fontWeight = fWeight;
        }
    }
    var i, len;

    var letters = documentData.l;
    len = letters.length;
    var tSpan,tParent,tCont;
    var matrixHelper = this.mHelper;
    var shapes, shapeStr = '';
    var cnt = 0;
    for (i = 0;i < len ;i += 1) {
        if(this.globalData.fontManager.chars){
            if(!this.textPaths[cnt]){
                tSpan = createNS('path');
                tSpan.setAttribute('stroke-linecap', 'butt');
                tSpan.setAttribute('stroke-linejoin','round');
                tSpan.setAttribute('stroke-miterlimit','4');
            } else {
                tSpan = this.textPaths[cnt];
            }
            if(!this.isMasked){
                if(this.textSpans[cnt]){
                    tParent = this.textSpans[cnt];
                    tCont = tParent.children[0];
                } else {

                    tParent = createTag('div');
                    tParent.style.lineHeight = 0;
                    tCont = createNS('svg');
                    tCont.appendChild(tSpan);
                    styleDiv(tParent);
                }
            }
        }else{
            if(!this.isMasked){
                if(this.textSpans[cnt]){
                    tParent = this.textSpans[cnt];
                    tSpan = this.textPaths[cnt];
                } else {
                    tParent = createTag('span');
                    styleDiv(tParent);
                    tSpan = createTag('span');
                    styleDiv(tSpan);
                    tParent.appendChild(tSpan);
                }
            } else {
                tSpan = this.textPaths[cnt] ? this.textPaths[cnt] : createNS('text');
            }
        }
        //tSpan.setAttribute('visibility', 'hidden');
        if(this.globalData.fontManager.chars){
            var charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);
            var shapeData;
            if(charData){
                shapeData = charData.data;
            } else {
                shapeData = null;
            }
            matrixHelper.reset();
            if(shapeData && shapeData.shapes){
                shapes = shapeData.shapes[0].it;
                matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);
                shapeStr = this.createPathShape(matrixHelper,shapes);
                tSpan.setAttribute('d',shapeStr);
            }
            if(!this.isMasked){
                this.innerElem.appendChild(tParent);
                if(shapeData && shapeData.shapes){

                    //document.body.appendChild is needed to get exact measure of shape
                    document.body.appendChild(tCont);
                    var boundingBox = tCont.getBBox();
                    tCont.setAttribute('width',boundingBox.width + 2);
                    tCont.setAttribute('height',boundingBox.height + 2);
                    tCont.setAttribute('viewBox',(boundingBox.x-1)+' '+ (boundingBox.y-1)+' '+ (boundingBox.width+2)+' '+ (boundingBox.height+2));
                    tCont.style.transform = tCont.style.webkitTransform = 'translate(' + (boundingBox.x-1) + 'px,' + (boundingBox.y-1) + 'px)';

                    letters[i].yOffset = boundingBox.y-1;

                } else{
                    tCont.setAttribute('width',1);
                    tCont.setAttribute('height',1);
                }
                    tParent.appendChild(tCont);
            }else{
                this.innerElem.appendChild(tSpan);
            }
        }else{
            tSpan.textContent = letters[i].val;
            tSpan.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space","preserve");
            if(!this.isMasked){
                this.innerElem.appendChild(tParent);
                //
                tSpan.style.transform = tSpan.style.webkitTransform = 'translate3d(0,'+ -documentData.finalSize/1.2+'px,0)';
            } else {
                this.innerElem.appendChild(tSpan);
            }
        }
        //
        if(!this.isMasked){
            this.textSpans[cnt] = tParent;
        }else{
            this.textSpans[cnt] = tSpan;
        }
        this.textSpans[cnt].style.display = 'block';
        this.textPaths[cnt] = tSpan;
        cnt += 1;
    }
    while(cnt < this.textSpans.length){
        this.textSpans[cnt].style.display = 'none';
        cnt += 1;
    }
};

HTextElement.prototype.renderInnerContent = function() {

    if(this.data.singleShape){
        if(!this._isFirstFrame && !this.lettersChangedFlag){
            return;
        } else {
            // Todo Benchmark if using this is better than getBBox
             if(this.isMasked && this.finalTransform._matMdf){
                 this.svgElement.setAttribute('viewBox',-this.finalTransform.mProp.p.v[0]+' '+ -this.finalTransform.mProp.p.v[1]+' '+this.compW+' '+this.compH);
                this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + -this.finalTransform.mProp.p.v[0] + 'px,' + -this.finalTransform.mProp.p.v[1] + 'px)';
             }
        }
    }

    this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);
    if(!this.lettersChangedFlag && !this.textAnimator.lettersChangedFlag){
        return;
    }
    var  i,len, count = 0;
    var renderedLetters = this.textAnimator.renderedLetters;

    var letters = this.textProperty.currentData.l;

    len = letters.length;
    var renderedLetter, textSpan, textPath;
    for(i=0;i<len;i+=1){
        if(letters[i].n){
            count += 1;
            continue;
        }
        textSpan = this.textSpans[i];
        textPath = this.textPaths[i];
        renderedLetter = renderedLetters[count];
        count += 1;
        if(renderedLetter._mdf.m) {
            if(!this.isMasked){
                textSpan.style.transform = textSpan.style.webkitTransform = renderedLetter.m;
            }else{
                textSpan.setAttribute('transform',renderedLetter.m);
            }
        }
        ////textSpan.setAttribute('opacity',renderedLetter.o);
        textSpan.style.opacity = renderedLetter.o;
        if(renderedLetter.sw && renderedLetter._mdf.sw){
            textPath.setAttribute('stroke-width',renderedLetter.sw);
        }
        if(renderedLetter.sc && renderedLetter._mdf.sc){
            textPath.setAttribute('stroke',renderedLetter.sc);
        }
        if(renderedLetter.fc && renderedLetter._mdf.fc){
            textPath.setAttribute('fill',renderedLetter.fc);
            textPath.style.color = renderedLetter.fc;
        }
    }

    if(this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)){
        var boundingBox = this.innerElem.getBBox();

        if(this.currentBBox.w !== boundingBox.width){
            this.currentBBox.w = boundingBox.width;
            this.svgElement.setAttribute('width',boundingBox.width);
        }
        if(this.currentBBox.h !== boundingBox.height){
            this.currentBBox.h = boundingBox.height;
            this.svgElement.setAttribute('height',boundingBox.height);
        }

        var margin = 1;
        if(this.currentBBox.w !== (boundingBox.width + margin*2) || this.currentBBox.h !== (boundingBox.height + margin*2)  || this.currentBBox.x !== (boundingBox.x - margin)  || this.currentBBox.y !== (boundingBox.y - margin)){
            this.currentBBox.w = boundingBox.width + margin*2;
            this.currentBBox.h = boundingBox.height + margin*2;
            this.currentBBox.x = boundingBox.x - margin;
            this.currentBBox.y = boundingBox.y - margin;

            this.svgElement.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);
            this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';
        }
    }
};
function HImageElement(data,globalData,comp){
    this.assetData = globalData.getAssetData(data.refId);
    this.initElement(data,globalData,comp);
}

extendPrototype([BaseElement,TransformElement,HBaseElement,HSolidElement,HierarchyElement,FrameElement,RenderableElement], HImageElement);


HImageElement.prototype.createContent = function(){
    var assetPath = this.globalData.getAssetsPath(this.assetData);
    var img = new Image();

    if(this.data.hasMask){
        this.imageElem = createNS('image');
        this.imageElem.setAttribute('width',this.assetData.w+"px");
        this.imageElem.setAttribute('height',this.assetData.h+"px");
        this.imageElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);
        this.layerElement.appendChild(this.imageElem);
        this.baseElement.setAttribute('width',this.assetData.w);
        this.baseElement.setAttribute('height',this.assetData.h);
    } else {
        this.layerElement.appendChild(img);
    }
    img.src = assetPath;
    if(this.data.ln){
        this.baseElement.setAttribute('id',this.data.ln);
    }
};
function HCameraElement(data,globalData,comp){
    this.initFrame();
    this.initBaseData(data,globalData,comp);
    this.initHierarchy();
    var getProp = PropertyFactory.getProp;
    this.pe = getProp(this,data.pe,0,0,this);
    if(data.ks.p.s){
        this.px = getProp(this,data.ks.p.x,1,0,this);
        this.py = getProp(this,data.ks.p.y,1,0,this);
        this.pz = getProp(this,data.ks.p.z,1,0,this);
    }else{
        this.p = getProp(this,data.ks.p,1,0,this);
    }
    if(data.ks.a){
        this.a = getProp(this,data.ks.a,1,0,this);
    }
    if(data.ks.or.k.length && data.ks.or.k[0].to){
        var i,len = data.ks.or.k.length;
        for(i=0;i<len;i+=1){
            data.ks.or.k[i].to = null;
            data.ks.or.k[i].ti = null;
        }
    }
    this.or = getProp(this,data.ks.or,1,degToRads,this);
    this.or.sh = true;
    this.rx = getProp(this,data.ks.rx,0,degToRads,this);
    this.ry = getProp(this,data.ks.ry,0,degToRads,this);
    this.rz = getProp(this,data.ks.rz,0,degToRads,this);
    this.mat = new Matrix();
    this._prevMat = new Matrix();
    this._isFirstFrame = true;
    
    // TODO: find a better way to make the HCamera element to be compatible with the LayerInterface and TransformInterface.
    this.finalTransform = {
        mProp: this
    };
}
extendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement);

HCameraElement.prototype.setup = function() {
    var i, len = this.comp.threeDElements.length, comp;
    for(i=0;i<len;i+=1){
        //[perspectiveElem,container]
        comp = this.comp.threeDElements[i];
        if(comp.type === '3d') {
            comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v+'px';
            comp.container.style.transformOrigin = comp.container.style.mozTransformOrigin = comp.container.style.webkitTransformOrigin = "0px 0px 0px";
            comp.perspectiveElem.style.transform = comp.perspectiveElem.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';
        }
    }
};

HCameraElement.prototype.createElements = function(){
};

HCameraElement.prototype.hide = function(){
};

HCameraElement.prototype.renderFrame = function(){
    var _mdf = this._isFirstFrame;
    var i, len;
    if(this.hierarchy){
        len = this.hierarchy.length;
        for(i=0;i<len;i+=1){
            _mdf = this.hierarchy[i].finalTransform.mProp._mdf || _mdf;
        }
    }
    if(_mdf || this.pe._mdf || (this.p && this.p._mdf) || (this.px && (this.px._mdf || this.py._mdf || this.pz._mdf)) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || (this.a && this.a._mdf)) {
        this.mat.reset();

        if(this.hierarchy){
            var mat;
            len = this.hierarchy.length - 1;
            for (i = len; i >= 0; i -= 1) {
                var mTransf = this.hierarchy[i].finalTransform.mProp;
                this.mat.translate(-mTransf.p.v[0],-mTransf.p.v[1],mTransf.p.v[2]);
                this.mat.rotateX(-mTransf.or.v[0]).rotateY(-mTransf.or.v[1]).rotateZ(mTransf.or.v[2]);
                this.mat.rotateX(-mTransf.rx.v).rotateY(-mTransf.ry.v).rotateZ(mTransf.rz.v);
                this.mat.scale(1/mTransf.s.v[0],1/mTransf.s.v[1],1/mTransf.s.v[2]);
                this.mat.translate(mTransf.a.v[0],mTransf.a.v[1],mTransf.a.v[2]);
            }
        }
        if (this.p) {
            this.mat.translate(-this.p.v[0],-this.p.v[1],this.p.v[2]);
        } else {
            this.mat.translate(-this.px.v,-this.py.v,this.pz.v);
        }
        if (this.a) {
            var diffVector
            if (this.p) {
                diffVector = [this.p.v[0] - this.a.v[0], this.p.v[1] - this.a.v[1], this.p.v[2] - this.a.v[2]];
            } else {
                diffVector = [this.px.v - this.a.v[0], this.py.v - this.a.v[1], this.pz.v - this.a.v[2]];
            }
            var mag = Math.sqrt(Math.pow(diffVector[0],2)+Math.pow(diffVector[1],2)+Math.pow(diffVector[2],2));
            //var lookDir = getNormalizedPoint(getDiffVector(this.a.v,this.p.v));
            var lookDir = [diffVector[0]/mag,diffVector[1]/mag,diffVector[2]/mag];
            var lookLengthOnXZ = Math.sqrt( lookDir[2]*lookDir[2] + lookDir[0]*lookDir[0] );
            var m_rotationX = (Math.atan2( lookDir[1], lookLengthOnXZ ));
            var m_rotationY = (Math.atan2( lookDir[0], -lookDir[2]));
            this.mat.rotateY(m_rotationY).rotateX(-m_rotationX);

        }
        this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);
        this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]);
        this.mat.translate(this.globalData.compSize.w/2,this.globalData.compSize.h/2,0);
        this.mat.translate(0,0,this.pe.v);


        

        var hasMatrixChanged = !this._prevMat.equals(this.mat);
        if((hasMatrixChanged || this.pe._mdf) && this.comp.threeDElements) {
            len = this.comp.threeDElements.length;
            var comp;
            for(i=0;i<len;i+=1){
                comp = this.comp.threeDElements[i];
                if(comp.type === '3d') {
                    if(hasMatrixChanged) {
                        comp.container.style.transform = comp.container.style.webkitTransform = this.mat.toCSS();
                    }
                    if(this.pe._mdf) {
                        comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v+'px';
                    }
                }
            }
            this.mat.clone(this._prevMat);
        }
    }
    this._isFirstFrame = false;
};

HCameraElement.prototype.prepareFrame = function(num) {
    this.prepareProperties(num, true);
};

HCameraElement.prototype.destroy = function(){
};
HCameraElement.prototype.getBaseElement = function(){return null;};
function HEffects() {
}
HEffects.prototype.renderFrame = function(){};
var animationManager = (function(){
    var moduleOb = {};
    var registeredAnimations = [];
    var initTime = 0;
    var len = 0;
    var playingAnimationsNum = 0;
    var _stopped = true;
    var _isFrozen = false;

    function removeElement(ev){
        var i = 0;
        var animItem = ev.target;
        while(i<len) {
            if (registeredAnimations[i].animation === animItem) {
                registeredAnimations.splice(i, 1);
                i -= 1;
                len -= 1;
                if(!animItem.isPaused){
                    subtractPlayingCount();
                }
            }
            i += 1;
        }
    }

    function registerAnimation(element, animationData){
        if(!element){
            return null;
        }
        var i=0;
        while(i<len){
            if(registeredAnimations[i].elem == element && registeredAnimations[i].elem !== null ){
                return registeredAnimations[i].animation;
            }
            i+=1;
        }
        var animItem = new AnimationItem();
        setupAnimation(animItem, element);
        animItem.setData(element, animationData);
        return animItem;
    }

    function getRegisteredAnimations() {
        var i, len = registeredAnimations.length;
        var animations = [];
        for(i = 0; i < len; i += 1) {
            animations.push(registeredAnimations[i].animation);
        }
        return animations;
    }

    function addPlayingCount(){
        playingAnimationsNum += 1;
        activate();
    }

    function subtractPlayingCount(){
        playingAnimationsNum -= 1;
    }

    function setupAnimation(animItem, element){
        animItem.addEventListener('destroy',removeElement);
        animItem.addEventListener('_active',addPlayingCount);
        animItem.addEventListener('_idle',subtractPlayingCount);
        registeredAnimations.push({elem: element,animation:animItem});
        len += 1;
    }

    function loadAnimation(params){
        var animItem = new AnimationItem();
        setupAnimation(animItem, null);
        animItem.setParams(params);
        return animItem;
    }


    function setSpeed(val,animation){
        var i;
        for(i=0;i<len;i+=1){
            registeredAnimations[i].animation.setSpeed(val, animation);
        }
    }

    function setDirection(val, animation){
        var i;
        for(i=0;i<len;i+=1){
            registeredAnimations[i].animation.setDirection(val, animation);
        }
    }

    function play(animation){
        var i;
        for(i=0;i<len;i+=1){
            registeredAnimations[i].animation.play(animation);
        }
    }
    function resume(nowTime) {
        var elapsedTime = nowTime - initTime;
        var i;
        for(i=0;i<len;i+=1){
            registeredAnimations[i].animation.advanceTime(elapsedTime);
        }
        initTime = nowTime;
        if(playingAnimationsNum && !_isFrozen) {
            window.requestAnimationFrame(resume);
        } else {
            _stopped = true;
        }
    }

    function first(nowTime){
        initTime = nowTime;
        window.requestAnimationFrame(resume);
    }

    function pause(animation) {
        var i;
        for(i=0;i<len;i+=1){
            registeredAnimations[i].animation.pause(animation);
        }
    }

    function goToAndStop(value,isFrame,animation) {
        var i;
        for(i=0;i<len;i+=1){
            registeredAnimations[i].animation.goToAndStop(value,isFrame,animation);
        }
    }

    function stop(animation) {
        var i;
        for(i=0;i<len;i+=1){
            registeredAnimations[i].animation.stop(animation);
        }
    }

    function togglePause(animation) {
        var i;
        for(i=0;i<len;i+=1){
            registeredAnimations[i].animation.togglePause(animation);
        }
    }

    function destroy(animation) {
        var i;
        for(i=(len-1);i>=0;i-=1){
            registeredAnimations[i].animation.destroy(animation);
        }
    }

    function searchAnimations(animationData, standalone, renderer){
        var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie')),
                  [].slice.call(document.getElementsByClassName('bodymovin')));
        var i, len = animElements.length;
        for(i=0;i<len;i+=1){
            if(renderer){
                animElements[i].setAttribute('data-bm-type',renderer);
            }
            registerAnimation(animElements[i], animationData);
        }
        if(standalone && len === 0){
            if(!renderer){
                renderer = 'svg';
            }
            var body = document.getElementsByTagName('body')[0];
            body.innerText = '';
            var div = createTag('div');
            div.style.width = '100%';
            div.style.height = '100%';
            div.setAttribute('data-bm-type',renderer);
            body.appendChild(div);
            registerAnimation(div, animationData);
        }
    }

    function resize(){
        var i;
        for(i=0;i<len;i+=1){
            registeredAnimations[i].animation.resize();
        }
    }

    function activate(){
        if(!_isFrozen && playingAnimationsNum){
            if(_stopped) {
                window.requestAnimationFrame(first);
                _stopped = false;
            }
        }
    }

    function freeze() {
        _isFrozen = true;
    }

    function unfreeze() {
        _isFrozen = false;
        activate();
    }

    function setVolume(val,animation) {
        var i;
        for(i=0;i<len;i+=1){
            registeredAnimations[i].animation.setVolume(val, animation);
        }
    }

    function mute(animation) {
        var i;
        for(i=0;i<len;i+=1){
            registeredAnimations[i].animation.mute(animation);
        }
    }

    function unmute(animation) {
        var i;
        for(i=0;i<len;i+=1){
            registeredAnimations[i].animation.unmute(animation);
        }
    }

    moduleOb.registerAnimation = registerAnimation;
    moduleOb.loadAnimation = loadAnimation;
    moduleOb.setSpeed = setSpeed;
    moduleOb.setDirection = setDirection;
    moduleOb.play = play;
    moduleOb.pause = pause;
    moduleOb.stop = stop;
    moduleOb.togglePause = togglePause;
    moduleOb.searchAnimations = searchAnimations;
    moduleOb.resize = resize;
    //moduleOb.start = start;
    moduleOb.goToAndStop = goToAndStop;
    moduleOb.destroy = destroy;
    moduleOb.freeze = freeze;
    moduleOb.unfreeze = unfreeze;
    moduleOb.setVolume = setVolume;
    moduleOb.mute = mute;
    moduleOb.unmute = unmute;
    moduleOb.getRegisteredAnimations = getRegisteredAnimations;
    return moduleOb;
}());

var AnimationItem = function () {
    this._cbs = [];
    this.name = '';
    this.path = '';
    this.isLoaded = false;
    this.currentFrame = 0;
    this.currentRawFrame = 0;
    this.firstFrame = 0;
    this.totalFrames = 0;
    this.frameRate = 0;
    this.frameMult = 0;
    this.playSpeed = 1;
    this.playDirection = 1;
    this.playCount = 0;
    this.animationData = {};
    this.assets = [];
    this.isPaused = true;
    this.autoplay = false;
    this.loop = true;
    this.renderer = null;
    this.animationID = createElementID();
    this.assetsPath = '';
    this.timeCompleted = 0;
    this.segmentPos = 0;
    this.isSubframeEnabled = subframeEnabled;
    this.segments = [];
    this._idle = true;
    this._completedLoop = false;
    this.projectInterface = ProjectInterface();
    this.imagePreloader = new ImagePreloader();
    this.audioController = audioControllerFactory();
};

extendPrototype([BaseEvent], AnimationItem);

AnimationItem.prototype.setParams = function(params) {
    if(params.wrapper || params.container){
        this.wrapper = params.wrapper || params.container;
    }
    var animType = params.animType ? params.animType : params.renderer ? params.renderer : 'svg';
    switch(animType){
        case 'canvas':
            this.renderer = new CanvasRenderer(this, params.rendererSettings);
            break;
        case 'svg':
            this.renderer = new SVGRenderer(this, params.rendererSettings);
            break;
        default:
            this.renderer = new HybridRenderer(this, params.rendererSettings);
            break;
    }
    this.imagePreloader.setCacheType(animType);
    this.renderer.setProjectInterface(this.projectInterface);
    this.animType = animType;
    if (params.loop === ''
        || params.loop === null
        || params.loop === undefined
        || params.loop === true)
    {
        this.loop = true;
    } else if (params.loop === false) {
        this.loop = false;
    } else {
        this.loop = parseInt(params.loop);
    }
    this.autoplay = 'autoplay' in params ? params.autoplay : true;
    this.name = params.name ? params.name :  '';
    this.autoloadSegments = params.hasOwnProperty('autoloadSegments') ? params.autoloadSegments :  true;
    this.assetsPath = params.assetsPath;
    this.initialSegment = params.initialSegment;
    if (params.audioFactory) {
        this.audioController.setAudioFactory(params.audioFactory);
    }
    if (params.animationData) {
        this.configAnimation(params.animationData);
    } else if(params.path){

        if( params.path.lastIndexOf('\\') !== -1){
            this.path = params.path.substr(0,params.path.lastIndexOf('\\')+1);
        } else {
            this.path = params.path.substr(0,params.path.lastIndexOf('/')+1);
        }
        this.fileName = params.path.substr(params.path.lastIndexOf('/')+1);
        this.fileName = this.fileName.substr(0,this.fileName.lastIndexOf('.json'));

        assetLoader.load(params.path, this.configAnimation.bind(this), function() {
            this.trigger('data_failed');
        }.bind(this));
    }

};

AnimationItem.prototype.setData = function (wrapper, animationData) {
    var params = {
        wrapper: wrapper,
        animationData: animationData ? (typeof animationData  === "object") ? animationData : JSON.parse(animationData) : null
    };
    var wrapperAttributes = wrapper.attributes;

    params.path = wrapperAttributes.getNamedItem('data-animation-path') ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') ? wrapperAttributes.getNamedItem('data-bm-path').value :  wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';
    params.animType = wrapperAttributes.getNamedItem('data-anim-type') ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') ? wrapperAttributes.getNamedItem('bm-type').value :  wrapperAttributes.getNamedItem('data-bm-renderer') ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';

    var loop = wrapperAttributes.getNamedItem('data-anim-loop') ? wrapperAttributes.getNamedItem('data-anim-loop').value :  wrapperAttributes.getNamedItem('data-bm-loop') ? wrapperAttributes.getNamedItem('data-bm-loop').value :  wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';
    if(loop === ''){
    }else if(loop === 'false'){
        params.loop = false;
    }else if(loop === 'true'){
        params.loop = true;
    }else{
        params.loop = parseInt(loop);
    }
    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') ? wrapperAttributes.getNamedItem('data-anim-autoplay').value :  wrapperAttributes.getNamedItem('data-bm-autoplay') ? wrapperAttributes.getNamedItem('data-bm-autoplay').value :  wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;
    params.autoplay = autoplay !== "false";

    params.name = wrapperAttributes.getNamedItem('data-name') ? wrapperAttributes.getNamedItem('data-name').value :  wrapperAttributes.getNamedItem('data-bm-name') ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value :  '';
    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') ? wrapperAttributes.getNamedItem('data-anim-prerender').value :  wrapperAttributes.getNamedItem('data-bm-prerender') ? wrapperAttributes.getNamedItem('data-bm-prerender').value :  wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';

    if(prerender === 'false'){
        params.prerender = false;
    }
    this.setParams(params);
};

AnimationItem.prototype.includeLayers = function(data) {
    if(data.op > this.animationData.op){
        this.animationData.op = data.op;
        this.totalFrames = Math.floor(data.op - this.animationData.ip);
    }
    var layers = this.animationData.layers;
    var i, len = layers.length;
    var newLayers = data.layers;
    var j, jLen = newLayers.length;
    for(j=0;j<jLen;j+=1){
        i = 0;
        while(i<len){
            if(layers[i].id == newLayers[j].id){
                layers[i] = newLayers[j];
                break;
            }
            i += 1;
        }
    }
    if(data.chars || data.fonts){
        this.renderer.globalData.fontManager.addChars(data.chars);
        this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);
    }
    if(data.assets){
        len = data.assets.length;
        for(i = 0; i < len; i += 1){
            this.animationData.assets.push(data.assets[i]);
        }
    }
    this.animationData.__complete = false;
    dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);
    this.renderer.includeLayers(data.layers);
    if(expressionsPlugin){
        expressionsPlugin.initExpressions(this);
    }
    this.loadNextSegment();
};

AnimationItem.prototype.loadNextSegment = function() {
    var segments = this.animationData.segments;
    if(!segments || segments.length === 0 || !this.autoloadSegments){
        this.trigger('data_ready');
        this.timeCompleted = this.totalFrames;
        return;
    }
    var segment = segments.shift();
    this.timeCompleted = segment.time * this.frameRate;
    var segmentPath = this.path+this.fileName+'_' + this.segmentPos + '.json';
    this.segmentPos += 1;
    assetLoader.load(segmentPath, this.includeLayers.bind(this), function() {
        this.trigger('data_failed');
    }.bind(this));
};

AnimationItem.prototype.loadSegments = function() {
    var segments = this.animationData.segments;
    if(!segments) {
        this.timeCompleted = this.totalFrames;
    }
    this.loadNextSegment();
};

AnimationItem.prototype.imagesLoaded = function() {
    this.trigger('loaded_images');
    this.checkLoaded()
}

AnimationItem.prototype.preloadImages = function() {
    this.imagePreloader.setAssetsPath(this.assetsPath);
    this.imagePreloader.setPath(this.path);
    this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));
}

AnimationItem.prototype.configAnimation = function (animData) {
    if(!this.renderer){
        return;
    }
    try {
        this.animationData = animData;

        if (this.initialSegment) {
            this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0]);
            this.firstFrame = Math.round(this.initialSegment[0]);
        } else {
            this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);
            this.firstFrame = Math.round(this.animationData.ip);
        }
        this.renderer.configAnimation(animData);
        if(!animData.assets){
            animData.assets = [];
        }

        this.assets = this.animationData.assets;
        this.frameRate = this.animationData.fr;
        this.frameMult = this.animationData.fr / 1000;
        this.renderer.searchExtraCompositions(animData.assets);
        this.trigger('config_ready');
        this.preloadImages();
        this.loadSegments();
        this.updaFrameModifier();
        this.waitForFontsLoaded();
        if (this.isPaused) {
            this.audioController.pause();
        }
    } catch(error) {
        this.triggerConfigError(error);
    }
};

AnimationItem.prototype.waitForFontsLoaded = function(){
    if(!this.renderer) {
        return;
    }
    if(this.renderer.globalData.fontManager.isLoaded){
        this.checkLoaded();
    }else{
        setTimeout(this.waitForFontsLoaded.bind(this),20);
    }
}

AnimationItem.prototype.checkLoaded = function () {
    if (!this.isLoaded 
        && this.renderer.globalData.fontManager.isLoaded
        && (this.imagePreloader.loaded() || this.renderer.rendererType !== 'canvas')
    ) {
        this.isLoaded = true;
        dataManager.completeData(this.animationData, this.renderer.globalData.fontManager);
        if(expressionsPlugin){
            expressionsPlugin.initExpressions(this);
        }
        this.renderer.initItems();
        setTimeout(function() {
            this.trigger('DOMLoaded');
        }.bind(this), 0);
        this.gotoFrame();
        if(this.autoplay){
            this.play();
        }
    }
};

AnimationItem.prototype.resize = function () {
    this.renderer.updateContainerSize();
};

AnimationItem.prototype.setSubframe = function(flag){
    this.isSubframeEnabled = !!flag;
};

AnimationItem.prototype.gotoFrame = function () {
    this.currentFrame = this.isSubframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame;

    if(this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted){
        this.currentFrame = this.timeCompleted;
    }
    this.trigger('enterFrame');
    this.renderFrame();
};

AnimationItem.prototype.renderFrame = function () {
    if(this.isLoaded === false){
        return;
    }
    try {
        this.renderer.renderFrame(this.currentFrame + this.firstFrame);
    } catch(error) {
        this.triggerRenderFrameError(error);
    }
};

AnimationItem.prototype.play = function (name) {
    if(name && this.name != name){
        return;
    }
    if (this.isPaused === true) {
        this.isPaused = false;
        this.audioController.resume();
        if(this._idle){
            this._idle = false;
            this.trigger('_active');
        }
    }
};

AnimationItem.prototype.pause = function (name) {
    if(name && this.name != name){
        return;
    }
    if(this.isPaused === false){
        this.isPaused = true;
        this._idle = true;
        this.trigger('_idle');
        this.audioController.pause();
    }
};

AnimationItem.prototype.togglePause = function (name) {
    if(name && this.name != name){
        return;
    }
    if(this.isPaused === true){
        this.play();
    }else{
        this.pause();
    }
};

AnimationItem.prototype.stop = function (name) {
    if(name && this.name != name){
        return;
    }
    this.pause();
    this.playCount = 0;
    this._completedLoop = false;
    this.setCurrentRawFrameValue(0);
};

AnimationItem.prototype.goToAndStop = function (value, isFrame, name) {
    if(name && this.name != name){
        return;
    }
    if(isFrame){
        this.setCurrentRawFrameValue(value);
    }else{
        this.setCurrentRawFrameValue(value * this.frameModifier);
    }
    this.pause();
};

AnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {
    this.goToAndStop(value, isFrame, name);
    this.play();
};

AnimationItem.prototype.advanceTime = function (value) {
    if (this.isPaused === true || this.isLoaded === false) {
        return;
    }
    var nextValue = this.currentRawFrame + value * this.frameModifier;
    var _isComplete = false;
    // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.
    // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.
    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {
        if (!this.loop || this.playCount === this.loop) {
            if (!this.checkSegments(nextValue >  this.totalFrames ? nextValue % this.totalFrames : 0)) {
                _isComplete = true;
                nextValue = this.totalFrames - 1;
            }
        } else if (nextValue >= this.totalFrames) {
            this.playCount += 1;
            if (!this.checkSegments(nextValue % this.totalFrames)) {
                this.setCurrentRawFrameValue(nextValue % this.totalFrames);
                this._completedLoop = true;
                this.trigger('loopComplete');
            }
        } else {
            this.setCurrentRawFrameValue(nextValue);
        }
    } else if(nextValue < 0) {
        if (!this.checkSegments(nextValue % this.totalFrames)) {
            if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {
                this.setCurrentRawFrameValue(this.totalFrames + (nextValue % this.totalFrames));
                if(!this._completedLoop) {
                    this._completedLoop = true;
                } else {
                    this.trigger('loopComplete');
                }
            } else {
                _isComplete = true;
                nextValue = 0;
            }
        }
    } else {
        this.setCurrentRawFrameValue(nextValue);
    }
    if (_isComplete) {
        this.setCurrentRawFrameValue(nextValue);
        this.pause();
        this.trigger('complete');
    }
};

AnimationItem.prototype.adjustSegment = function(arr, offset){
    this.playCount = 0;
    if(arr[1] < arr[0]){
        if(this.frameModifier > 0){
            if(this.playSpeed < 0){
                this.setSpeed(-this.playSpeed);
            } else {
                this.setDirection(-1);
            }
        }
        this.timeCompleted = this.totalFrames = arr[0] - arr[1];
        this.firstFrame = arr[1];
        this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);
    } else if(arr[1] > arr[0]){
        if(this.frameModifier < 0){
            if(this.playSpeed < 0){
                this.setSpeed(-this.playSpeed);
            } else {
                this.setDirection(1);
            }
        }
        this.timeCompleted = this.totalFrames = arr[1] - arr[0];
        this.firstFrame = arr[0];
        this.setCurrentRawFrameValue(0.001 + offset);
    }
    this.trigger('segmentStart');
};
AnimationItem.prototype.setSegment = function (init,end) {
    var pendingFrame = -1;
    if(this.isPaused) {
        if (this.currentRawFrame + this.firstFrame < init) {
            pendingFrame = init;
        } else if (this.currentRawFrame + this.firstFrame > end) {
            pendingFrame = end - init;
        }
    }

    this.firstFrame = init;
    this.timeCompleted = this.totalFrames = end - init;
    if(pendingFrame !== -1) {
        this.goToAndStop(pendingFrame,true);
    }
};

AnimationItem.prototype.playSegments = function (arr, forceFlag) {
    if (forceFlag) {
        this.segments.length = 0;
    }
    if (typeof arr[0] === 'object') {
        var i, len = arr.length;
        for (i = 0; i < len; i += 1) {
            this.segments.push(arr[i]);
        }
    } else {
        this.segments.push(arr);
    }
    if (this.segments.length && forceFlag) {
        this.adjustSegment(this.segments.shift(), 0);
    }
    if (this.isPaused) {
        this.play();
    }
};

AnimationItem.prototype.resetSegments = function (forceFlag) {
    this.segments.length = 0;
    this.segments.push([this.animationData.ip,this.animationData.op]);
    //this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);
    if (forceFlag) {
        this.checkSegments(0);
    }
};
AnimationItem.prototype.checkSegments = function(offset) {
    if (this.segments.length) {
        this.adjustSegment(this.segments.shift(), offset);
        return true;
    }
    return false;
};

AnimationItem.prototype.destroy = function (name) {
    if ((name && this.name != name) || !this.renderer) {
        return;
    }
    this.renderer.destroy();
    this.imagePreloader.destroy();
    this.trigger('destroy');
    this._cbs = null;
    this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;
    this.renderer = null;
};

AnimationItem.prototype.setCurrentRawFrameValue = function(value){
    this.currentRawFrame = value;
    this.gotoFrame();
};

AnimationItem.prototype.setSpeed = function (val) {
    this.playSpeed = val;
    this.updaFrameModifier();
};

AnimationItem.prototype.setDirection = function (val) {
    this.playDirection = val < 0 ? -1 : 1;
    this.updaFrameModifier();
};

AnimationItem.prototype.setVolume = function (val, name) {
    if (name && this.name !== name) {
        return;
    }
    this.audioController.setVolume(val);
};

AnimationItem.prototype.getVolume = function () {
    return this.audioController.getVolume();
};

AnimationItem.prototype.mute = function (name) {
    if (name && this.name !== name) {
        return;
    }
    this.audioController.mute();
};

AnimationItem.prototype.unmute = function (name) {
    if(name && this.name !== name){
        return;
    }
    this.audioController.unmute();
};

AnimationItem.prototype.updaFrameModifier = function () {
    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;
    this.audioController.setRate(this.playSpeed * this.playDirection)
};

AnimationItem.prototype.getPath = function () {
    return this.path;
};

AnimationItem.prototype.getAssetsPath = function (assetData) {
    var path = '';
    if(assetData.e) {
        path = assetData.p;
    } else if(this.assetsPath){
        var imagePath = assetData.p;
        if(imagePath.indexOf('images/') !== -1){
            imagePath = imagePath.split('/')[1];
        }
        path = this.assetsPath + imagePath;
    } else {
        path = this.path;
        path += assetData.u ? assetData.u : '';
        path += assetData.p;
    }
    return path;
};

AnimationItem.prototype.getAssetData = function (id) {
    var i = 0, len = this.assets.length;
    while (i < len) {
        if(id == this.assets[i].id){
            return this.assets[i];
        }
        i += 1;
    }
};

AnimationItem.prototype.hide = function () {
    this.renderer.hide();
};

AnimationItem.prototype.show = function () {
    this.renderer.show();
};

AnimationItem.prototype.getDuration = function (isFrame) {
    return isFrame ? this.totalFrames : this.totalFrames / this.frameRate;
};

AnimationItem.prototype.trigger = function(name){
    if(this._cbs && this._cbs[name]){
        switch(name){
            case 'enterFrame':
                this.triggerEvent(name,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameModifier));
                break;
            case 'loopComplete':
                this.triggerEvent(name,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));
                break;
            case 'complete':
                this.triggerEvent(name,new BMCompleteEvent(name,this.frameMult));
                break;
            case 'segmentStart':
                this.triggerEvent(name,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));
                break;
            case 'destroy':
                this.triggerEvent(name,new BMDestroyEvent(name,this));
                break;
            default:
                this.triggerEvent(name);
        }
    }
    if(name === 'enterFrame' && this.onEnterFrame){
        this.onEnterFrame.call(this,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));
    }
    if(name === 'loopComplete' && this.onLoopComplete){
        this.onLoopComplete.call(this,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));
    }
    if(name === 'complete' && this.onComplete){
        this.onComplete.call(this,new BMCompleteEvent(name,this.frameMult));
    }
    if(name === 'segmentStart' && this.onSegmentStart){
        this.onSegmentStart.call(this,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));
    }
    if(name === 'destroy' && this.onDestroy){
        this.onDestroy.call(this,new BMDestroyEvent(name,this));
    }
};

AnimationItem.prototype.triggerRenderFrameError = function(nativeError) {

    var error = new BMRenderFrameErrorEvent(nativeError, this.currentFrame);
    this.triggerEvent('error', error);

    if (this.onError) {
        this.onError.call(this, error);
    }
}

AnimationItem.prototype.triggerConfigError = function(nativeError) {

    var error = new BMConfigErrorEvent(nativeError, this.currentFrame);
    this.triggerEvent('error', error);

    if (this.onError) {
        this.onError.call(this, error);
    }
}
var Expressions = (function(){
    var ob = {};
    ob.initExpressions = initExpressions;


    function initExpressions(animation){

    	var stackCount = 0;
    	var registers = [];

    	function pushExpression() {
			stackCount += 1;
    	}

    	function popExpression() {
			stackCount -= 1;
			if (stackCount === 0) {
				releaseInstances();
			}
    	}

    	function registerExpressionProperty(expression) {
    		if (registers.indexOf(expression) === -1) {
				registers.push(expression)
    		}
    	}

    	function releaseInstances() {
    		var i, len = registers.length;
    		for (i = 0; i < len; i += 1) {
				registers[i].release();
    		}
    		registers.length = 0;
    	}

        animation.renderer.compInterface = CompExpressionInterface(animation.renderer);
        animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);
        animation.renderer.globalData.pushExpression = pushExpression;
        animation.renderer.globalData.popExpression = popExpression;
        animation.renderer.globalData.registerExpressionProperty = registerExpressionProperty;
    }
   return ob;
}());

expressionsPlugin = Expressions;

var ExpressionManager = (function(){
    'use strict';
    var ob = {};
    var Math = BMMath;
    var window = null;
    var document = null;

    function $bm_isInstanceOfArray(arr) {
        return arr.constructor === Array || arr.constructor === Float32Array;
    }

    function isNumerable(tOfV, v) {
        return tOfV === 'number' || tOfV === 'boolean' || tOfV === 'string' || v instanceof Number;
    }

    function $bm_neg(a){
        var tOfA = typeof a;
        if(tOfA === 'number' || tOfA === 'boolean'  || a instanceof Number ){
            return -a;
        }
        if($bm_isInstanceOfArray(a)){
            var i, lenA = a.length;
            var retArr = [];
            for(i=0;i<lenA;i+=1){
                retArr[i] = -a[i];
            }
            return retArr;
        }
        if (a.propType) {
            return a.v;
        }
    }

    var easeInBez = BezierFactory.getBezierEasing(0.333,0,.833,.833, 'easeIn').get;
    var easeOutBez = BezierFactory.getBezierEasing(0.167,0.167,.667,1, 'easeOut').get;
    var easeInOutBez = BezierFactory.getBezierEasing(.33,0,.667,1, 'easeInOut').get;

    function sum(a,b) {
        var tOfA = typeof a;
        var tOfB = typeof b;
        if(tOfA === 'string' || tOfB === 'string'){
            return a + b;
        }
        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {
            return a + b;
        }
        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){
            a = a.slice(0);
            a[0] = a[0] + b;
            return a;
        }
        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){
            b = b.slice(0);
            b[0] = a + b[0];
            return b;
        }
        if($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)){
            
            var i = 0, lenA = a.length, lenB = b.length;
            var retArr = [];
            while(i<lenA || i < lenB){
                if((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)){
                    retArr[i] = a[i] + b[i];
                }else{
                    retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];
                }
                i += 1;
            }
            return retArr;
        }
        return 0;
    }
    var add = sum;

    function sub(a,b) {
        var tOfA = typeof a;
        var tOfB = typeof b;
        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {
            if(tOfA === 'string') {
                a = parseInt(a);
            }
            if(tOfB === 'string') {
                b = parseInt(b);
            }
            return a - b;
        }
        if( $bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){
            a = a.slice(0);
            a[0] = a[0] - b;
            return a;
        }
        if(isNumerable(tOfA, a) &&  $bm_isInstanceOfArray(b)){
            b = b.slice(0);
            b[0] = a - b[0];
            return b;
        }
        if($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)){
            var i = 0, lenA = a.length, lenB = b.length;
            var retArr = [];
            while(i<lenA || i < lenB){
                if((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)){
                    retArr[i] = a[i] - b[i];
                }else{
                    retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];
                }
                i += 1;
            }
            return retArr;
        }
        return 0;
    }

    function mul(a,b) {
        var tOfA = typeof a;
        var tOfB = typeof b;
        var arr;
        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {
            return a * b;
        }

        var i, len;
        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){
            len = a.length;
            arr = createTypedArray('float32', len);
            for(i=0;i<len;i+=1){
                arr[i] = a[i] * b;
            }
            return arr;
        }
        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){
            len = b.length;
            arr = createTypedArray('float32', len);
            for(i=0;i<len;i+=1){
                arr[i] = a * b[i];
            }
            return arr;
        }
        return 0;
    }

    function div(a,b) {
        var tOfA = typeof a;
        var tOfB = typeof b;
        var arr;
        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {
            return a / b;
        }
        var i, len;
        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){
            len = a.length;
            arr = createTypedArray('float32', len);
            for(i=0;i<len;i+=1){
                arr[i] = a[i] / b;
            }
            return arr;
        }
        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){
            len = b.length;
            arr = createTypedArray('float32', len);
            for(i=0;i<len;i+=1){
                arr[i] = a / b[i];
            }
            return arr;
        }
        return 0;
    }
    function mod(a,b) {
        if(typeof a === 'string') {
            a = parseInt(a);
        }
        if(typeof b === 'string') {
            b = parseInt(b);
        }
        return a % b;
    }
    var $bm_sum = sum;
    var $bm_sub = sub;
    var $bm_mul = mul;
    var $bm_div = div;
    var $bm_mod = mod;

    function clamp(num, min, max) {
        if(min > max){
            var mm = max;
            max = min;
            min = mm;
        }
        return Math.min(Math.max(num, min), max);
    }

    function radiansToDegrees(val) {
        return val/degToRads;
    }
    var radians_to_degrees = radiansToDegrees;

    function degreesToRadians(val) {
        return val*degToRads;
    }
    var degrees_to_radians = radiansToDegrees;

    var helperLengthArray = [0,0,0,0,0,0];

    function length(arr1, arr2) {
        if (typeof arr1 === 'number' || arr1 instanceof Number) {
            arr2 = arr2 || 0;
            return Math.abs(arr1 - arr2);
        }
        if(!arr2) {
            arr2 = helperLengthArray;
        }
        var i, len = Math.min(arr1.length, arr2.length);
        var addedLength = 0;
        for (i = 0; i < len; i += 1) {
            addedLength += Math.pow(arr2[i] - arr1[i], 2);
        }
        return Math.sqrt(addedLength);
    }

    function normalize(vec) {
        return div(vec, length(vec));
    }

    function rgbToHsl(val) {
        var r = val[0]; var g = val[1]; var b = val[2];
        var max = Math.max(r, g, b), min = Math.min(r, g, b);
        var h, s, l = (max + min) / 2;

        if(max == min){
            h = s = 0; // achromatic
        }else{
            var d = max - min;
            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
            switch(max){
                case r: h = (g - b) / d + (g < b ? 6 : 0); break;
                case g: h = (b - r) / d + 2; break;
                case b: h = (r - g) / d + 4; break;
            }
            h /= 6;
        }

        return [h, s, l,val[3]];
    }

    function hue2rgb(p, q, t){
        if(t < 0) t += 1;
        if(t > 1) t -= 1;
        if(t < 1/6) return p + (q - p) * 6 * t;
        if(t < 1/2) return q;
        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;
        return p;
    }

    function hslToRgb(val){
        var h = val[0];
        var s = val[1];
        var l = val[2];

        var r, g, b;

        if(s === 0){
            r = g = b = l; // achromatic
        }else{

            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
            var p = 2 * l - q;
            r = hue2rgb(p, q, h + 1/3);
            g = hue2rgb(p, q, h);
            b = hue2rgb(p, q, h - 1/3);
        }

        return [r, g , b, val[3]];
    }

    function linear(t, tMin, tMax, value1, value2){
        if(value1 === undefined || value2 === undefined){
            value1 = tMin;
            value2 = tMax;
            tMin = 0;
            tMax = 1;
        }
        if(tMax < tMin) {
            var _tMin = tMax;
            tMax = tMin;
            tMin = _tMin;
        }
        if(t <= tMin) {
            return value1;
        }else if(t >= tMax){
            return value2;
        }
        var perc = tMax === tMin ? 0 : (t-tMin)/(tMax-tMin);
        if(!value1.length){
            return value1 + (value2-value1)*perc;
        }
        var i, len = value1.length;
        var arr = createTypedArray('float32', len);
        for(i=0;i<len;i+=1){
            arr[i] = value1[i] + (value2[i]-value1[i])*perc;
        }
        return arr;
    }
    function random(min,max){
        if(max === undefined){
            if(min === undefined){
                min = 0;
                max = 1;
            } else {
                max = min;
                min = undefined;
            }
        }
        if(max.length){
            var i, len = max.length;
            if(!min){
                min = createTypedArray('float32', len);
            }
            var arr = createTypedArray('float32', len);
            var rnd = BMMath.random();
            for(i=0;i<len;i+=1){
                arr[i] = min[i] + rnd*(max[i]-min[i]);
            }
            return arr;
        }
        if(min === undefined){
            min = 0;
        }
        var rndm = BMMath.random();
        return min + rndm*(max-min);
    }

    function createPath(points, inTangents, outTangents, closed) {
        var i, len = points.length;
        var path = shape_pool.newElement();
        path.setPathData(!!closed, len);
        var arrPlaceholder = [0,0], inVertexPoint, outVertexPoint;
        for(i = 0; i < len; i += 1) {
            inVertexPoint = (inTangents && inTangents[i]) ? inTangents[i] : arrPlaceholder;
            outVertexPoint = (outTangents && outTangents[i]) ? outTangents[i] : arrPlaceholder;
            path.setTripleAt(points[i][0],points[i][1],outVertexPoint[0] + points[i][0],outVertexPoint[1] + points[i][1],inVertexPoint[0] + points[i][0],inVertexPoint[1] + points[i][1],i,true);
        }
        return path;
    }

    function initiateExpression(elem,data,property){
        var val = data.x;
        var needsVelocity = /velocity(?![\w\d])/.test(val);
        var _needsRandom = val.indexOf('random') !== -1;
        var elemType = elem.data.ty;
        var transform,$bm_transform,content,effect;
        var thisProperty = property;
        thisProperty.valueAtTime = thisProperty.getValueAtTime;
        Object.defineProperty(thisProperty, 'value', {
            get: function() {
                return thisProperty.v
            }
        })
        elem.comp.frameDuration = 1/elem.comp.globalData.frameRate;
        elem.comp.displayStartTime = 0;
        var inPoint = elem.data.ip/elem.comp.globalData.frameRate;
        var outPoint = elem.data.op/elem.comp.globalData.frameRate;
        var width = elem.data.sw ? elem.data.sw : 0;
        var height = elem.data.sh ? elem.data.sh : 0;
        var name = elem.data.nm;
        var loopIn, loop_in, loopOut, loop_out, smooth;
        var toWorld,fromWorld,fromComp,toComp,fromCompToSurface, position, rotation, anchorPoint, scale, thisLayer, thisComp,mask,valueAtTime,velocityAtTime;
        var __expression_functions = [];
        if(data.xf) {
            var i, len = data.xf.length;
            for(i = 0; i < len; i += 1) {
                __expression_functions[i] = eval('(function(){ return ' + data.xf[i] + '}())');
            }
        }

        var scoped_bm_rt;
        var expression_function = eval('[function _expression_function(){' + val+';scoped_bm_rt=$bm_rt}' + ']')[0];
        var numKeys = property.kf ? data.k.length : 0;

        var active = !this.data || this.data.hd !== true;

        var wiggle = function wiggle(freq,amp){
            var i,j, len = this.pv.length ? this.pv.length : 1;
            var addedAmps = createTypedArray('float32', len);
            freq = 5;
            var iterations = Math.floor(time*freq);
            i = 0;
            j = 0;
            while(i<iterations){
                //var rnd = BMMath.random();
                for(j=0;j<len;j+=1){
                    addedAmps[j] += -amp + amp*2*BMMath.random();
                    //addedAmps[j] += -amp + amp*2*rnd;
                }
                i += 1;
            }
            //var rnd2 = BMMath.random();
            var periods = time*freq;
            var perc = periods - Math.floor(periods);
            var arr = createTypedArray('float32', len);
            if(len>1){
                for(j=0;j<len;j+=1){
                    arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*BMMath.random())*perc;
                    //arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*rnd)*perc;
                    //arr[i] = this.pv[i] + addedAmp + amp1*perc + amp2*(1-perc);
                }
                return arr;
            } else {
                return this.pv + addedAmps[0] + (-amp + amp*2*BMMath.random())*perc;
            }
        }.bind(this);

        if(thisProperty.loopIn) {
            loopIn = thisProperty.loopIn.bind(thisProperty);
            loop_in = loopIn;
        }

        if(thisProperty.loopOut) {
            loopOut = thisProperty.loopOut.bind(thisProperty);
            loop_out = loopOut;
        }

        if(thisProperty.smooth) {
            smooth = thisProperty.smooth.bind(thisProperty);
        }

        function loopInDuration(type,duration){
            return loopIn(type,duration,true);
        }

        function loopOutDuration(type,duration){
            return loopOut(type,duration,true);
        }

        if(this.getValueAtTime) {
            valueAtTime = this.getValueAtTime.bind(this);
        }

        if(this.getVelocityAtTime) {
            velocityAtTime = this.getVelocityAtTime.bind(this);
        }

        var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);

        function lookAt(elem1,elem2){
            var fVec = [elem2[0]-elem1[0],elem2[1]-elem1[1],elem2[2]-elem1[2]];
            var pitch = Math.atan2(fVec[0],Math.sqrt(fVec[1]*fVec[1]+fVec[2]*fVec[2]))/degToRads;
            var yaw = -Math.atan2(fVec[1],fVec[2])/degToRads;
            return [yaw,pitch,0];
        }

        function easeOut(t, tMin, tMax, val1, val2){
            return applyEase(easeOutBez, t, tMin, tMax, val1, val2);
        }

        function easeIn(t, tMin, tMax, val1, val2){
            return applyEase(easeInBez, t, tMin, tMax, val1, val2);
        }

        function ease(t, tMin, tMax, val1, val2){
            return applyEase(easeInOutBez, t, tMin, tMax, val1, val2);
        }

        function applyEase(fn, t, tMin, tMax, val1, val2) {
            if(val1 === undefined){
                val1 = tMin;
                val2 = tMax;
            } else {
                t = (t - tMin) / (tMax - tMin);
            }
            t = t > 1 ? 1 : t < 0 ? 0 : t;
            var mult = fn(t);
            if($bm_isInstanceOfArray(val1)) {
                var i, len = val1.length;
                var arr = createTypedArray('float32', len);
                for (i = 0; i < len; i += 1) {
                    arr[i] = (val2[i] - val1[i]) * mult + val1[i];
                }
                return arr;
            } else {
                return (val2 - val1) * mult + val1;
            }
        }

        function nearestKey(time){
            var i, len = data.k.length,index,keyTime;
            if(!data.k.length || typeof(data.k[0]) === 'number'){
                index = 0;
                keyTime = 0;
            } else {
                index = -1;
                time *= elem.comp.globalData.frameRate;
                if (time < data.k[0].t) {
                    index = 1;
                    keyTime = data.k[0].t;
                } else {
                    for(i=0;i<len-1;i+=1){
                        if(time === data.k[i].t){
                            index = i + 1;
                            keyTime = data.k[i].t;
                            break;
                        }else if(time>data.k[i].t && time<data.k[i+1].t){
                            if(time-data.k[i].t > data.k[i+1].t - time){
                                index = i + 2;
                                keyTime = data.k[i+1].t;
                            } else {
                                index = i + 1;
                                keyTime = data.k[i].t;
                            }
                            break;
                        }
                    }
                    if(index === -1){
                        index = i + 1;
                        keyTime = data.k[i].t;
                    }
                }
                
            }
            var ob = {};
            ob.index = index;
            ob.time = keyTime/elem.comp.globalData.frameRate;
            return ob;
        }

        function key(ind){
            var ob, i, len;
            if(!data.k.length || typeof(data.k[0]) === 'number'){
                throw new Error('The property has no keyframe at index ' + ind);
            }
            ind -= 1;
            ob = {
                time: data.k[ind].t/elem.comp.globalData.frameRate,
                value: []
            };
            var arr = data.k[ind].hasOwnProperty('s') ? data.k[ind].s : data.k[ind - 1].e;

            len = arr.length;
            for(i=0;i<len;i+=1){
                ob[i] = arr[i];
                ob.value[i] = arr[i]
            }
            return ob;
        }

        function framesToTime(frames, fps) { 
            if (!fps) {
                fps = elem.comp.globalData.frameRate;
            }
            return frames / fps;
        }

        function timeToFrames(t, fps) {
            if (!t && t !== 0) {
                t = time;
            }
            if (!fps) {
                fps = elem.comp.globalData.frameRate;
            }
            return t * fps;
        }

        function seedRandom(seed){
            BMMath.seedrandom(randSeed + seed);
        }

        function sourceRectAtTime() {
            return elem.sourceRectAtTime();
        }

        function substring(init, end) {
            if(typeof value === 'string') {
                if(end === undefined) {
                return value.substring(init)
                }
                return value.substring(init, end)
            }
            return '';
        }

        function substr(init, end) {
            if(typeof value === 'string') {
                if(end === undefined) {
                return value.substr(init)
                }
                return value.substr(init, end)
            }
            return '';
        }

        function posterizeTime(framesPerSecond) {
            time = framesPerSecond === 0 ? 0 : Math.floor(time * framesPerSecond) / framesPerSecond
            value = valueAtTime(time)
        }

        var time, velocity, value, text, textIndex, textTotal, selectorValue;
        var index = elem.data.ind;
        var hasParent = !!(elem.hierarchy && elem.hierarchy.length);
        var parent;
        var randSeed = Math.floor(Math.random()*1000000);
        var globalData = elem.globalData;
        function executeExpression(_value) {
            // globalData.pushExpression();
            value = _value;
            if (_needsRandom) {
                seedRandom(randSeed);
            }
            if (this.frameExpressionId === elem.globalData.frameId && this.propType !== 'textSelector') {
                return value;
            }
            if(this.propType === 'textSelector'){
                textIndex = this.textIndex;
                textTotal = this.textTotal;
                selectorValue = this.selectorValue;
            }
            if (!thisLayer) {
                text = elem.layerInterface.text;
                thisLayer = elem.layerInterface;
                thisComp = elem.comp.compInterface;
                toWorld = thisLayer.toWorld.bind(thisLayer);
                fromWorld = thisLayer.fromWorld.bind(thisLayer);
                fromComp = thisLayer.fromComp.bind(thisLayer);
                toComp = thisLayer.toComp.bind(thisLayer);
                mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null;
                fromCompToSurface = fromComp;
            }
            if (!transform) {
                transform = elem.layerInterface("ADBE Transform Group");
                $bm_transform = transform;
                if(transform) {
                    anchorPoint = transform.anchorPoint;
                    /*position = transform.position;
                    rotation = transform.rotation;
                    scale = transform.scale;*/
                }
            }
            
            if (elemType === 4 && !content) {
                content = thisLayer("ADBE Root Vectors Group");
            }
            if (!effect) {
                effect = thisLayer(4);
            }
            hasParent = !!(elem.hierarchy && elem.hierarchy.length);
            if (hasParent && !parent) {
                parent = elem.hierarchy[0].layerInterface;
            }
            time = this.comp.renderedFrame/this.comp.globalData.frameRate;
            if (needsVelocity) {
                velocity = velocityAtTime(time);
            }
            expression_function();
            this.frameExpressionId = elem.globalData.frameId;

            //TODO: Check if it's possible to return on ShapeInterface the .v value
            if (scoped_bm_rt.propType === "shape") {
                scoped_bm_rt = scoped_bm_rt.v;
            }
            // globalData.popExpression();
            return scoped_bm_rt;
        }
        return executeExpression;
    }

    ob.initiateExpression = initiateExpression;
    return ob;
}());
var expressionHelpers = (function(){

    function searchExpressions(elem,data,prop){
        if(data.x){
            prop.k = true;
            prop.x = true;
            prop.initiateExpression = ExpressionManager.initiateExpression;
            prop.effectsSequence.push(prop.initiateExpression(elem,data,prop).bind(prop));
        }
    }

    function getValueAtTime(frameNum) {
        frameNum *= this.elem.globalData.frameRate;
        frameNum -= this.offsetTime;
        if(frameNum !== this._cachingAtTime.lastFrame) {
            this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;
            this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);
            this._cachingAtTime.lastFrame = frameNum;
        }
        return this._cachingAtTime.value;

    }

    function getSpeedAtTime(frameNum) {
        var delta = -0.01;
        var v1 = this.getValueAtTime(frameNum);
        var v2 = this.getValueAtTime(frameNum + delta);
        var speed = 0;
        if(v1.length){
            var i;
            for(i=0;i<v1.length;i+=1){
                speed += Math.pow(v2[i] - v1[i], 2);
            }
            speed = Math.sqrt(speed) * 100;
        } else {
            speed = 0;
        }
        return speed;
    }

    function getVelocityAtTime(frameNum) {
        if(this.vel !== undefined){
            return this.vel;
        }
        var delta = -0.001;
        //frameNum += this.elem.data.st;
        var v1 = this.getValueAtTime(frameNum);
        var v2 = this.getValueAtTime(frameNum + delta);
        var velocity;
        if(v1.length){
            velocity = createTypedArray('float32', v1.length);
            var i;
            for(i=0;i<v1.length;i+=1){
                //removing frameRate
                //if needed, don't add it here
                //velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);
                velocity[i] = (v2[i] - v1[i])/delta;
            }
        } else {
            velocity = (v2 - v1)/delta;
        }
        return velocity;
    }

    function getStaticValueAtTime() {
        return this.pv;
    }

    function setGroupProperty(propertyGroup){
        this.propertyGroup = propertyGroup;
    }

	return {
		searchExpressions: searchExpressions,
		getSpeedAtTime: getSpeedAtTime,
		getVelocityAtTime: getVelocityAtTime,
		getValueAtTime: getValueAtTime,
		getStaticValueAtTime: getStaticValueAtTime,
		setGroupProperty: setGroupProperty,
	}
}());
(function addPropertyDecorator() {

    function loopOut(type,duration,durationFlag){
        if(!this.k || !this.keyframes){
            return this.pv;
        }
        type = type ? type.toLowerCase() : '';
        var currentFrame = this.comp.renderedFrame;
        var keyframes = this.keyframes;
        var lastKeyFrame = keyframes[keyframes.length - 1].t;
        if(currentFrame<=lastKeyFrame){
            return this.pv;
        }else{
            var cycleDuration, firstKeyFrame;
            if(!durationFlag){
                if(!duration || duration > keyframes.length - 1){
                    duration = keyframes.length - 1;
                }
                firstKeyFrame = keyframes[keyframes.length - 1 - duration].t;
                cycleDuration = lastKeyFrame - firstKeyFrame;
            } else {
                if(!duration){
                    cycleDuration = Math.max(0,lastKeyFrame - this.elem.data.ip);
                } else {
                    cycleDuration = Math.abs(lastKeyFrame - elem.comp.globalData.frameRate*duration);
                }
                firstKeyFrame = lastKeyFrame - cycleDuration;
            }
            var i, len, ret;
            if(type === 'pingpong') {
                var iterations = Math.floor((currentFrame - firstKeyFrame)/cycleDuration);
                if(iterations % 2 !== 0){
                    return this.getValueAtTime(((cycleDuration - (currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);
                }
            } else if(type === 'offset'){
                var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);
                var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);
                var current = this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame) / this.comp.globalData.frameRate, 0);
                var repeats = Math.floor((currentFrame - firstKeyFrame)/cycleDuration);
                if(this.pv.length){
                    ret = new Array(initV.length);
                    len = ret.length;
                    for(i=0;i<len;i+=1){
                        ret[i] = (endV[i]-initV[i])*repeats + current[i];
                    }
                    return ret;
                }
                return (endV-initV)*repeats + current;
            } else if(type === 'continue'){
                var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);
                var nextLastValue = this.getValueAtTime((lastKeyFrame - 0.001) / this.comp.globalData.frameRate, 0);
                if(this.pv.length){
                    ret = new Array(lastValue.length);
                    len = ret.length;
                    for(i=0;i<len;i+=1){
                        ret[i] = lastValue[i] + (lastValue[i]-nextLastValue[i])*((currentFrame - lastKeyFrame)/ this.comp.globalData.frameRate)/0.0005;
                    }
                    return ret;
                }
                return lastValue + (lastValue-nextLastValue)*(((currentFrame - lastKeyFrame))/0.001);
            }
            return this.getValueAtTime((((currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);
        }
    }

    function loopIn(type,duration, durationFlag) {
        if(!this.k){
            return this.pv;
        }
        type = type ? type.toLowerCase() : '';
        var currentFrame = this.comp.renderedFrame;
        var keyframes = this.keyframes;
        var firstKeyFrame = keyframes[0].t;
        if(currentFrame>=firstKeyFrame){
            return this.pv;
        }else{
            var cycleDuration, lastKeyFrame;
            if(!durationFlag){
                if(!duration || duration > keyframes.length - 1){
                    duration = keyframes.length - 1;
                }
                lastKeyFrame = keyframes[duration].t;
                cycleDuration = lastKeyFrame - firstKeyFrame;
            } else {
                if(!duration){
                    cycleDuration = Math.max(0,this.elem.data.op - firstKeyFrame);
                } else {
                    cycleDuration = Math.abs(elem.comp.globalData.frameRate*duration);
                }
                lastKeyFrame = firstKeyFrame + cycleDuration;
            }
            var i, len, ret;
            if(type === 'pingpong') {
                var iterations = Math.floor((firstKeyFrame - currentFrame)/cycleDuration);
                if(iterations % 2 === 0){
                    return this.getValueAtTime((((firstKeyFrame - currentFrame)%cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);
                }
            } else if(type === 'offset'){
                var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);
                var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);
                var current = this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame)%cycleDuration +  firstKeyFrame) / this.comp.globalData.frameRate, 0);
                var repeats = Math.floor((firstKeyFrame - currentFrame)/cycleDuration)+1;
                if(this.pv.length){
                    ret = new Array(initV.length);
                    len = ret.length;
                    for(i=0;i<len;i+=1){
                        ret[i] = current[i]-(endV[i]-initV[i])*repeats;
                    }
                    return ret;
                }
                return current-(endV-initV)*repeats;
            } else if(type === 'continue'){
                var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);
                var nextFirstValue = this.getValueAtTime((firstKeyFrame + 0.001) / this.comp.globalData.frameRate, 0);
                if(this.pv.length){
                    ret = new Array(firstValue.length);
                    len = ret.length;
                    for(i=0;i<len;i+=1){
                        ret[i] = firstValue[i] + (firstValue[i]-nextFirstValue[i])*(firstKeyFrame - currentFrame)/0.001;
                    }
                    return ret;
                }
                return firstValue + (firstValue-nextFirstValue)*(firstKeyFrame - currentFrame)/0.001;
            }
            return this.getValueAtTime(((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);
        }
    }

    function smooth(width, samples) {
        if (!this.k){
            return this.pv;
        }
        width = (width || 0.4) * 0.5;
        samples = Math.floor(samples || 5);
        if (samples <= 1) {
            return this.pv;
        }
        var currentTime = this.comp.renderedFrame / this.comp.globalData.frameRate;
        var initFrame = currentTime - width;
        var endFrame = currentTime + width;
        var sampleFrequency = samples > 1 ? (endFrame - initFrame) / (samples - 1) : 1;
        var i = 0, j = 0;
        var value;
        if (this.pv.length) {
            value = createTypedArray('float32', this.pv.length);
        } else {
            value = 0;
        }
        var sampleValue;
        while (i < samples) {
            sampleValue = this.getValueAtTime(initFrame + i * sampleFrequency);
            if(this.pv.length) {
                for (j = 0; j < this.pv.length; j += 1) {
                    value[j] += sampleValue[j];
                }
            } else {
                value += sampleValue;
            }
            i += 1;
        }
        if(this.pv.length) {
            for (j = 0; j < this.pv.length; j += 1) {
                value[j] /= samples;
            }
        } else {
            value /= samples;
        }
        return value;
    }

    function getValueAtTime(frameNum) {
        frameNum *= this.elem.globalData.frameRate;
        frameNum -= this.offsetTime;
        if(frameNum !== this._cachingAtTime.lastFrame) {
            this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;
            this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);
            this._cachingAtTime.lastFrame = frameNum;
        }
        return this._cachingAtTime.value;

    }

    function getTransformValueAtTime(time) {
        if (!this._transformCachingAtTime) {
            this._transformCachingAtTime = {
                v: new Matrix(),
            };
        }
        ////
        var matrix = this._transformCachingAtTime.v;
        matrix.cloneFromProps(this.pre.props);
        if (this.appliedTransformations < 1) {
            var anchor = this.a.getValueAtTime(time);
            matrix.translate(-anchor[0], -anchor[1], anchor[2]);
        }
        if (this.appliedTransformations < 2) {
            var scale = this.s.getValueAtTime(time);
            matrix.scale(scale[0], scale[1], scale[2]);
        }
        if (this.sk && this.appliedTransformations < 3) {
            var skew = this.sk.getValueAtTime(time);
            var skewAxis = this.sa.getValueAtTime(time);
            matrix.skewFromAxis(-skew, skewAxis);
        }
        if (this.r && this.appliedTransformations < 4) {
            var rotation = this.r.getValueAtTime(time);
            matrix.rotate(-rotation);
        } else if (!this.r && this.appliedTransformations < 4){
            var rotationZ = this.rz.getValueAtTime(time);
            var rotationY = this.ry.getValueAtTime(time);
            var rotationX = this.rx.getValueAtTime(time);
            var orientation = this.or.getValueAtTime(time);
            matrix.rotateZ(-rotationZ.v)
            .rotateY(rotationY.v)
            .rotateX(rotationX.v)
            .rotateZ(-orientation[2])
            .rotateY(orientation[1])
            .rotateX(orientation[0]);
        }
        if (this.data.p && this.data.p.s) {
            var positionX = this.px.getValueAtTime(time);
            var positionY = this.py.getValueAtTime(time);
            if (this.data.p.z) {
                var positionZ = this.pz.getValueAtTime(time);
                matrix.translate(positionX, positionY, -positionZ);
            } else {
                matrix.translate(positionX, positionY, 0);
            }
        } else {
            var position = this.p.getValueAtTime(time);
            matrix.translate(position[0], position[1], -position[2]);
        }
        return matrix;
        ////
    }

    function getTransformStaticValueAtTime(time) {

    }

    var getTransformProperty = TransformPropertyFactory.getTransformProperty;
    TransformPropertyFactory.getTransformProperty = function(elem, data, container) {
        var prop = getTransformProperty(elem, data, container);
        if(prop.dynamicProperties.length) {
            prop.getValueAtTime = getTransformValueAtTime.bind(prop);
        } else {
            prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop);
        }
        prop.setGroupProperty = expressionHelpers.setGroupProperty;
        return prop;
    };

    var propertyGetProp = PropertyFactory.getProp;
    PropertyFactory.getProp = function(elem,data,type, mult, container){
        var prop = propertyGetProp(elem,data,type, mult, container);
        //prop.getVelocityAtTime = getVelocityAtTime;
        //prop.loopOut = loopOut;
        //prop.loopIn = loopIn;
        if(prop.kf){
            prop.getValueAtTime = expressionHelpers.getValueAtTime.bind(prop);
        } else {
            prop.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(prop);
        }
        prop.setGroupProperty = expressionHelpers.setGroupProperty;
        prop.loopOut = loopOut;
        prop.loopIn = loopIn;
        prop.smooth = smooth;
        prop.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(prop);
        prop.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(prop);
        prop.numKeys = data.a === 1 ? data.k.length : 0;
        prop.propertyIndex = data.ix;
        var value = 0;
        if(type !== 0) {
            value = createTypedArray('float32', data.a === 1 ?  data.k[0].s.length : data.k.length);
        }
        prop._cachingAtTime = {
            lastFrame: initialDefaultFrame,
            lastIndex: 0,
            value: value
        };
        expressionHelpers.searchExpressions(elem,data,prop);
        if(prop.k){
            container.addDynamicProperty(prop);
        }

        return prop;
    };

    function getShapeValueAtTime(frameNum) {
        //For now this caching object is created only when needed instead of creating it when the shape is initialized.
        if (!this._cachingAtTime) {
            this._cachingAtTime = {
                shapeValue: shape_pool.clone(this.pv),
                lastIndex: 0,
                lastTime: initialDefaultFrame
            };
        }
        
        frameNum *= this.elem.globalData.frameRate;
        frameNum -= this.offsetTime;
        if(frameNum !== this._cachingAtTime.lastTime) {
            this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < frameNum ? this._caching.lastIndex : 0;
            this._cachingAtTime.lastTime = frameNum;
            this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime);
        }
        return this._cachingAtTime.shapeValue;
    }

    var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction();
    var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction();

    function ShapeExpressions(){}
    ShapeExpressions.prototype = {
        vertices: function(prop, time){
            if (this.k) {
                this.getValue();
            }
            var shapePath = this.v;
            if(time !== undefined) {
                shapePath = this.getValueAtTime(time, 0);
            }
            var i, len = shapePath._length;
            var vertices = shapePath[prop];
            var points = shapePath.v;
            var arr = createSizedArray(len);
            for(i = 0; i < len; i += 1) {
                if(prop === 'i' || prop === 'o') {
                    arr[i] = [vertices[i][0] - points[i][0], vertices[i][1] - points[i][1]];
                } else {
                    arr[i] = [vertices[i][0], vertices[i][1]];
                }
                
            }
            return arr;
        },
        points: function(time){
            return this.vertices('v', time);
        },
        inTangents: function(time){
            return this.vertices('i', time);
        },
        outTangents: function(time){
            return this.vertices('o', time);
        },
        isClosed: function(){
            return this.v.c;
        },
        pointOnPath: function(perc, time){
            var shapePath = this.v;
            if(time !== undefined) {
                shapePath = this.getValueAtTime(time, 0);
            }
            if(!this._segmentsLength) {
                this._segmentsLength = bez.getSegmentsLength(shapePath);
            }

            var segmentsLength = this._segmentsLength;
            var lengths = segmentsLength.lengths;
            var lengthPos = segmentsLength.totalLength * perc;
            var i = 0, len = lengths.length;
            var j = 0, jLen;
            var accumulatedLength = 0, pt;
            while(i < len) {
                if(accumulatedLength + lengths[i].addedLength > lengthPos) {
                    var initIndex = i;
                    var endIndex = (shapePath.c && i === len - 1) ? 0 : i + 1;
                    var segmentPerc = (lengthPos - accumulatedLength)/lengths[i].addedLength;
                    pt = bez.getPointInSegment(shapePath.v[initIndex], shapePath.v[endIndex], shapePath.o[initIndex], shapePath.i[endIndex], segmentPerc, lengths[i]);
                    break;
                } else {
                    accumulatedLength += lengths[i].addedLength;
                }
                i += 1;
            }
            if(!pt){
                pt = shapePath.c ? [shapePath.v[0][0],shapePath.v[0][1]]:[shapePath.v[shapePath._length-1][0],shapePath.v[shapePath._length-1][1]];
            }
            return pt;
        },
        vectorOnPath: function(perc, time, vectorType){
            //perc doesn't use triple equality because it can be a Number object as well as a primitive.
            perc = perc == 1 ? this.v.c ? 0 : 0.999 : perc;
            var pt1 = this.pointOnPath(perc, time);
            var pt2 = this.pointOnPath(perc + 0.001, time);
            var xLength = pt2[0] - pt1[0];
            var yLength = pt2[1] - pt1[1];
            var magnitude = Math.sqrt(Math.pow(xLength,2) + Math.pow(yLength,2));
            if (magnitude === 0) {
                return [0,0];
            }
            var unitVector = vectorType === 'tangent' ? [xLength/magnitude, yLength/magnitude] : [-yLength/magnitude, xLength/magnitude];
            return unitVector;
        },
        tangentOnPath: function(perc, time){
            return this.vectorOnPath(perc, time, 'tangent');
        },
        normalOnPath: function(perc, time){
            return this.vectorOnPath(perc, time, 'normal');
        },
        setGroupProperty: expressionHelpers.setGroupProperty,
        getValueAtTime: expressionHelpers.getStaticValueAtTime
    };
    extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction);
    extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction);
    KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime;
    KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression;

    var propertyGetShapeProp = ShapePropertyFactory.getShapeProp;
    ShapePropertyFactory.getShapeProp = function(elem,data,type, arr, trims){
        var prop = propertyGetShapeProp(elem,data,type, arr, trims);
        prop.propertyIndex = data.ix;
        prop.lock = false;
        if(type === 3){
            expressionHelpers.searchExpressions(elem,data.pt,prop);
        } else if(type === 4){
            expressionHelpers.searchExpressions(elem,data.ks,prop);
        }
        if(prop.k){
            elem.addDynamicProperty(prop);
        }
        return prop;
    };
}());
(function addDecorator() {

    function searchExpressions(){
        if(this.data.d.x){
            this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem,this.data.d,this);
            this.addEffect(this.getExpressionValue.bind(this));
            return true;
        }
    }

    TextProperty.prototype.getExpressionValue = function(currentValue, text) {
        var newValue = this.calculateExpression(text);
        if(currentValue.t !== newValue) {
            var newData = {};
            this.copyData(newData, currentValue);
            newData.t = newValue.toString();
            newData.__complete = false;
            return newData;
        }
        return currentValue;
    }

    TextProperty.prototype.searchProperty = function(){

        var isKeyframed = this.searchKeyframes();
        var hasExpressions = this.searchExpressions();
        this.kf = isKeyframed || hasExpressions;
        return this.kf;
    };

    TextProperty.prototype.searchExpressions = searchExpressions;
    
}());
var ShapePathInterface = (

	function() {

		return function pathInterfaceFactory(shape,view,propertyGroup){
		    var prop = view.sh;

		    function interfaceFunction(val){
		        if(val === 'Shape' || val === 'shape' || val === 'Path' || val === 'path' || val === 'ADBE Vector Shape' || val === 2){
		            return interfaceFunction.path;
		        }
		    }

		    var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
		    prop.setGroupProperty(PropertyInterface('Path', _propertyGroup));
		    Object.defineProperties(interfaceFunction, {
		        'path': {
		            get: function(){
		                if(prop.k){
		                    prop.getValue();
		                }
		                return prop;
		            }
		        },
		        'shape': {
		            get: function(){
		                if(prop.k){
		                    prop.getValue();
		                }
		                return prop;
		            }
		        },
		        '_name': { value: shape.nm },
		        'ix': { value: shape.ix },
		        'propertyIndex': { value: shape.ix },
		        'mn': { value: shape.mn },
		        'propertyGroup': {value: propertyGroup},
		    });
		    return interfaceFunction;
		}
	}()
)
var propertyGroupFactory = (function() {
	return function(interfaceFunction, parentPropertyGroup) {
		return function(val) {
			val = val === undefined ? 1 : val
			if(val <= 0){
			    return interfaceFunction;
			} else{
			    return parentPropertyGroup(val-1);
			}
		}
	}
}())
var PropertyInterface = (function() {
	return function(propertyName, propertyGroup) {

		var interfaceFunction = {
			_name: propertyName
		}

		function _propertyGroup(val){
		    val = val === undefined ? 1 : val
		    if(val <= 0){
		        return interfaceFunction;
		    } else {
		        return propertyGroup(--val);
		    }
		}

		return _propertyGroup;
	}
}())
var ShapeExpressionInterface = (function(){

    function iterateElements(shapes,view, propertyGroup){
        var arr = [];
        var i, len = shapes ? shapes.length : 0;
        for(i=0;i<len;i+=1){
            if(shapes[i].ty == 'gr'){
                arr.push(groupInterfaceFactory(shapes[i],view[i],propertyGroup));
            }else if(shapes[i].ty == 'fl'){
                arr.push(fillInterfaceFactory(shapes[i],view[i],propertyGroup));
            }else if(shapes[i].ty == 'st'){
                arr.push(strokeInterfaceFactory(shapes[i],view[i],propertyGroup));
            }else if(shapes[i].ty == 'tm'){
                arr.push(trimInterfaceFactory(shapes[i],view[i],propertyGroup));
            }else if(shapes[i].ty == 'tr'){
                //arr.push(transformInterfaceFactory(shapes[i],view[i],propertyGroup));
            }else if(shapes[i].ty == 'el'){
                arr.push(ellipseInterfaceFactory(shapes[i],view[i],propertyGroup));
            }else if(shapes[i].ty == 'sr'){
                arr.push(starInterfaceFactory(shapes[i],view[i],propertyGroup));
            } else if(shapes[i].ty == 'sh'){
                arr.push(ShapePathInterface(shapes[i],view[i],propertyGroup));
            } else if(shapes[i].ty == 'rc'){
                arr.push(rectInterfaceFactory(shapes[i],view[i],propertyGroup));
            } else if(shapes[i].ty == 'rd'){
                arr.push(roundedInterfaceFactory(shapes[i],view[i],propertyGroup));
            } else if(shapes[i].ty == 'rp'){
                arr.push(repeaterInterfaceFactory(shapes[i],view[i],propertyGroup));
            }
        }
        return arr;
    }

    function contentsInterfaceFactory(shape,view, propertyGroup){
       var interfaces;
       var interfaceFunction = function _interfaceFunction(value){
           var i = 0, len = interfaces.length;
            while(i<len){
                if(interfaces[i]._name === value || interfaces[i].mn === value || interfaces[i].propertyIndex === value || interfaces[i].ix === value || interfaces[i].ind === value){
                   return interfaces[i];
                }
                i+=1;
            }
            if(typeof value === 'number'){
               return interfaces[value-1];
            }
       };

       interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
       interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup);
       interfaceFunction.numProperties = interfaces.length;
       var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1],view.it[view.it.length - 1],interfaceFunction.propertyGroup);
       interfaceFunction.transform = transformInterface;
       interfaceFunction.propertyIndex = shape.cix;
       interfaceFunction._name = shape.nm;

       return interfaceFunction;
   }

    function groupInterfaceFactory(shape,view, propertyGroup){
        var interfaceFunction = function _interfaceFunction(value){
            switch(value){
                case 'ADBE Vectors Group':
                case 'Contents':
                case 2:
                    return interfaceFunction.content;
                //Not necessary for now. Keeping them here in case a new case appears
                //case 'ADBE Vector Transform Group':
                //case 3:
                default:
                    return interfaceFunction.transform;
            }
        };
        interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
        var content = contentsInterfaceFactory(shape,view,interfaceFunction.propertyGroup);
        var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1],view.it[view.it.length - 1],interfaceFunction.propertyGroup);
        interfaceFunction.content = content;
        interfaceFunction.transform = transformInterface;
        Object.defineProperty(interfaceFunction, '_name', {
            get: function(){
                return shape.nm;
            }
        });
        //interfaceFunction.content = interfaceFunction;
        interfaceFunction.numProperties = shape.np;
        interfaceFunction.propertyIndex = shape.ix;
        interfaceFunction.nm = shape.nm;
        interfaceFunction.mn = shape.mn;
        return interfaceFunction;
    }

    function fillInterfaceFactory(shape,view,propertyGroup){
        function interfaceFunction(val){
            if(val === 'Color' || val === 'color'){
                return interfaceFunction.color;
            } else if(val === 'Opacity' || val === 'opacity'){
                return interfaceFunction.opacity;
            }
        }
        Object.defineProperties(interfaceFunction, {
            'color': {
                get: ExpressionPropertyInterface(view.c)
            },
            'opacity': {
                get: ExpressionPropertyInterface(view.o)
            },
            '_name': { value: shape.nm },
            'mn': { value: shape.mn }
        });

        view.c.setGroupProperty(PropertyInterface('Color', propertyGroup));
        view.o.setGroupProperty(PropertyInterface('Opacity', propertyGroup));
        return interfaceFunction;
    }

    function strokeInterfaceFactory(shape,view,propertyGroup){
        var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
        var _dashPropertyGroup = propertyGroupFactory(dashOb, _propertyGroup);
        function addPropertyToDashOb(i) {
            Object.defineProperty(dashOb, shape.d[i].nm, {
                get: ExpressionPropertyInterface(view.d.dataProps[i].p)
            });
        }
        var i, len = shape.d ? shape.d.length : 0;
        var dashOb = {};
        for (i = 0; i < len; i += 1) {
            addPropertyToDashOb(i);
            view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);
        }

        function interfaceFunction(val){
            if(val === 'Color' || val === 'color'){
                return interfaceFunction.color;
            } else if(val === 'Opacity' || val === 'opacity'){
                return interfaceFunction.opacity;
            } else if(val === 'Stroke Width' || val === 'stroke width'){
                return interfaceFunction.strokeWidth;
            }
        }
        Object.defineProperties(interfaceFunction, {
            'color': {
                get: ExpressionPropertyInterface(view.c)
            },
            'opacity': {
                get: ExpressionPropertyInterface(view.o)
            },
            'strokeWidth': {
                get: ExpressionPropertyInterface(view.w)
            },
            'dash': {
                get: function() {
                    return dashOb;
                }
            },
            '_name': { value: shape.nm },
            'mn': { value: shape.mn }
        });

        view.c.setGroupProperty(PropertyInterface('Color', _propertyGroup));
        view.o.setGroupProperty(PropertyInterface('Opacity', _propertyGroup));
        view.w.setGroupProperty(PropertyInterface('Stroke Width', _propertyGroup));
        return interfaceFunction;
    }

    function trimInterfaceFactory(shape,view,propertyGroup){

        function interfaceFunction(val){
            if(val === shape.e.ix || val === 'End' || val === 'end'){
                return interfaceFunction.end;
            }
            if(val === shape.s.ix){
                return interfaceFunction.start;
            }
            if(val === shape.o.ix){
                return interfaceFunction.offset;
            }
        }

        var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
        interfaceFunction.propertyIndex = shape.ix;

        view.s.setGroupProperty(PropertyInterface('Start', _propertyGroup));
        view.e.setGroupProperty(PropertyInterface('End', _propertyGroup));
        view.o.setGroupProperty(PropertyInterface('Offset', _propertyGroup));
        interfaceFunction.propertyIndex = shape.ix;
        interfaceFunction.propertyGroup = propertyGroup;

        Object.defineProperties(interfaceFunction, {
            'start': {
                get: ExpressionPropertyInterface(view.s)
            },
            'end': {
                get: ExpressionPropertyInterface(view.e)
            },
            'offset': {
                get: ExpressionPropertyInterface(view.o)
            },
            '_name': { value: shape.nm }
        });
        interfaceFunction.mn = shape.mn;
        return interfaceFunction;
    }

    function transformInterfaceFactory(shape,view,propertyGroup){

        function interfaceFunction(value){
            if(shape.a.ix === value || value === 'Anchor Point'){
                return interfaceFunction.anchorPoint;
            }
            if(shape.o.ix === value || value === 'Opacity'){
                return interfaceFunction.opacity;
            }
            if(shape.p.ix === value || value === 'Position'){
                return interfaceFunction.position;
            }
            if(shape.r.ix === value || value === 'Rotation' || value === 'ADBE Vector Rotation'){
                return interfaceFunction.rotation;
            }
            if(shape.s.ix === value || value === 'Scale'){
                return interfaceFunction.scale;
            }
            if(shape.sk && shape.sk.ix === value || value === 'Skew'){
                return interfaceFunction.skew;
            }
            if(shape.sa && shape.sa.ix === value || value === 'Skew Axis'){
                return interfaceFunction.skewAxis;
            }
        }
        
        var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
        view.transform.mProps.o.setGroupProperty(PropertyInterface('Opacity', _propertyGroup));
        view.transform.mProps.p.setGroupProperty(PropertyInterface('Position', _propertyGroup));
        view.transform.mProps.a.setGroupProperty(PropertyInterface('Anchor Point', _propertyGroup));
        view.transform.mProps.s.setGroupProperty(PropertyInterface('Scale', _propertyGroup));
        view.transform.mProps.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup));
        if(view.transform.mProps.sk){
            view.transform.mProps.sk.setGroupProperty(PropertyInterface('Skew', _propertyGroup));
            view.transform.mProps.sa.setGroupProperty(PropertyInterface('Skew Angle', _propertyGroup));
        }
        view.transform.op.setGroupProperty(PropertyInterface('Opacity', _propertyGroup));
        Object.defineProperties(interfaceFunction, {
            'opacity': {
                get: ExpressionPropertyInterface(view.transform.mProps.o)
            },
            'position': {
                get: ExpressionPropertyInterface(view.transform.mProps.p)
            },
            'anchorPoint': {
                get: ExpressionPropertyInterface(view.transform.mProps.a)
            },
            'scale': {
                get: ExpressionPropertyInterface(view.transform.mProps.s)
            },
            'rotation': {
                get: ExpressionPropertyInterface(view.transform.mProps.r)
            },
            'skew': {
                get: ExpressionPropertyInterface(view.transform.mProps.sk)
            },
            'skewAxis': {
                get: ExpressionPropertyInterface(view.transform.mProps.sa)
            },
            '_name': { value: shape.nm }
        });
        interfaceFunction.ty = 'tr';
        interfaceFunction.mn = shape.mn;
        interfaceFunction.propertyGroup = propertyGroup;
        return interfaceFunction;
    }

    function ellipseInterfaceFactory(shape,view,propertyGroup){

        function interfaceFunction(value){
            if(shape.p.ix === value){
                return interfaceFunction.position;
            }
            if(shape.s.ix === value){
                return interfaceFunction.size;
            }
        }
        var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
        interfaceFunction.propertyIndex = shape.ix;
        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;
        prop.s.setGroupProperty(PropertyInterface('Size', _propertyGroup));
        prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup));

        Object.defineProperties(interfaceFunction, {
            'size': {
                get: ExpressionPropertyInterface(prop.s)
            },
            'position': {
                get: ExpressionPropertyInterface(prop.p)
            },
            '_name': { value: shape.nm }
        });
        interfaceFunction.mn = shape.mn;
        return interfaceFunction;
    }

    function starInterfaceFactory(shape,view,propertyGroup){

        function interfaceFunction(value){
            if(shape.p.ix === value){
                return interfaceFunction.position;
            }
            if(shape.r.ix === value){
                return interfaceFunction.rotation;
            }
            if(shape.pt.ix === value){
                return interfaceFunction.points;
            }
            if(shape.or.ix === value || 'ADBE Vector Star Outer Radius' === value){
                return interfaceFunction.outerRadius;
            }
            if(shape.os.ix === value){
                return interfaceFunction.outerRoundness;
            }
            if(shape.ir && (shape.ir.ix === value || 'ADBE Vector Star Inner Radius' === value)){
                return interfaceFunction.innerRadius;
            }
            if(shape.is && shape.is.ix === value){
                return interfaceFunction.innerRoundness;
            }

        }

        var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;
        interfaceFunction.propertyIndex = shape.ix;
        prop.or.setGroupProperty(PropertyInterface('Outer Radius', _propertyGroup));
        prop.os.setGroupProperty(PropertyInterface('Outer Roundness', _propertyGroup));
        prop.pt.setGroupProperty(PropertyInterface('Points', _propertyGroup));
        prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup));
        prop.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup));
        if(shape.ir){
            prop.ir.setGroupProperty(PropertyInterface('Inner Radius', _propertyGroup));
            prop.is.setGroupProperty(PropertyInterface('Inner Roundness', _propertyGroup));
        }

        Object.defineProperties(interfaceFunction, {
            'position': {
                get: ExpressionPropertyInterface(prop.p)
            },
            'rotation': {
                get: ExpressionPropertyInterface(prop.r)
            },
            'points': {
                get: ExpressionPropertyInterface(prop.pt)
            },
            'outerRadius': {
                get: ExpressionPropertyInterface(prop.or)
            },
            'outerRoundness': {
                get: ExpressionPropertyInterface(prop.os)
            },
            'innerRadius': {
                get: ExpressionPropertyInterface(prop.ir)
            },
            'innerRoundness': {
                get: ExpressionPropertyInterface(prop.is)
            },
            '_name': { value: shape.nm }
        });
        interfaceFunction.mn = shape.mn;
        return interfaceFunction;
    }

    function rectInterfaceFactory(shape,view,propertyGroup){

        function interfaceFunction(value){
            if(shape.p.ix === value){
                return interfaceFunction.position;
            }
            if(shape.r.ix === value){
                return interfaceFunction.roundness;
            }
            if(shape.s.ix === value || value === 'Size' || value === 'ADBE Vector Rect Size'){
                return interfaceFunction.size;
            }

        }
        var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);

        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;
        interfaceFunction.propertyIndex = shape.ix;
        prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup));
        prop.s.setGroupProperty(PropertyInterface('Size', _propertyGroup));
        prop.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup));

        Object.defineProperties(interfaceFunction, {
            'position': {
                get: ExpressionPropertyInterface(prop.p)
            },
            'roundness': {
                get: ExpressionPropertyInterface(prop.r)
            },
            'size': {
                get: ExpressionPropertyInterface(prop.s)
            },
            '_name': { value: shape.nm }
        });
        interfaceFunction.mn = shape.mn;
        return interfaceFunction;
    }

    function roundedInterfaceFactory(shape,view,propertyGroup){
       
        function interfaceFunction(value){
            if(shape.r.ix === value || 'Round Corners 1' === value){
                return interfaceFunction.radius;
            }
        }

        var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
        var prop = view;
        interfaceFunction.propertyIndex = shape.ix;
        prop.rd.setGroupProperty(PropertyInterface('Radius', _propertyGroup));

        Object.defineProperties(interfaceFunction, {
            'radius': {
                get: ExpressionPropertyInterface(prop.rd)
            },
            '_name': { value: shape.nm }
        });
        interfaceFunction.mn = shape.mn;
        return interfaceFunction;
    }

    function repeaterInterfaceFactory(shape,view,propertyGroup){

        function interfaceFunction(value){
            if(shape.c.ix === value || 'Copies' === value){
                return interfaceFunction.copies;
            } else if(shape.o.ix === value || 'Offset' === value){
                return interfaceFunction.offset;
            }
        }

        var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
        var prop = view;
        interfaceFunction.propertyIndex = shape.ix;
        prop.c.setGroupProperty(PropertyInterface('Copies', _propertyGroup));
        prop.o.setGroupProperty(PropertyInterface('Offset', _propertyGroup));
        Object.defineProperties(interfaceFunction, {
            'copies': {
                get: ExpressionPropertyInterface(prop.c)
            },
            'offset': {
                get: ExpressionPropertyInterface(prop.o)
            },
            '_name': { value: shape.nm }
        });
        interfaceFunction.mn = shape.mn;
        return interfaceFunction;
    }

    return function(shapes,view,propertyGroup) {
        var interfaces;
        function _interfaceFunction(value){
            if(typeof value === 'number'){
                value = value === undefined ? 1 : value
                if (value === 0) {
                    return propertyGroup
                } else {
                    return interfaces[value-1];
                }
            } else {
                var i = 0, len = interfaces.length;
                while(i<len){
                    if(interfaces[i]._name === value){
                        return interfaces[i];
                    }
                    i+=1;
                }
            }
        }
        _interfaceFunction.propertyGroup = propertyGroup;
        interfaces = iterateElements(shapes, view, _interfaceFunction);
        _interfaceFunction.numProperties = interfaces.length;
        return _interfaceFunction;
    };
}());

var TextExpressionInterface = (function(){
	return function(elem){
        var _prevValue, _sourceText;
        function _thisLayerFunction(name){
            switch(name){
                case "ADBE Text Document":
                    return _thisLayerFunction.sourceText;
            }
        }
        Object.defineProperty(_thisLayerFunction, "sourceText", {
            get: function(){
                elem.textProperty.getValue()
                var stringValue = elem.textProperty.currentData.t;
                if(stringValue !== _prevValue) {
                    elem.textProperty.currentData.t = _prevValue;
                    _sourceText = new String(stringValue);
                    //If stringValue is an empty string, eval returns undefined, so it has to be returned as a String primitive
                    _sourceText.value = stringValue ? stringValue : new String(stringValue);
                }
                return _sourceText;
            }
        });
        return _thisLayerFunction;
    };
}());
var LayerExpressionInterface = (function (){
    function toWorld(arr, time){
        var toWorldMat = new Matrix();
        toWorldMat.reset();
        var transformMat;
        if (time !== undefined) {
            toWorldMat = this._elem.finalTransform.mProp.getValueAtTime(time);
        } else {
            transformMat = this._elem.finalTransform.mProp;
            transformMat.applyToMatrix(toWorldMat);
        }
        if(this._elem.hierarchy && this._elem.hierarchy.length){
            var i, len = this._elem.hierarchy.length;
            for(i=0;i<len;i+=1){
                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);
            }
            return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);
        }
        return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);
    }
    function fromWorld(arr, time){
        var toWorldMat = new Matrix();
        toWorldMat.reset();
        var transformMat;
        if (time !== undefined) {
            toWorldMat = this._elem.finalTransform.mProp.getValueAtTime(time);
        } else {
            transformMat = this._elem.finalTransform.mProp;
            transformMat.applyToMatrix(toWorldMat);
        }
        if (this._elem.hierarchy && this._elem.hierarchy.length){
            var i, len = this._elem.hierarchy.length;
            for(i=0;i<len;i+=1){
                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);
            }
            return toWorldMat.inversePoint(arr);
        }
        return toWorldMat.inversePoint(arr);
    }
    function fromComp(arr){
        var toWorldMat = new Matrix();
        toWorldMat.reset();
        this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);
        if(this._elem.hierarchy && this._elem.hierarchy.length){
            var i, len = this._elem.hierarchy.length;
            for(i=0;i<len;i+=1){
                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);
            }
            return toWorldMat.inversePoint(arr);
        }
        return toWorldMat.inversePoint(arr);
    }

    function sampleImage() {
        return [1,1,1,1];
    }


    return function(elem){

        var transformInterface;

        function _registerMaskInterface(maskManager){
            _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem);
        }
        function _registerEffectsInterface(effects){
            _thisLayerFunction.effect = effects;
        }

        function _thisLayerFunction(name){
            switch(name){
                case "ADBE Root Vectors Group":
                case "Contents":
                case 2:
                    return _thisLayerFunction.shapeInterface;
                case 1:
                case 6:
                case "Transform":
                case "transform":
                case "ADBE Transform Group":
                    return transformInterface;
                case 4:
                case "ADBE Effect Parade":
                case "effects":
                case "Effects":
                    return _thisLayerFunction.effect;
                case "ADBE Text Properties":
                    return _thisLayerFunction.textInterface;
            }
        }
        _thisLayerFunction.toWorld = toWorld;
        _thisLayerFunction.fromWorld = fromWorld;
        _thisLayerFunction.toComp = toWorld;
        _thisLayerFunction.fromComp = fromComp;
        _thisLayerFunction.sampleImage = sampleImage;
        _thisLayerFunction.sourceRectAtTime = elem.sourceRectAtTime.bind(elem);
        _thisLayerFunction._elem = elem;
        transformInterface = TransformExpressionInterface(elem.finalTransform.mProp);
        var anchorPointDescriptor = getDescriptor(transformInterface, 'anchorPoint');
        Object.defineProperties(_thisLayerFunction,{
            hasParent: {
                get: function(){
                    return elem.hierarchy.length;
                }
            },
            parent: {
                get: function(){
                    return elem.hierarchy[0].layerInterface;
                }
            },
            rotation: getDescriptor(transformInterface, 'rotation'),
            scale: getDescriptor(transformInterface, 'scale'),
            position: getDescriptor(transformInterface, 'position'),
            opacity: getDescriptor(transformInterface, 'opacity'),
            anchorPoint: anchorPointDescriptor,
            anchor_point: anchorPointDescriptor,
            transform: {
                get: function () {
                    return transformInterface;
                }
            },
            active: {
                get: function(){
                    return elem.isInRange;
                }
            }
        });

        _thisLayerFunction.startTime = elem.data.st;
        _thisLayerFunction.index = elem.data.ind;
        _thisLayerFunction.source = elem.data.refId;
        _thisLayerFunction.height = elem.data.ty === 0 ? elem.data.h : 100;
        _thisLayerFunction.width = elem.data.ty === 0 ? elem.data.w : 100;
        _thisLayerFunction.inPoint = elem.data.ip/elem.comp.globalData.frameRate;
        _thisLayerFunction.outPoint = elem.data.op/elem.comp.globalData.frameRate;
        _thisLayerFunction._name = elem.data.nm;

        _thisLayerFunction.registerMaskInterface = _registerMaskInterface;
        _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface;
        return _thisLayerFunction;
    };
}());

var CompExpressionInterface = (function () {
    return function(comp) {
        function _thisLayerFunction(name) {
            var i = 0, len = comp.layers.length;
            while ( i < len) {
                if (comp.layers[i].nm === name || comp.layers[i].ind === name) {
                    return comp.elements[i].layerInterface;
                }
                i += 1;
            }
            return null;
            //return {active:false};
        }
        Object.defineProperty(_thisLayerFunction, "_name", { value: comp.data.nm });
        _thisLayerFunction.layer = _thisLayerFunction;
        _thisLayerFunction.pixelAspect = 1;
        _thisLayerFunction.height = comp.data.h || comp.globalData.compSize.h;
        _thisLayerFunction.width = comp.data.w || comp.globalData.compSize.w;
        _thisLayerFunction.pixelAspect = 1;
        _thisLayerFunction.frameDuration = 1 / comp.globalData.frameRate;
        _thisLayerFunction.displayStartTime = 0;
        _thisLayerFunction.numLayers = comp.layers.length;
        return _thisLayerFunction;
    };
}());
var TransformExpressionInterface = (function (){
    return function(transform){
        function _thisFunction(name){
            switch(name){
                case "scale":
                case "Scale":
                case "ADBE Scale":
                case 6:
                    return _thisFunction.scale;
                case "rotation":
                case "Rotation":
                case "ADBE Rotation":
                case "ADBE Rotate Z":
                case 10:
                    return _thisFunction.rotation;
                case "ADBE Rotate X":
                    return _thisFunction.xRotation;
                case "ADBE Rotate Y":
                    return _thisFunction.yRotation;
                case "position":
                case "Position":
                case "ADBE Position":
                case 2:
                    return _thisFunction.position;
                case 'ADBE Position_0':
                    return _thisFunction.xPosition;
                case 'ADBE Position_1':
                    return _thisFunction.yPosition;
                case 'ADBE Position_2':
                    return _thisFunction.zPosition;
                case "anchorPoint":
                case "AnchorPoint":
                case "Anchor Point":
                case "ADBE AnchorPoint":
                case 1:
                    return _thisFunction.anchorPoint;
                case "opacity":
                case "Opacity":
                case 11:
                    return _thisFunction.opacity;
            }
        }

        Object.defineProperty(_thisFunction, "rotation", {
            get: ExpressionPropertyInterface(transform.r || transform.rz)
        });

        Object.defineProperty(_thisFunction, "zRotation", {
            get: ExpressionPropertyInterface(transform.rz || transform.r)
        });

        Object.defineProperty(_thisFunction, "xRotation", {
            get: ExpressionPropertyInterface(transform.rx)
        });

        Object.defineProperty(_thisFunction, "yRotation", {
            get: ExpressionPropertyInterface(transform.ry)
        });
        Object.defineProperty(_thisFunction, "scale", {
            get: ExpressionPropertyInterface(transform.s)
        });

        if(transform.p) {
            var _transformFactory = ExpressionPropertyInterface(transform.p);
        } else {
            var _px = ExpressionPropertyInterface(transform.px);
            var _py = ExpressionPropertyInterface(transform.py);
            var _pz;
            if (transform.pz) {
                _pz = ExpressionPropertyInterface(transform.pz);
            }
        }
        Object.defineProperty(_thisFunction, "position", {
            get: function () {
                if(transform.p) {
                    return _transformFactory();
                } else {
                    return [
                        _px(),
                        _py(),
                        _pz ? _pz() : 0];
                }
            }
        });

        Object.defineProperty(_thisFunction, "xPosition", {
            get: ExpressionPropertyInterface(transform.px)
        });

        Object.defineProperty(_thisFunction, "yPosition", {
            get: ExpressionPropertyInterface(transform.py)
        });

        Object.defineProperty(_thisFunction, "zPosition", {
            get: ExpressionPropertyInterface(transform.pz)
        });

        Object.defineProperty(_thisFunction, "anchorPoint", {
            get: ExpressionPropertyInterface(transform.a)
        });

        Object.defineProperty(_thisFunction, "opacity", {
            get: ExpressionPropertyInterface(transform.o)
        });

        Object.defineProperty(_thisFunction, "skew", {
            get: ExpressionPropertyInterface(transform.sk)
        });

        Object.defineProperty(_thisFunction, "skewAxis", {
            get: ExpressionPropertyInterface(transform.sa)
        });

        Object.defineProperty(_thisFunction, "orientation", {
            get: ExpressionPropertyInterface(transform.or)
        });

        return _thisFunction;
    };
}());
var ProjectInterface = (function (){

    function registerComposition(comp){
        this.compositions.push(comp);
    }

    return function(){
        function _thisProjectFunction(name){
            var i = 0, len = this.compositions.length;
            while(i<len){
                if(this.compositions[i].data && this.compositions[i].data.nm === name){
                    if(this.compositions[i].prepareFrame && this.compositions[i].data.xt) {
                        this.compositions[i].prepareFrame(this.currentFrame);
                    }
                    return this.compositions[i].compInterface;
                }
                i+=1;
            }
        }

        _thisProjectFunction.compositions = [];
        _thisProjectFunction.currentFrame = 0;

        _thisProjectFunction.registerComposition = registerComposition;



        return _thisProjectFunction;
    };
}());
var EffectsExpressionInterface = (function (){
    var ob = {
        createEffectsInterface: createEffectsInterface
    };

    function createEffectsInterface(elem, propertyGroup){
        if(elem.effectsManager){

            var effectElements = [];
            var effectsData = elem.data.ef;
            var i, len = elem.effectsManager.effectElements.length;
            for(i=0;i<len;i+=1){
                effectElements.push(createGroupInterface(effectsData[i],elem.effectsManager.effectElements[i],propertyGroup,elem));
            }

            var effects = elem.data.ef || [];
            var groupInterface = function(name){
                i = 0, len = effects.length;
                while(i<len) {
                    if(name === effects[i].nm || name === effects[i].mn || name === effects[i].ix){
                        return effectElements[i];
                    }
                    i += 1;
                }
            };
            Object.defineProperty(groupInterface, 'numProperties', {
                get: function(){
                    return effects.length;
                }
            });
            return groupInterface
        }
    }

    function createGroupInterface(data,elements, propertyGroup, elem){

        function groupInterface(name){
            var effects = data.ef, i = 0, len = effects.length;
            while(i<len) {
                if(name === effects[i].nm || name === effects[i].mn || name === effects[i].ix){
                    if(effects[i].ty === 5){
                        return effectElements[i];
                    } else {
                        return effectElements[i]();
                    }
                }
                i += 1;
            }
            throw new Error();
        };
        var _propertyGroup = propertyGroupFactory(groupInterface, propertyGroup);

        var effectElements = [];
        var i, len = data.ef.length;
        for(i=0;i<len;i+=1){
            if(data.ef[i].ty === 5){
                effectElements.push(createGroupInterface(data.ef[i],elements.effectElements[i],elements.effectElements[i].propertyGroup, elem));
            } else {
                effectElements.push(createValueInterface(elements.effectElements[i],data.ef[i].ty, elem, _propertyGroup));
            }
        }

        if(data.mn === 'ADBE Color Control'){
            Object.defineProperty(groupInterface, 'color', {
                get: function(){
                    return effectElements[0]();
                }
            });
        }
        Object.defineProperties(groupInterface, {
            numProperties: {
                get: function(){
                    return data.np;
                }
            },
            _name: { value: data.nm },
            propertyGroup: {value: _propertyGroup},
        });
        groupInterface.active = groupInterface.enabled = data.en !== 0;
        return groupInterface;
    }

    function createValueInterface(element, type, elem, propertyGroup){
        var expressionProperty = ExpressionPropertyInterface(element.p);
        function interfaceFunction(){
            if(type === 10){
                return elem.comp.compInterface(element.p.v);
            }
            return expressionProperty();
        }

        if(element.p.setGroupProperty) {
            element.p.setGroupProperty(PropertyInterface('', propertyGroup));
        }

        return interfaceFunction;
    }

    return ob;

}());
var MaskManagerInterface = (function(){

	function MaskInterface(mask, data){
		this._mask = mask;
		this._data = data;
	}
	Object.defineProperty(MaskInterface.prototype, 'maskPath', {
        get: function(){
            if(this._mask.prop.k){
                this._mask.prop.getValue();
            }
            return this._mask.prop;
        }
    });
	Object.defineProperty(MaskInterface.prototype, 'maskOpacity', {
        get: function(){
            if(this._mask.op.k){
                this._mask.op.getValue();
            }
            return this._mask.op.v * 100;
        }
    });

	var MaskManager = function(maskManager, elem){
		var _maskManager = maskManager;
		var _elem = elem;
		var _masksInterfaces = createSizedArray(maskManager.viewData.length);
		var i, len = maskManager.viewData.length;
		for(i = 0; i < len; i += 1) {
			_masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i]);
		}

		var maskFunction = function(name){
			i = 0;
		    while(i<len){
		        if(maskManager.masksProperties[i].nm === name){
		            return _masksInterfaces[i];
		        }
		        i += 1;
		    }
		};
		return maskFunction;
	};
	return MaskManager;
}());

var ExpressionPropertyInterface = (function() {

    var defaultUnidimensionalValue = {pv:0, v:0, mult: 1}
    var defaultMultidimensionalValue = {pv:[0,0,0], v:[0,0,0], mult: 1}

    function completeProperty(expressionValue, property, type) {
        Object.defineProperty(expressionValue, 'velocity', {
            get: function(){
                return property.getVelocityAtTime(property.comp.currentFrame);
            }
        });
        expressionValue.numKeys = property.keyframes ? property.keyframes.length : 0;
        expressionValue.key = function(pos) {
            if (!expressionValue.numKeys) {
                return 0;
            } else {
                var value = '';
                if ('s' in property.keyframes[pos-1]) {
                    value = property.keyframes[pos-1].s;
                } else if ('e' in property.keyframes[pos-2]) {
                    value = property.keyframes[pos-2].e;
                } else {
                    value = property.keyframes[pos-2].s;
                }
                var valueProp = type === 'unidimensional' ? new Number(value) : Object.assign({}, value);
                valueProp.time = property.keyframes[pos-1].t / property.elem.comp.globalData.frameRate;
                valueProp.value = type === 'unidimensional' ? value[0] : value;
                return valueProp;
            }
        };
        expressionValue.valueAtTime = property.getValueAtTime;
        expressionValue.speedAtTime = property.getSpeedAtTime;
        expressionValue.velocityAtTime = property.getVelocityAtTime;
        expressionValue.propertyGroup = property.propertyGroup;
    }

    function UnidimensionalPropertyInterface(property) {
        if(!property || !('pv' in property)) {
            property = defaultUnidimensionalValue;
        }
        var mult = 1 / property.mult;
        var val = property.pv * mult;
        var expressionValue = new Number(val);
        expressionValue.value = val;
        completeProperty(expressionValue, property, 'unidimensional');

        return function() {
            if (property.k) {
                property.getValue();
            }
            val = property.v * mult;
            if(expressionValue.value !== val) {
                expressionValue = new Number(val);
                expressionValue.value = val;
                completeProperty(expressionValue, property, 'unidimensional');
            }
            return expressionValue;
        }
    }

    function MultidimensionalPropertyInterface(property) {
        if(!property || !('pv' in property)) {
            property = defaultMultidimensionalValue;
        }
        var mult = 1 / property.mult;
        var len = property.pv.length;
        var expressionValue = createTypedArray('float32', len);
        var arrValue = createTypedArray('float32', len);
        expressionValue.value = arrValue;
        completeProperty(expressionValue, property, 'multidimensional');

        return function() {
            if (property.k) {
                property.getValue();
            }
            for (var i = 0; i < len; i += 1) {
                expressionValue[i] = arrValue[i] = property.v[i] * mult;
            }
            return expressionValue;
        }
    }

    //TODO: try to avoid using this getter
    function defaultGetter() {
        return defaultUnidimensionalValue;
    }
    
    return function(property) {
        if(!property) {
            return defaultGetter;
        } else if (property.propType === 'unidimensional') {
            return UnidimensionalPropertyInterface(property);
        } else {
            return MultidimensionalPropertyInterface(property);
        }
    }
}());

(function(){

    var TextExpressionSelectorProp = (function(){

        function getValueProxy(index,total){
            this.textIndex = index+1;
            this.textTotal = total;
            this.v = this.getValue() * this.mult;
            return this.v;
        }

        return function TextExpressionSelectorProp(elem,data){
            this.pv = 1;
            this.comp = elem.comp;
            this.elem = elem;
            this.mult = 0.01;
            this.propType = 'textSelector';
            this.textTotal = data.totalChars;
            this.selectorValue = 100;
            this.lastValue = [1,1,1];
            this.k = true;
            this.x = true;
            this.getValue = ExpressionManager.initiateExpression.bind(this)(elem,data,this);
            this.getMult = getValueProxy;
            this.getVelocityAtTime = expressionHelpers.getVelocityAtTime;
            if(this.kf){
                this.getValueAtTime = expressionHelpers.getValueAtTime.bind(this);
            } else {
                this.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(this);
            }
            this.setGroupProperty = expressionHelpers.setGroupProperty;
        };
    }());

	var propertyGetTextProp = TextSelectorProp.getTextSelectorProp;
	TextSelectorProp.getTextSelectorProp = function(elem, data,arr){
	    if(data.t === 1){
	        return new TextExpressionSelectorProp(elem, data,arr);
	    } else {
	        return propertyGetTextProp(elem,data,arr);
	    }
	};
}());
function SliderEffect(data,elem, container){
    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);
}
function AngleEffect(data,elem, container){
    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);
}
function ColorEffect(data,elem, container){
    this.p = PropertyFactory.getProp(elem,data.v,1,0,container);
}
function PointEffect(data,elem, container){
    this.p = PropertyFactory.getProp(elem,data.v,1,0,container);
}
function LayerIndexEffect(data,elem, container){
    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);
}
function MaskIndexEffect(data,elem, container){
    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);
}
function CheckboxEffect(data,elem, container){
    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);
}
function NoValueEffect(){
    this.p = {};
}
function EffectsManager(){}
function EffectsManager(data,element){
    var effects = data.ef || [];
    this.effectElements = [];
    var i,len = effects.length;
    var effectItem;
    for(i=0;i<len;i++) {
        effectItem = new GroupEffect(effects[i],element);
        this.effectElements.push(effectItem);
    }
}

function GroupEffect(data,element){
    this.init(data,element);
}

extendPrototype([DynamicPropertyContainer], GroupEffect);

GroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties;

GroupEffect.prototype.init = function(data,element){
    this.data = data;
    this.effectElements = [];
    this.initDynamicPropertyContainer(element);
    var i, len = this.data.ef.length;
    var eff, effects = this.data.ef;
    for(i=0;i<len;i+=1){
        eff = null;
        switch(effects[i].ty){
            case 0:
                eff = new SliderEffect(effects[i],element,this);
                break;
            case 1:
                eff = new AngleEffect(effects[i],element,this);
                break;
            case 2:
                eff = new ColorEffect(effects[i],element,this);
                break;
            case 3:
                eff = new PointEffect(effects[i],element,this);
                break;
            case 4:
            case 7:
                eff = new CheckboxEffect(effects[i],element,this);
                break;
            case 10:
                eff = new LayerIndexEffect(effects[i],element,this);
                break;
            case 11:
                eff = new MaskIndexEffect(effects[i],element,this);
                break;
            case 5:
                eff = new EffectsManager(effects[i],element,this);
                break;
            //case 6:
            default:
                eff = new NoValueEffect(effects[i],element,this);
                break;
        }
        if(eff) {
            this.effectElements.push(eff);
        }
    }
};

var lottie = {};

var _isFrozen = false;

function setLocationHref (href) {
    locationHref = href;
}

function searchAnimations() {
    if (standalone === true) {
        animationManager.searchAnimations(animationData, standalone, renderer);
    } else {
        animationManager.searchAnimations();
    }
}

function setSubframeRendering(flag) {
    subframeEnabled = flag;
}

function loadAnimation(params) {
    if (standalone === true) {
        params.animationData = JSON.parse(animationData);
    }
    return animationManager.loadAnimation(params);
}

function setQuality(value) {
    if (typeof value === 'string') {
        switch (value) {
            case 'high':
                defaultCurveSegments = 200;
                break;
            case 'medium':
                defaultCurveSegments = 50;
                break;
            case 'low':
                defaultCurveSegments = 10;
                break;
        }
    } else if (!isNaN(value) && value > 1) {
        defaultCurveSegments = value;
    }
    if (defaultCurveSegments >= 50) {
        roundValues(false);
    } else {
        roundValues(true);
    }
}

function inBrowser() {
    return typeof navigator !== 'undefined';
}

function installPlugin(type, plugin) {
    if (type === 'expressions') {
        expressionsPlugin = plugin;
    }
}

function getFactory(name) {
    switch (name) {
        case "propertyFactory":
            return PropertyFactory;
        case "shapePropertyFactory":
            return ShapePropertyFactory;
        case "matrix":
            return Matrix;
    }
}

lottie.play = animationManager.play;
lottie.pause = animationManager.pause;
lottie.setLocationHref = setLocationHref;
lottie.togglePause = animationManager.togglePause;
lottie.setSpeed = animationManager.setSpeed;
lottie.setDirection = animationManager.setDirection;
lottie.stop = animationManager.stop;
lottie.searchAnimations = searchAnimations;
lottie.registerAnimation = animationManager.registerAnimation;
lottie.loadAnimation = loadAnimation;
lottie.setSubframeRendering = setSubframeRendering;
lottie.resize = animationManager.resize;
//lottie.start = start;
lottie.goToAndStop = animationManager.goToAndStop;
lottie.destroy = animationManager.destroy;
lottie.setQuality = setQuality;
lottie.inBrowser = inBrowser;
lottie.installPlugin = installPlugin;
lottie.freeze = animationManager.freeze;
lottie.unfreeze = animationManager.unfreeze;
lottie.setVolume = animationManager.setVolume;
lottie.mute = animationManager.mute;
lottie.unmute = animationManager.unmute;
lottie.getRegisteredAnimations = animationManager.getRegisteredAnimations;
lottie.__getFactory = getFactory;
lottie.version = '5.7.3';

function checkReady() {
    if (document.readyState === "complete") {
        clearInterval(readyStateCheckInterval);
        searchAnimations();
    }
}

function getQueryVariable(variable) {
    var vars = queryString.split('&');
    for (var i = 0; i < vars.length; i++) {
        var pair = vars[i].split('=');
        if (decodeURIComponent(pair[0]) == variable) {
            return decodeURIComponent(pair[1]);
        }
    }
}
var standalone = '__[STANDALONE]__';
var animationData = '__[ANIMATIONDATA]__';
var renderer = '';
if (standalone) {
    var scripts = document.getElementsByTagName('script');
    var index = scripts.length - 1;
    var myScript = scripts[index] || {
        src: ''
    };
    var queryString = myScript.src.replace(/^[^\?]+\??/, '');
    renderer = getQueryVariable('renderer');
}
var readyStateCheckInterval = setInterval(checkReady, 100);

return lottie;
}));

/***/ }),

/***/ "7863":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("4c09");
var global = __webpack_require__("5790");
var getBuiltIn = __webpack_require__("d332");
var IS_PURE = __webpack_require__("eb36");
var DESCRIPTORS = __webpack_require__("6a1f");
var NATIVE_SYMBOL = __webpack_require__("9408");
var USE_SYMBOL_AS_UID = __webpack_require__("7965");
var fails = __webpack_require__("83ab");
var has = __webpack_require__("db1b");
var isArray = __webpack_require__("e51b");
var isObject = __webpack_require__("f183");
var anObject = __webpack_require__("eb54");
var toObject = __webpack_require__("7cbc");
var toIndexedObject = __webpack_require__("d62d");
var toPrimitive = __webpack_require__("a759");
var createPropertyDescriptor = __webpack_require__("d64d");
var nativeObjectCreate = __webpack_require__("5285");
var objectKeys = __webpack_require__("3ff5");
var getOwnPropertyNamesModule = __webpack_require__("7674");
var getOwnPropertyNamesExternal = __webpack_require__("2df6");
var getOwnPropertySymbolsModule = __webpack_require__("f621");
var getOwnPropertyDescriptorModule = __webpack_require__("8408");
var definePropertyModule = __webpack_require__("64da");
var propertyIsEnumerableModule = __webpack_require__("8b74");
var createNonEnumerableProperty = __webpack_require__("d60b");
var redefine = __webpack_require__("619b");
var shared = __webpack_require__("8610");
var sharedKey = __webpack_require__("03b4");
var hiddenKeys = __webpack_require__("a0bb");
var uid = __webpack_require__("8920");
var wellKnownSymbol = __webpack_require__("c209");
var wrappedWellKnownSymbolModule = __webpack_require__("1d43");
var defineWellKnownSymbol = __webpack_require__("271f");
var setToStringTag = __webpack_require__("1a6b");
var InternalStateModule = __webpack_require__("797b");
var $forEach = __webpack_require__("faae").forEach;

var HIDDEN = sharedKey('hidden');
var SYMBOL = 'Symbol';
var PROTOTYPE = 'prototype';
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(SYMBOL);
var ObjectPrototype = Object[PROTOTYPE];
var $Symbol = global.Symbol;
var $stringify = getBuiltIn('JSON', 'stringify');
var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
var nativeDefineProperty = definePropertyModule.f;
var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
var nativePropertyIsEnumerable = propertyIsEnumerableModule.f;
var AllSymbols = shared('symbols');
var ObjectPrototypeSymbols = shared('op-symbols');
var StringToSymbolRegistry = shared('string-to-symbol-registry');
var SymbolToStringRegistry = shared('symbol-to-string-registry');
var WellKnownSymbolsStore = shared('wks');
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDescriptor = DESCRIPTORS && fails(function () {
  return nativeObjectCreate(nativeDefineProperty({}, 'a', {
    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (O, P, Attributes) {
  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);
  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];
  nativeDefineProperty(O, P, Attributes);
  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {
    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);
  }
} : nativeDefineProperty;

var wrap = function (tag, description) {
  var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);
  setInternalState(symbol, {
    type: SYMBOL,
    tag: tag,
    description: description
  });
  if (!DESCRIPTORS) symbol.description = description;
  return symbol;
};

var isSymbol = USE_SYMBOL_AS_UID ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return Object(it) instanceof $Symbol;
};

var $defineProperty = function defineProperty(O, P, Attributes) {
  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);
  anObject(O);
  var key = toPrimitive(P, true);
  anObject(Attributes);
  if (has(AllSymbols, key)) {
    if (!Attributes.enumerable) {
      if (!has(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));
      O[HIDDEN][key] = true;
    } else {
      if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;
      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });
    } return setSymbolDescriptor(O, key, Attributes);
  } return nativeDefineProperty(O, key, Attributes);
};

var $defineProperties = function defineProperties(O, Properties) {
  anObject(O);
  var properties = toIndexedObject(Properties);
  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));
  $forEach(keys, function (key) {
    if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);
  });
  return O;
};

var $create = function create(O, Properties) {
  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);
};

var $propertyIsEnumerable = function propertyIsEnumerable(V) {
  var P = toPrimitive(V, true);
  var enumerable = nativePropertyIsEnumerable.call(this, P);
  if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;
  return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;
};

var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {
  var it = toIndexedObject(O);
  var key = toPrimitive(P, true);
  if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;
  var descriptor = nativeGetOwnPropertyDescriptor(it, key);
  if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {
    descriptor.enumerable = true;
  }
  return descriptor;
};

var $getOwnPropertyNames = function getOwnPropertyNames(O) {
  var names = nativeGetOwnPropertyNames(toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);
  });
  return result;
};

var $getOwnPropertySymbols = function getOwnPropertySymbols(O) {
  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;
  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {
      result.push(AllSymbols[key]);
    }
  });
  return result;
};

// `Symbol` constructor
// https://tc39.github.io/ecma262/#sec-symbol-constructor
if (!NATIVE_SYMBOL) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');
    var description = !arguments.length || arguments[0] === undefined ? undefined : String(arguments[0]);
    var tag = uid(description);
    var setter = function (value) {
      if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));
    };
    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });
    return wrap(tag, description);
  };

  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return getInternalState(this).tag;
  });

  redefine($Symbol, 'withoutSetter', function (description) {
    return wrap(uid(description), description);
  });

  propertyIsEnumerableModule.f = $propertyIsEnumerable;
  definePropertyModule.f = $defineProperty;
  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;
  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;

  wrappedWellKnownSymbolModule.f = function (name) {
    return wrap(wellKnownSymbol(name), name);
  };

  if (DESCRIPTORS) {
    // https://github.com/tc39/proposal-Symbol-description
    nativeDefineProperty($Symbol[PROTOTYPE], 'description', {
      configurable: true,
      get: function description() {
        return getInternalState(this).description;
      }
    });
    if (!IS_PURE) {
      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });
    }
  }
}

$({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {
  Symbol: $Symbol
});

$forEach(objectKeys(WellKnownSymbolsStore), function (name) {
  defineWellKnownSymbol(name);
});

$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {
  // `Symbol.for` method
  // https://tc39.github.io/ecma262/#sec-symbol.for
  'for': function (key) {
    var string = String(key);
    if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];
    var symbol = $Symbol(string);
    StringToSymbolRegistry[string] = symbol;
    SymbolToStringRegistry[symbol] = string;
    return symbol;
  },
  // `Symbol.keyFor` method
  // https://tc39.github.io/ecma262/#sec-symbol.keyfor
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');
    if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];
  },
  useSetter: function () { USE_SETTER = true; },
  useSimple: function () { USE_SETTER = false; }
});

$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {
  // `Object.create` method
  // https://tc39.github.io/ecma262/#sec-object.create
  create: $create,
  // `Object.defineProperty` method
  // https://tc39.github.io/ecma262/#sec-object.defineproperty
  defineProperty: $defineProperty,
  // `Object.defineProperties` method
  // https://tc39.github.io/ecma262/#sec-object.defineproperties
  defineProperties: $defineProperties,
  // `Object.getOwnPropertyDescriptor` method
  // https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor
});

$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {
  // `Object.getOwnPropertyNames` method
  // https://tc39.github.io/ecma262/#sec-object.getownpropertynames
  getOwnPropertyNames: $getOwnPropertyNames,
  // `Object.getOwnPropertySymbols` method
  // https://tc39.github.io/ecma262/#sec-object.getownpropertysymbols
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
$({ target: 'Object', stat: true, forced: fails(function () { getOwnPropertySymbolsModule.f(1); }) }, {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return getOwnPropertySymbolsModule.f(toObject(it));
  }
});

// `JSON.stringify` method behavior with symbols
// https://tc39.github.io/ecma262/#sec-json.stringify
if ($stringify) {
  var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {
    var symbol = $Symbol();
    // MS Edge converts symbol values to JSON as {}
    return $stringify([symbol]) != '[null]'
      // WebKit converts symbol values to JSON as null
      || $stringify({ a: symbol }) != '{}'
      // V8 throws on boxed symbols
      || $stringify(Object(symbol)) != '{}';
  });

  $({ target: 'JSON', stat: true, forced: FORCED_JSON_STRINGIFY }, {
    // eslint-disable-next-line no-unused-vars
    stringify: function stringify(it, replacer, space) {
      var args = [it];
      var index = 1;
      var $replacer;
      while (arguments.length > index) args.push(arguments[index++]);
      $replacer = replacer;
      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
      if (!isArray(replacer)) replacer = function (key, value) {
        if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
        if (!isSymbol(value)) return value;
      };
      args[1] = replacer;
      return $stringify.apply(null, args);
    }
  });
}

// `Symbol.prototype[@@toPrimitive]` method
// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@toprimitive
if (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {
  createNonEnumerableProperty($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
}
// `Symbol.prototype[@@toStringTag]` property
// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@tostringtag
setToStringTag($Symbol, SYMBOL);

hiddenKeys[HIDDEN] = true;


/***/ }),

/***/ "7965":
/***/ (function(module, exports, __webpack_require__) {

var NATIVE_SYMBOL = __webpack_require__("9408");

module.exports = NATIVE_SYMBOL
  // eslint-disable-next-line no-undef
  && !Symbol.sham
  // eslint-disable-next-line no-undef
  && typeof Symbol.iterator == 'symbol';


/***/ }),

/***/ "797b":
/***/ (function(module, exports, __webpack_require__) {

var NATIVE_WEAK_MAP = __webpack_require__("1137");
var global = __webpack_require__("5790");
var isObject = __webpack_require__("f183");
var createNonEnumerableProperty = __webpack_require__("d60b");
var objectHas = __webpack_require__("db1b");
var sharedKey = __webpack_require__("03b4");
var hiddenKeys = __webpack_require__("a0bb");

var WeakMap = global.WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw TypeError('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP) {
  var store = new WeakMap();
  var wmget = store.get;
  var wmhas = store.has;
  var wmset = store.set;
  set = function (it, metadata) {
    wmset.call(store, it, metadata);
    return metadata;
  };
  get = function (it) {
    return wmget.call(store, it) || {};
  };
  has = function (it) {
    return wmhas.call(store, it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys[STATE] = true;
  set = function (it, metadata) {
    createNonEnumerableProperty(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return objectHas(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return objectHas(it, STATE);
  };
}

module.exports = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};


/***/ }),

/***/ "7cbc":
/***/ (function(module, exports, __webpack_require__) {

var requireObjectCoercible = __webpack_require__("f68c");

// `ToObject` abstract operation
// https://tc39.github.io/ecma262/#sec-toobject
module.exports = function (argument) {
  return Object(requireObjectCoercible(argument));
};


/***/ }),

/***/ "7d30":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("4c09");
var fails = __webpack_require__("83ab");
var toObject = __webpack_require__("7cbc");
var nativeGetPrototypeOf = __webpack_require__("8e7d");
var CORRECT_PROTOTYPE_GETTER = __webpack_require__("a314");

var FAILS_ON_PRIMITIVES = fails(function () { nativeGetPrototypeOf(1); });

// `Object.getPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.getprototypeof
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !CORRECT_PROTOTYPE_GETTER }, {
  getPrototypeOf: function getPrototypeOf(it) {
    return nativeGetPrototypeOf(toObject(it));
  }
});



/***/ }),

/***/ "7ed5":
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__("d332");

module.exports = getBuiltIn('navigator', 'userAgent') || '';


/***/ }),

/***/ "81f5":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("6a1f");
var definePropertyModule = __webpack_require__("64da");
var anObject = __webpack_require__("eb54");
var objectKeys = __webpack_require__("3ff5");

// `Object.defineProperties` method
// https://tc39.github.io/ecma262/#sec-object.defineproperties
module.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);
  return O;
};


/***/ }),

/***/ "823c":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("f183");
var isArray = __webpack_require__("e51b");
var wellKnownSymbol = __webpack_require__("c209");

var SPECIES = wellKnownSymbol('species');

// `ArraySpeciesCreate` abstract operation
// https://tc39.github.io/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray, length) {
  var C;
  if (isArray(originalArray)) {
    C = originalArray.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    else if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);
};


/***/ }),

/***/ "8330":
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__("d332");
var getOwnPropertyNamesModule = __webpack_require__("7674");
var getOwnPropertySymbolsModule = __webpack_require__("f621");
var anObject = __webpack_require__("eb54");

// all object keys, includes non-enumerable and symbols
module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;
};


/***/ }),

/***/ "83ab":
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};


/***/ }),

/***/ "8408":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("6a1f");
var propertyIsEnumerableModule = __webpack_require__("8b74");
var createPropertyDescriptor = __webpack_require__("d64d");
var toIndexedObject = __webpack_require__("d62d");
var toPrimitive = __webpack_require__("a759");
var has = __webpack_require__("db1b");
var IE8_DOM_DEFINE = __webpack_require__("1f64");

var nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor
exports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return nativeGetOwnPropertyDescriptor(O, P);
  } catch (error) { /* empty */ }
  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);
};


/***/ }),

/***/ "8610":
/***/ (function(module, exports, __webpack_require__) {

var IS_PURE = __webpack_require__("eb36");
var store = __webpack_require__("450a");

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.6.5',
  mode: IS_PURE ? 'pure' : 'global',
  copyright: '© 2020 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "8920":
/***/ (function(module, exports) {

var id = 0;
var postfix = Math.random();

module.exports = function (key) {
  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);
};


/***/ }),

/***/ "8b74":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var nativePropertyIsEnumerable = {}.propertyIsEnumerable;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable
exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : nativePropertyIsEnumerable;


/***/ }),

/***/ "8bbf":
/***/ (function(module, exports) {

module.exports = require("vue");

/***/ }),

/***/ "8e7d":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("db1b");
var toObject = __webpack_require__("7cbc");
var sharedKey = __webpack_require__("03b4");
var CORRECT_PROTOTYPE_GETTER = __webpack_require__("a314");

var IE_PROTO = sharedKey('IE_PROTO');
var ObjectPrototype = Object.prototype;

// `Object.getPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.getprototypeof
module.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectPrototype : null;
};


/***/ }),

/***/ "9408":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("83ab");

module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
  // Chrome 38 Symbol has incorrect toString conversion
  // eslint-disable-next-line no-undef
  return !String(Symbol());
});


/***/ }),

/***/ "98d7":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("c209");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var test = {};

test[TO_STRING_TAG] = 'z';

module.exports = String(test) === '[object z]';


/***/ }),

/***/ "9d93":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("c515");
var Iterators = __webpack_require__("3fd8");
var wellKnownSymbol = __webpack_require__("c209");

var ITERATOR = wellKnownSymbol('iterator');

module.exports = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "9e08":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("5790");
var userAgent = __webpack_require__("7ed5");

var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  version = match[0] + match[1];
} else if (userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = match[1];
  }
}

module.exports = version && +version;


/***/ }),

/***/ "a0bb":
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "a0c9":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("db1b");
var toIndexedObject = __webpack_require__("d62d");
var indexOf = __webpack_require__("3aed").indexOf;
var hiddenKeys = __webpack_require__("a0bb");

module.exports = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~indexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "a314":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("83ab");

module.exports = !fails(function () {
  function F() { /* empty */ }
  F.prototype.constructor = null;
  return Object.getPrototypeOf(new F()) !== F.prototype;
});


/***/ }),

/***/ "a31f":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("4c09");
var from = __webpack_require__("65bd");
var checkCorrectnessOfIteration = __webpack_require__("5cb4");

var INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {
  Array.from(iterable);
});

// `Array.from` method
// https://tc39.github.io/ecma262/#sec-array.from
$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {
  from: from
});


/***/ }),

/***/ "a4d8":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("6a1f");
var objectKeys = __webpack_require__("3ff5");
var toIndexedObject = __webpack_require__("d62d");
var propertyIsEnumerable = __webpack_require__("8b74").f;

// `Object.{ entries, values }` methods implementation
var createMethod = function (TO_ENTRIES) {
  return function (it) {
    var O = toIndexedObject(it);
    var keys = objectKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;
    while (length > i) {
      key = keys[i++];
      if (!DESCRIPTORS || propertyIsEnumerable.call(O, key)) {
        result.push(TO_ENTRIES ? [key, O[key]] : O[key]);
      }
    }
    return result;
  };
};

module.exports = {
  // `Object.entries` method
  // https://tc39.github.io/ecma262/#sec-object.entries
  entries: createMethod(true),
  // `Object.values` method
  // https://tc39.github.io/ecma262/#sec-object.values
  values: createMethod(false)
};


/***/ }),

/***/ "a6e3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("4c09");
var isObject = __webpack_require__("f183");
var isArray = __webpack_require__("e51b");
var toAbsoluteIndex = __webpack_require__("63a8");
var toLength = __webpack_require__("c4b4");
var toIndexedObject = __webpack_require__("d62d");
var createProperty = __webpack_require__("103d");
var wellKnownSymbol = __webpack_require__("c209");
var arrayMethodHasSpeciesSupport = __webpack_require__("6cc8");
var arrayMethodUsesToLength = __webpack_require__("069a");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');
var USES_TO_LENGTH = arrayMethodUsesToLength('slice', { ACCESSORS: true, 0: 0, 1: 2 });

var SPECIES = wellKnownSymbol('species');
var nativeSlice = [].slice;
var max = Math.max;

// `Array.prototype.slice` method
// https://tc39.github.io/ecma262/#sec-array.prototype.slice
// fallback for not array-like ES3 strings and DOM objects
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {
  slice: function slice(start, end) {
    var O = toIndexedObject(this);
    var length = toLength(O.length);
    var k = toAbsoluteIndex(start, length);
    var fin = toAbsoluteIndex(end === undefined ? length : end, length);
    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible
    var Constructor, result, n;
    if (isArray(O)) {
      Constructor = O.constructor;
      // cross-realm fallback
      if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {
        Constructor = undefined;
      } else if (isObject(Constructor)) {
        Constructor = Constructor[SPECIES];
        if (Constructor === null) Constructor = undefined;
      }
      if (Constructor === Array || Constructor === undefined) {
        return nativeSlice.call(O, k, fin);
      }
    }
    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));
    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);
    result.length = n;
    return result;
  }
});


/***/ }),

/***/ "a759":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("f183");

// `ToPrimitive` abstract operation
// https://tc39.github.io/ecma262/#sec-toprimitive
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (input, PREFERRED_STRING) {
  if (!isObject(input)) return input;
  var fn, val;
  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;
  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "a865":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("83ab");

var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true
    : value == NATIVE ? false
    : typeof detection == 'function' ? fails(detection)
    : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';

module.exports = isForced;


/***/ }),

/***/ "aa44":
/***/ (function(module, exports) {

// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
module.exports = {
  CSSRuleList: 0,
  CSSStyleDeclaration: 0,
  CSSValueList: 0,
  ClientRectList: 0,
  DOMRectList: 0,
  DOMStringList: 0,
  DOMTokenList: 1,
  DataTransferItemList: 0,
  FileList: 0,
  HTMLAllCollection: 0,
  HTMLCollection: 0,
  HTMLFormElement: 0,
  HTMLSelectElement: 0,
  MediaList: 0,
  MimeTypeArray: 0,
  NamedNodeMap: 0,
  NodeList: 1,
  PaintRequestList: 0,
  Plugin: 0,
  PluginArray: 0,
  SVGLengthList: 0,
  SVGNumberList: 0,
  SVGPathSegList: 0,
  SVGPointList: 0,
  SVGStringList: 0,
  SVGTransformList: 0,
  SourceBufferList: 0,
  StyleSheetList: 0,
  TextTrackCueList: 0,
  TextTrackList: 0,
  TouchList: 0
};


/***/ }),

/***/ "ab49":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("db1b");
var ownKeys = __webpack_require__("8330");
var getOwnPropertyDescriptorModule = __webpack_require__("8408");
var definePropertyModule = __webpack_require__("64da");

module.exports = function (target, source) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));
  }
};


/***/ }),

/***/ "ad90":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("eb54");
var aPossiblePrototype = __webpack_require__("607b");

// `Object.setPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
module.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var CORRECT_SETTER = false;
  var test = {};
  var setter;
  try {
    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;
    setter.call(test, []);
    CORRECT_SETTER = test instanceof Array;
  } catch (error) { /* empty */ }
  return function setPrototypeOf(O, proto) {
    anObject(O);
    aPossiblePrototype(proto);
    if (CORRECT_SETTER) setter.call(O, proto);
    else O.__proto__ = proto;
    return O;
  };
}() : undefined);


/***/ }),

/***/ "ae2d":
/***/ (function(module, exports) {

var ceil = Math.ceil;
var floor = Math.floor;

// `ToInteger` abstract operation
// https://tc39.github.io/ecma262/#sec-tointeger
module.exports = function (argument) {
  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);
};


/***/ }),

/***/ "b3b8":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("5790");
var DOMIterables = __webpack_require__("aa44");
var ArrayIteratorMethods = __webpack_require__("b69d");
var createNonEnumerableProperty = __webpack_require__("d60b");
var wellKnownSymbol = __webpack_require__("c209");

var ITERATOR = wellKnownSymbol('iterator');
var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var ArrayValues = ArrayIteratorMethods.values;

for (var COLLECTION_NAME in DOMIterables) {
  var Collection = global[COLLECTION_NAME];
  var CollectionPrototype = Collection && Collection.prototype;
  if (CollectionPrototype) {
    // some Chrome versions have non-configurable methods on DOMTokenList
    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {
      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);
    } catch (error) {
      CollectionPrototype[ITERATOR] = ArrayValues;
    }
    if (!CollectionPrototype[TO_STRING_TAG]) {
      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
    }
    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
      // some Chrome versions have non-configurable methods on DOMTokenList
      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
      } catch (error) {
        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
      }
    }
  }
}


/***/ }),

/***/ "b613":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// addapted from the document.currentScript polyfill by Adam Miller
// MIT license
// source: https://github.com/amiller-gh/currentScript-polyfill

// added support for Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1620505

(function (root, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
}(typeof self !== 'undefined' ? self : this, function () {
  function getCurrentScript () {
    var descriptor = Object.getOwnPropertyDescriptor(document, 'currentScript')
    // for chrome
    if (!descriptor && 'currentScript' in document && document.currentScript) {
      return document.currentScript
    }

    // for other browsers with native support for currentScript
    if (descriptor && descriptor.get !== getCurrentScript && document.currentScript) {
      return document.currentScript
    }
  
    // IE 8-10 support script readyState
    // IE 11+ & Firefox support stack trace
    try {
      throw new Error();
    }
    catch (err) {
      // Find the second match for the "at" string to get file src url from stack.
      var ieStackRegExp = /.*at [^(]*\((.*):(.+):(.+)\)$/ig,
        ffStackRegExp = /@([^@]*):(\d+):(\d+)\s*$/ig,
        stackDetails = ieStackRegExp.exec(err.stack) || ffStackRegExp.exec(err.stack),
        scriptLocation = (stackDetails && stackDetails[1]) || false,
        line = (stackDetails && stackDetails[2]) || false,
        currentLocation = document.location.href.replace(document.location.hash, ''),
        pageSource,
        inlineScriptSourceRegExp,
        inlineScriptSource,
        scripts = document.getElementsByTagName('script'); // Live NodeList collection
  
      if (scriptLocation === currentLocation) {
        pageSource = document.documentElement.outerHTML;
        inlineScriptSourceRegExp = new RegExp('(?:[^\\n]+?\\n){0,' + (line - 2) + '}[^<]*<script>([\\d\\D]*?)<\\/script>[\\d\\D]*', 'i');
        inlineScriptSource = pageSource.replace(inlineScriptSourceRegExp, '$1').trim();
      }
  
      for (var i = 0; i < scripts.length; i++) {
        // If ready state is interactive, return the script tag
        if (scripts[i].readyState === 'interactive') {
          return scripts[i];
        }
  
        // If src matches, return the script tag
        if (scripts[i].src === scriptLocation) {
          return scripts[i];
        }
  
        // If inline source matches, return the script tag
        if (
          scriptLocation === currentLocation &&
          scripts[i].innerHTML &&
          scripts[i].innerHTML.trim() === inlineScriptSource
        ) {
          return scripts[i];
        }
      }
  
      // If no match, return null
      return null;
    }
  };

  return getCurrentScript
}));


/***/ }),

/***/ "b69d":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toIndexedObject = __webpack_require__("d62d");
var addToUnscopables = __webpack_require__("6bd0");
var Iterators = __webpack_require__("3fd8");
var InternalStateModule = __webpack_require__("797b");
var defineIterator = __webpack_require__("c590");

var ARRAY_ITERATOR = 'Array Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.github.io/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.github.io/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.github.io/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.github.io/ecma262/#sec-createarrayiterator
module.exports = defineIterator(Array, 'Array', function (iterated, kind) {
  setInternalState(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject(iterated), // target
    index: 0,                          // next index
    kind: kind                         // kind
  });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState(this);
  var target = state.target;
  var kind = state.kind;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = undefined;
    return { value: undefined, done: true };
  }
  if (kind == 'keys') return { value: index, done: false };
  if (kind == 'values') return { value: target[index], done: false };
  return { value: [index, target[index]], done: false };
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject
// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject
Iterators.Arguments = Iterators.Array;

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "b8e5":
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__("450a");

var functionToString = Function.toString;

// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper
if (typeof store.inspectSource != 'function') {
  store.inspectSource = function (it) {
    return functionToString.call(it);
  };
}

module.exports = store.inspectSource;


/***/ }),

/***/ "ba72":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("c209");
var Iterators = __webpack_require__("3fd8");

var ITERATOR = wellKnownSymbol('iterator');
var ArrayPrototype = Array.prototype;

// check on default Array iterator
module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
};


/***/ }),

/***/ "bb88":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var anObject = __webpack_require__("eb54");

// `RegExp.prototype.flags` getter implementation
// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.dotAll) result += 's';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};


/***/ }),

/***/ "c209":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("5790");
var shared = __webpack_require__("8610");
var has = __webpack_require__("db1b");
var uid = __webpack_require__("8920");
var NATIVE_SYMBOL = __webpack_require__("9408");
var USE_SYMBOL_AS_UID = __webpack_require__("7965");

var WellKnownSymbolsStore = shared('wks');
var Symbol = global.Symbol;
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;

module.exports = function (name) {
  if (!has(WellKnownSymbolsStore, name)) {
    if (NATIVE_SYMBOL && has(Symbol, name)) WellKnownSymbolsStore[name] = Symbol[name];
    else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);
  } return WellKnownSymbolsStore[name];
};


/***/ }),

/***/ "c4b4":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("ae2d");

var min = Math.min;

// `ToLength` abstract operation
// https://tc39.github.io/ecma262/#sec-tolength
module.exports = function (argument) {
  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};


/***/ }),

/***/ "c515":
/***/ (function(module, exports, __webpack_require__) {

var TO_STRING_TAG_SUPPORT = __webpack_require__("98d7");
var classofRaw = __webpack_require__("5b59");
var wellKnownSymbol = __webpack_require__("c209");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw(O)
    // ES3 arguments fallback
    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;
};


/***/ }),

/***/ "c590":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("4c09");
var createIteratorConstructor = __webpack_require__("f30b");
var getPrototypeOf = __webpack_require__("8e7d");
var setPrototypeOf = __webpack_require__("ad90");
var setToStringTag = __webpack_require__("1a6b");
var createNonEnumerableProperty = __webpack_require__("d60b");
var redefine = __webpack_require__("619b");
var wellKnownSymbol = __webpack_require__("c209");
var IS_PURE = __webpack_require__("eb36");
var Iterators = __webpack_require__("3fd8");
var IteratorsCore = __webpack_require__("63aa");

var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR = wellKnownSymbol('iterator');
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';

var returnThis = function () { return this; };

module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  createIteratorConstructor(IteratorConstructor, NAME, next);

  var getIterationMethod = function (KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
    switch (KIND) {
      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
    } return function () { return new IteratorConstructor(this); };
  };

  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR]
    || IterablePrototype['@@iterator']
    || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;

  // fix native
  if (anyNativeIterator) {
    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
        if (setPrototypeOf) {
          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {
          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);
        }
      }
      // Set @@toStringTag to native iterators
      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
    }
  }

  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    INCORRECT_VALUES_NAME = true;
    defaultIterator = function values() { return nativeIterator.call(this); };
  }

  // define iterator
  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);
  }
  Iterators[NAME] = defaultIterator;

  // export additional methods
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        redefine(IterablePrototype, KEY, methods[KEY]);
      }
    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
  }

  return methods;
};


/***/ }),

/***/ "c618":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("ae2d");
var requireObjectCoercible = __webpack_require__("f68c");

// `String.prototype.{ codePointAt, at }` methods implementation
var createMethod = function (CONVERT_TO_STRING) {
  return function ($this, pos) {
    var S = String(requireObjectCoercible($this));
    var position = toInteger(pos);
    var size = S.length;
    var first, second;
    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
    first = S.charCodeAt(position);
    return first < 0xD800 || first > 0xDBFF || position + 1 === size
      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF
        ? CONVERT_TO_STRING ? S.charAt(position) : first
        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
  };
};

module.exports = {
  // `String.prototype.codePointAt` method
  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat
  codeAt: createMethod(false),
  // `String.prototype.at` method
  // https://github.com/mathiasbynens/String.prototype.at
  charAt: createMethod(true)
};


/***/ }),

/***/ "d2e8":
/***/ (function(module, exports, __webpack_require__) {

var TO_STRING_TAG_SUPPORT = __webpack_require__("98d7");
var redefine = __webpack_require__("619b");
var toString = __webpack_require__("4826");

// `Object.prototype.toString` method
// https://tc39.github.io/ecma262/#sec-object.prototype.tostring
if (!TO_STRING_TAG_SUPPORT) {
  redefine(Object.prototype, 'toString', toString, { unsafe: true });
}


/***/ }),

/***/ "d332":
/***/ (function(module, exports, __webpack_require__) {

var path = __webpack_require__("42b2");
var global = __webpack_require__("5790");

var aFunction = function (variable) {
  return typeof variable == 'function' ? variable : undefined;
};

module.exports = function (namespace, method) {
  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])
    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];
};


/***/ }),

/***/ "d60b":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("6a1f");
var definePropertyModule = __webpack_require__("64da");
var createPropertyDescriptor = __webpack_require__("d64d");

module.exports = DESCRIPTORS ? function (object, key, value) {
  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "d62d":
/***/ (function(module, exports, __webpack_require__) {

// toObject with fallback for non-array-like ES3 strings
var IndexedObject = __webpack_require__("33b3");
var requireObjectCoercible = __webpack_require__("f68c");

module.exports = function (it) {
  return IndexedObject(requireObjectCoercible(it));
};


/***/ }),

/***/ "d64d":
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "db1b":
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;

module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "db86":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("5790");
var isObject = __webpack_require__("f183");

var document = global.document;
// typeof document.createElement is 'object' in old IE
var EXISTS = isObject(document) && isObject(document.createElement);

module.exports = function (it) {
  return EXISTS ? document.createElement(it) : {};
};


/***/ }),

/***/ "dbc8":
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__("271f");

// `Symbol.iterator` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.iterator
defineWellKnownSymbol('iterator');


/***/ }),

/***/ "dcf1":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var charAt = __webpack_require__("c618").charAt;
var InternalStateModule = __webpack_require__("797b");
var defineIterator = __webpack_require__("c590");

var STRING_ITERATOR = 'String Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);

// `String.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator
defineIterator(String, 'String', function (iterated) {
  setInternalState(this, {
    type: STRING_ITERATOR,
    string: String(iterated),
    index: 0
  });
// `%StringIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next
}, function next() {
  var state = getInternalState(this);
  var string = state.string;
  var index = state.index;
  var point;
  if (index >= string.length) return { value: undefined, done: true };
  point = charAt(string, index);
  state.index += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "dee3":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "default", function() { return /* binding */ addStylesClient; });

// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/vue-style-loader/lib/listToStyles.js
/**
 * Translates the list format produced by css-loader into something
 * easier to manipulate.
 */
function listToStyles (parentId, list) {
  var styles = []
  var newStyles = {}
  for (var i = 0; i < list.length; i++) {
    var item = list[i]
    var id = item[0]
    var css = item[1]
    var media = item[2]
    var sourceMap = item[3]
    var part = {
      id: parentId + ':' + i,
      css: css,
      media: media,
      sourceMap: sourceMap
    }
    if (!newStyles[id]) {
      styles.push(newStyles[id] = { id: id, parts: [part] })
    } else {
      newStyles[id].parts.push(part)
    }
  }
  return styles
}

// CONCATENATED MODULE: C:/Users/mizucoffee/Dropbox/100_SYNC/working_dir/vue-lit-kansai/node_modules/vue-style-loader/lib/addStylesClient.js
/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
  Modified by Evan You @yyx990803
*/



var hasDocument = typeof document !== 'undefined'

if (typeof DEBUG !== 'undefined' && DEBUG) {
  if (!hasDocument) {
    throw new Error(
    'vue-style-loader cannot be used in a non-browser environment. ' +
    "Use { target: 'node' } in your Webpack config to indicate a server-rendering environment."
  ) }
}

/*
type StyleObject = {
  id: number;
  parts: Array<StyleObjectPart>
}

type StyleObjectPart = {
  css: string;
  media: string;
  sourceMap: ?string
}
*/

var stylesInDom = {/*
  [id: number]: {
    id: number,
    refs: number,
    parts: Array<(obj?: StyleObjectPart) => void>
  }
*/}

var head = hasDocument && (document.head || document.getElementsByTagName('head')[0])
var singletonElement = null
var singletonCounter = 0
var isProduction = false
var noop = function () {}
var options = null
var ssrIdKey = 'data-vue-ssr-id'

// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
// tags it will allow on a page
var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\b/.test(navigator.userAgent.toLowerCase())

function addStylesClient (parentId, list, _isProduction, _options) {
  isProduction = _isProduction

  options = _options || {}

  var styles = listToStyles(parentId, list)
  addStylesToDom(styles)

  return function update (newList) {
    var mayRemove = []
    for (var i = 0; i < styles.length; i++) {
      var item = styles[i]
      var domStyle = stylesInDom[item.id]
      domStyle.refs--
      mayRemove.push(domStyle)
    }
    if (newList) {
      styles = listToStyles(parentId, newList)
      addStylesToDom(styles)
    } else {
      styles = []
    }
    for (var i = 0; i < mayRemove.length; i++) {
      var domStyle = mayRemove[i]
      if (domStyle.refs === 0) {
        for (var j = 0; j < domStyle.parts.length; j++) {
          domStyle.parts[j]()
        }
        delete stylesInDom[domStyle.id]
      }
    }
  }
}

function addStylesToDom (styles /* Array<StyleObject> */) {
  for (var i = 0; i < styles.length; i++) {
    var item = styles[i]
    var domStyle = stylesInDom[item.id]
    if (domStyle) {
      domStyle.refs++
      for (var j = 0; j < domStyle.parts.length; j++) {
        domStyle.parts[j](item.parts[j])
      }
      for (; j < item.parts.length; j++) {
        domStyle.parts.push(addStyle(item.parts[j]))
      }
      if (domStyle.parts.length > item.parts.length) {
        domStyle.parts.length = item.parts.length
      }
    } else {
      var parts = []
      for (var j = 0; j < item.parts.length; j++) {
        parts.push(addStyle(item.parts[j]))
      }
      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }
    }
  }
}

function createStyleElement () {
  var styleElement = document.createElement('style')
  styleElement.type = 'text/css'
  head.appendChild(styleElement)
  return styleElement
}

function addStyle (obj /* StyleObjectPart */) {
  var update, remove
  var styleElement = document.querySelector('style[' + ssrIdKey + '~="' + obj.id + '"]')

  if (styleElement) {
    if (isProduction) {
      // has SSR styles and in production mode.
      // simply do nothing.
      return noop
    } else {
      // has SSR styles but in dev mode.
      // for some reason Chrome can't handle source map in server-rendered
      // style tags - source maps in <style> only works if the style tag is
      // created and inserted dynamically. So we remove the server rendered
      // styles and inject new ones.
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  if (isOldIE) {
    // use singleton mode for IE9.
    var styleIndex = singletonCounter++
    styleElement = singletonElement || (singletonElement = createStyleElement())
    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)
    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)
  } else {
    // use multi-style-tag mode in all other cases
    styleElement = createStyleElement()
    update = applyToTag.bind(null, styleElement)
    remove = function () {
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  update(obj)

  return function updateStyle (newObj /* StyleObjectPart */) {
    if (newObj) {
      if (newObj.css === obj.css &&
          newObj.media === obj.media &&
          newObj.sourceMap === obj.sourceMap) {
        return
      }
      update(obj = newObj)
    } else {
      remove()
    }
  }
}

var replaceText = (function () {
  var textStore = []

  return function (index, replacement) {
    textStore[index] = replacement
    return textStore.filter(Boolean).join('\n')
  }
})()

function applyToSingletonTag (styleElement, index, remove, obj) {
  var css = remove ? '' : obj.css

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = replaceText(index, css)
  } else {
    var cssNode = document.createTextNode(css)
    var childNodes = styleElement.childNodes
    if (childNodes[index]) styleElement.removeChild(childNodes[index])
    if (childNodes.length) {
      styleElement.insertBefore(cssNode, childNodes[index])
    } else {
      styleElement.appendChild(cssNode)
    }
  }
}

function applyToTag (styleElement, obj) {
  var css = obj.css
  var media = obj.media
  var sourceMap = obj.sourceMap

  if (media) {
    styleElement.setAttribute('media', media)
  }
  if (options.ssrId) {
    styleElement.setAttribute(ssrIdKey, obj.id)
  }

  if (sourceMap) {
    // https://developer.chrome.com/devtools/docs/javascript-debugging
    // this makes source maps inside style tags work properly in Chrome
    css += '\n/*# sourceURL=' + sourceMap.sources[0] + ' */'
    // http://stackoverflow.com/a/26603875
    css += '\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'
  }

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild)
    }
    styleElement.appendChild(document.createTextNode(css))
  }
}


/***/ }),

/***/ "e230":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("5790");
var createNonEnumerableProperty = __webpack_require__("d60b");

module.exports = function (key, value) {
  try {
    createNonEnumerableProperty(global, key, value);
  } catch (error) {
    global[key] = value;
  } return value;
};


/***/ }),

/***/ "e332":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var aFunction = __webpack_require__("3fca");
var isObject = __webpack_require__("f183");

var slice = [].slice;
var factories = {};

var construct = function (C, argsLength, args) {
  if (!(argsLength in factories)) {
    for (var list = [], i = 0; i < argsLength; i++) list[i] = 'a[' + i + ']';
    // eslint-disable-next-line no-new-func
    factories[argsLength] = Function('C,a', 'return new C(' + list.join(',') + ')');
  } return factories[argsLength](C, args);
};

// `Function.prototype.bind` method implementation
// https://tc39.github.io/ecma262/#sec-function.prototype.bind
module.exports = Function.bind || function bind(that /* , ...args */) {
  var fn = aFunction(this);
  var partArgs = slice.call(arguments, 1);
  var boundFunction = function bound(/* args... */) {
    var args = partArgs.concat(slice.call(arguments));
    return this instanceof boundFunction ? construct(fn, args.length, args) : fn.apply(that, args);
  };
  if (isObject(fn.prototype)) boundFunction.prototype = fn.prototype;
  return boundFunction;
};


/***/ }),

/***/ "e51b":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("5b59");

// `IsArray` abstract operation
// https://tc39.github.io/ecma262/#sec-isarray
module.exports = Array.isArray || function isArray(arg) {
  return classof(arg) == 'Array';
};


/***/ }),

/***/ "eb36":
/***/ (function(module, exports) {

module.exports = false;


/***/ }),

/***/ "eb54":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("f183");

module.exports = function (it) {
  if (!isObject(it)) {
    throw TypeError(String(it) + ' is not an object');
  } return it;
};


/***/ }),

/***/ "eff8":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("f2a4");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__("dee3").default
var update = add("4821ef74", content, true, {"sourceMap":false,"shadowMode":false});

/***/ }),

/***/ "f183":
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "f2a4":
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__("f9db");
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, "#splash[data-v-5f337128]{background:#fcfcfc;position:fixed;width:100vw;height:100%;top:0;left:0;z-index:500;display:flex;justify-content:center;align-items:center}#splash-logo[data-v-5f337128]{max-width:400px;width:75%}.fade-enter-active[data-v-5f337128],.fade-leave-active[data-v-5f337128]{transition:opacity .5s}.fade-enter[data-v-5f337128],.fade-leave-to[data-v-5f337128]{opacity:0}", ""]);
// Exports
module.exports = exports;


/***/ }),

/***/ "f30b":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var IteratorPrototype = __webpack_require__("63aa").IteratorPrototype;
var create = __webpack_require__("5285");
var createPropertyDescriptor = __webpack_require__("d64d");
var setToStringTag = __webpack_require__("1a6b");
var Iterators = __webpack_require__("3fd8");

var returnThis = function () { return this; };

module.exports = function (IteratorConstructor, NAME, next) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });
  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
  Iterators[TO_STRING_TAG] = returnThis;
  return IteratorConstructor;
};


/***/ }),

/***/ "f49d":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_LiTKansaiSplash_vue_vue_type_style_index_0_id_5f337128_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("eff8");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_LiTKansaiSplash_vue_vue_type_style_index_0_id_5f337128_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_LiTKansaiSplash_vue_vue_type_style_index_0_id_5f337128_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__);
/* unused harmony reexport * */
 /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_LiTKansaiSplash_vue_vue_type_style_index_0_id_5f337128_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "f621":
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "f68c":
/***/ (function(module, exports) {

// `RequireObjectCoercible` abstract operation
// https://tc39.github.io/ecma262/#sec-requireobjectcoercible
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on " + it);
  return it;
};


/***/ }),

/***/ "f9db":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
module.exports = function (useSourceMap) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item, useSourceMap);

      if (item[2]) {
        return "@media ".concat(item[2], " {").concat(content, "}");
      }

      return content;
    }).join('');
  }; // import a list of modules into the list
  // eslint-disable-next-line func-names


  list.i = function (modules, mediaQuery, dedupe) {
    if (typeof modules === 'string') {
      // eslint-disable-next-line no-param-reassign
      modules = [[null, modules, '']];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var i = 0; i < this.length; i++) {
        // eslint-disable-next-line prefer-destructuring
        var id = this[i][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _i = 0; _i < modules.length; _i++) {
      var item = [].concat(modules[_i]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        // eslint-disable-next-line no-continue
        continue;
      }

      if (mediaQuery) {
        if (!item[2]) {
          item[2] = mediaQuery;
        } else {
          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
        }
      }

      list.push(item);
    }
  };

  return list;
};

function cssWithMappingToString(item, useSourceMap) {
  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring

  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (useSourceMap && typeof btoa === 'function') {
    var sourceMapping = toComment(cssMapping);
    var sourceURLs = cssMapping.sources.map(function (source) {
      return "/*# sourceURL=".concat(cssMapping.sourceRoot || '').concat(source, " */");
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
  }

  return [content].join('\n');
} // Adapted from convert-source-map (MIT)


function toComment(sourceMap) {
  // eslint-disable-next-line no-undef
  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
  var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
  return "/*# ".concat(data, " */");
}

/***/ }),

/***/ "faae":
/***/ (function(module, exports, __webpack_require__) {

var bind = __webpack_require__("4bc9");
var IndexedObject = __webpack_require__("33b3");
var toObject = __webpack_require__("7cbc");
var toLength = __webpack_require__("c4b4");
var arraySpeciesCreate = __webpack_require__("823c");

var push = [].push;

// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation
var createMethod = function (TYPE) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  return function ($this, callbackfn, that, specificCreate) {
    var O = toObject($this);
    var self = IndexedObject(O);
    var boundFunction = bind(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var create = specificCreate || arraySpeciesCreate;
    var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var value, result;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      value = self[index];
      result = boundFunction(value, index, O);
      if (TYPE) {
        if (IS_MAP) target[index] = result; // map
        else if (result) switch (TYPE) {
          case 3: return true;              // some
          case 5: return value;             // find
          case 6: return index;             // findIndex
          case 2: push.call(target, value); // filter
        } else if (IS_EVERY) return false;  // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
  };
};

module.exports = {
  // `Array.prototype.forEach` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.foreach
  forEach: createMethod(0),
  // `Array.prototype.map` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.map
  map: createMethod(1),
  // `Array.prototype.filter` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.filter
  filter: createMethod(2),
  // `Array.prototype.some` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.some
  some: createMethod(3),
  // `Array.prototype.every` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.every
  every: createMethod(4),
  // `Array.prototype.find` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.find
  find: createMethod(5),
  // `Array.prototype.findIndex` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex
  findIndex: createMethod(6)
};


/***/ })

/******/ });
//# sourceMappingURL=vue-lit-kansai.common.js.map